{
  "version": 3,
  "sources": ["../../@inkeep/widgets/dist/prism-python-47c53c27.mjs"],
  "sourcesContent": ["Prism.languages.python = {\r\n  comment: {\r\n    pattern: /(^|[^\\\\])#.*/,\r\n    lookbehind: !0,\r\n    greedy: !0\r\n  },\r\n  \"string-interpolation\": {\r\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\r\n    greedy: !0,\r\n    inside: {\r\n      interpolation: {\r\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\r\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\r\n        lookbehind: !0,\r\n        inside: {\r\n          \"format-spec\": {\r\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\r\n            lookbehind: !0\r\n          },\r\n          \"conversion-option\": {\r\n            pattern: /![sra](?=[:}]$)/,\r\n            alias: \"punctuation\"\r\n          },\r\n          rest: null\r\n        }\r\n      },\r\n      string: /[\\s\\S]+/\r\n    }\r\n  },\r\n  \"triple-quoted-string\": {\r\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\r\n    greedy: !0,\r\n    alias: \"string\"\r\n  },\r\n  string: {\r\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\r\n    greedy: !0\r\n  },\r\n  function: {\r\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\r\n    lookbehind: !0\r\n  },\r\n  \"class-name\": {\r\n    pattern: /(\\bclass\\s+)\\w+/i,\r\n    lookbehind: !0\r\n  },\r\n  decorator: {\r\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\r\n    lookbehind: !0,\r\n    alias: [\"annotation\", \"punctuation\"],\r\n    inside: {\r\n      punctuation: /\\./\r\n    }\r\n  },\r\n  keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\r\n  builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\r\n  boolean: /\\b(?:False|None|True)\\b/,\r\n  number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\r\n  operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\r\n  punctuation: /[{}[\\];(),.:]/\r\n};\r\nPrism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest = Prism.languages.python;\r\nPrism.languages.py = Prism.languages.python;\r\n"],
  "mappings": ";AAAA,MAAM,UAAU,SAAS;AAAA,EACvB,SAAS;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AAAA,EACA,wBAAwB;AAAA,IACtB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,eAAe;AAAA;AAAA,QAEb,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,UACN,eAAe;AAAA,YACb,SAAS;AAAA,YACT,YAAY;AAAA,UACd;AAAA,UACA,qBAAqB;AAAA,YACnB,SAAS;AAAA,YACT,OAAO;AAAA,UACT;AAAA,UACA,MAAM;AAAA,QACR;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,wBAAwB;AAAA,IACtB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,EACT;AAAA,EACA,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,QAAQ;AAAA,EACV;AAAA,EACA,UAAU;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,EACd;AAAA,EACA,cAAc;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,EACd;AAAA,EACA,WAAW;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO,CAAC,cAAc,aAAa;AAAA,IACnC,QAAQ;AAAA,MACN,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAa;AACf;AACA,MAAM,UAAU,OAAO,sBAAsB,EAAE,OAAO,cAAc,OAAO,OAAO,MAAM,UAAU;AAClG,MAAM,UAAU,KAAK,MAAM,UAAU;",
  "names": []
}
