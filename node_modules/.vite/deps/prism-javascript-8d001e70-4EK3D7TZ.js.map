{
  "version": 3,
  "sources": ["../../@inkeep/widgets/dist/prism-javascript-8d001e70.mjs"],
  "sourcesContent": ["Prism.languages.javascript = Prism.languages.extend(\"clike\", {\n  \"class-name\": [\n    Prism.languages.clike[\"class-name\"],\n    {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n      lookbehind: !0\n    }\n  ],\n  keyword: [\n    {\n      pattern: /((?:^|\\})\\s*)catch\\b/,\n      lookbehind: !0\n    },\n    {\n      pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: !0\n    }\n  ],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  number: {\n    pattern: RegExp(\n      /(^|[^\\w$])/.source + \"(?:\" + // constant\n      (/NaN|Infinity/.source + \"|\" + // binary integer\n      /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + // octal integer\n      /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + // hexadecimal integer\n      /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + // decimal bigint\n      /\\d+(?:_\\d+)*n/.source + \"|\" + // decimal number (integer or float) but no bigint\n      /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + \")\" + /(?![\\w$])/.source\n    ),\n    lookbehind: !0\n  },\n  operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore(\"javascript\", \"keyword\", {\n  regex: {\n    pattern: RegExp(\n      // lookbehind\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + // Regex pattern:\n      // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n      // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n      // with the only syntax, so we have to define 2 different regex patterns.\n      /\\//.source + \"(?:\" + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + \"|\" + // `v` flag syntax. This supports 3 levels of nested character classes.\n      /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + \")\" + // lookahead\n      /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n    ),\n    lookbehind: !0,\n    greedy: !0,\n    inside: {\n      \"regex-source\": {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: !0,\n        alias: \"language-regex\",\n        inside: Prism.languages.regex\n      },\n      \"regex-delimiter\": /^\\/|\\/$/,\n      \"regex-flags\": /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  \"function-variable\": {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: \"function\"\n  },\n  parameter: [\n    {\n      pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n      lookbehind: !0,\n      inside: Prism.languages.javascript\n    },\n    {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n      lookbehind: !0,\n      inside: Prism.languages.javascript\n    },\n    {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n      lookbehind: !0,\n      inside: Prism.languages.javascript\n    },\n    {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n      lookbehind: !0,\n      inside: Prism.languages.javascript\n    }\n  ],\n  constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore(\"javascript\", \"string\", {\n  hashbang: {\n    pattern: /^#!.*/,\n    greedy: !0,\n    alias: \"comment\"\n  },\n  \"template-string\": {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: !0,\n    inside: {\n      \"template-punctuation\": {\n        pattern: /^`|`$/,\n        alias: \"string\"\n      },\n      interpolation: {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: !0,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^\\$\\{|\\}$/,\n            alias: \"punctuation\"\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  \"string-property\": {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: !0,\n    greedy: !0,\n    alias: \"property\"\n  }\n});\nPrism.languages.insertBefore(\"javascript\", \"operator\", {\n  \"literal-property\": {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: !0,\n    alias: \"property\"\n  }\n});\nPrism.languages.markup && (Prism.languages.markup.tag.addInlined(\"script\", \"javascript\"), Prism.languages.markup.tag.addAttribute(\n  /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n  \"javascript\"\n));\nPrism.languages.js = Prism.languages.javascript;\n"],
  "mappings": "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",
  "names": []
}
