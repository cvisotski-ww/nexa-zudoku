{
  "version": 3,
  "sources": ["../../zudoku/src/lib/components/ClientOnly.tsx", "../../zudoku/src/lib/plugins/search-inkeep/inkeep.ts", "../../zudoku/src/lib/plugins/search-inkeep/index.tsx"],
  "sourcesContent": ["import { useSyncExternalStore } from \"react\";\n\nconst noop = () => () => {};\n\nexport const ClientOnly = (props: { children: React.ReactNode }) => {\n  const value = useSyncExternalStore(\n    noop,\n    () => \"client\",\n    () => \"server\",\n  );\n\n  return value === \"client\" ? props.children : null;\n};\n", "import {\n  InkeepAIChatSettings,\n  InkeepModalSettings,\n  InkeepSearchSettings,\n} from \"@inkeep/widgets\";\n\nconst baseSettings = {\n  theme: {\n    components: {\n      AIChatPageWrapper: {\n        defaultProps: {\n          size: \"shrink-vertically\",\n          variant: \"no-shadow\",\n        },\n      },\n      SearchBarTrigger: {\n        defaultProps: {\n          size: \"expand\",\n          variant: \"subtle\", // Choose from 'emphasized' or 'subtle'\n        },\n      },\n    },\n  },\n} as const;\n\nconst modalSettings: InkeepModalSettings = {};\n\nconst searchSettings: InkeepSearchSettings = {};\n\nconst aiChatSettings: InkeepAIChatSettings = {};\n\nexport { aiChatSettings, baseSettings, modalSettings, searchSettings };\n", "import type { InkeepWidgetBaseSettings } from \"@inkeep/widgets\";\nimport { lazy } from \"react\";\nimport { ClientOnly } from \"../../components/ClientOnly.js\";\nimport type { DevPortalPlugin } from \"../../core/plugins.js\";\nimport { aiChatSettings, baseSettings } from \"./inkeep.js\";\n\ntype PickedPluginInkeepBaseSettings =\n  | \"apiKey\"\n  | \"integrationId\"\n  | \"organizationId\"\n  | \"primaryBrandColor\"\n  | \"organizationDisplayName\";\n\ntype PluginInkeepBaseSettings = Pick<\n  InkeepWidgetBaseSettings,\n  PickedPluginInkeepBaseSettings\n>;\n\nconst Inkeep = lazy(() => import(\"./InkeepCustomTrigger.js\"));\n\nconst InkeepSearch = ({\n  prefilledQuery,\n  isOpen,\n  onClose,\n  settings,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  prefilledQuery?: string | null;\n  settings: PluginInkeepBaseSettings;\n}) => {\n  return (\n    <Inkeep\n      isOpen={isOpen}\n      onClose={onClose}\n      baseSettings={{ ...baseSettings, ...settings }}\n      aiChatSettings={aiChatSettings}\n      searchSettings={{\n        prefilledQuery: prefilledQuery || undefined,\n      }}\n    />\n  );\n};\n\nexport const inkeepSearchPlugin = (\n  settings: PluginInkeepBaseSettings,\n): DevPortalPlugin => {\n  return {\n    renderSearch: ({\n      isOpen,\n      onClose,\n    }: {\n      isOpen: boolean;\n      onClose: () => void;\n    }) => {\n      return (\n        <ClientOnly>\n          <InkeepSearch isOpen={isOpen} onClose={onClose} settings={settings} />\n        </ClientOnly>\n      );\n    },\n  };\n};\n"],
  "mappings": ";;;;;;;;;;;;AAEA,IAAMA,IAAO,MAAM,MAAM;AAAC;AAA1B,IAEaC,IAAa,CAACC,UACXC,aAAAA;EACZH;EACA,MAAM;EACN,MAAM;AAAA,MAGS,WAAWE,EAAM,WAAW;AAT/C,ICIME,IAAe;EACnB,OAAO;IACL,YAAY;MACV,mBAAmB;QACjB,cAAc;UACZ,MAAM;UACN,SAAS;QACX;MACF;MACA,kBAAkB;QAChB,cAAc;UACZ,MAAM;UACN,SAAS;;QACX;MACF;IACF;EACF;AACF;ADrBA,IC2BMC,IAAuC,CAAC;AD3B9C,IEgBMC,QAASC,aAAAA,MAAK,MAAM,OAAO,4CAA0B,CAAC;AFhB5D,IEkBMC,IAAe,CAAC;EACpB,gBAAAC;EACA,QAAAC;EACA,SAAAC;EACA,UAAAC;AACF,MAOIC,GAAA;EAACP;EAAA;IACC,QAAAI;IACA,SAAAC;IACA,cAAc,EAAE,GAAGP,GAAc,GAAGQ,EAAS;IAC7C,gBAAAP;IACA,gBAAgB;MACd,gBAAgBI,KAAkB;IACpC;EAAA;AAAA;AFrCN,IE0CaK,IAAqB,CAChCF,OAEO;EACL,cAAc,CAAC;IACb,QAAAF;IACA,SAAAC;EAAA,MAAA,GAAA,IAMGV,GACC,EAAA,UAAAY,GAAAA,IAACL,GAAAA,EAAa,QAAAE,GAAgB,SAAAC,GAAkB,UAAAC,EAAoB,CAAA,EACtE,CAAA;AAEJ;",
  "names": ["noop", "ClientOnly", "props", "useSyncExternalStore", "baseSettings", "aiChatSettings", "Inkeep", "lazy", "InkeepSearch", "prefilledQuery", "isOpen", "onClose", "settings", "jsx", "inkeepSearchPlugin"]
}
