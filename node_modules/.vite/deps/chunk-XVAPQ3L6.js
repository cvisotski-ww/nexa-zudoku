import {
  Ci,
  Ee,
  Oi,
  Si,
  Ve,
  ce,
  oe,
  w
} from "./chunk-U2VGALBW.js";
import {
  at
} from "./chunk-3OF3BEL3.js";
import {
  dr
} from "./chunk-6RCMS4PX.js";
import {
  require_react
} from "./chunk-BG45W2ER.js";
import {
  __toESM
} from "./chunk-HXA6O6EE.js";

// node_modules/zudoku/lib/DeveloperHint-BE9DzNhv.js
var n = ({
  children: s,
  className: t
}) => {
  if (true)
    return dr.jsx(at, { type: "caution", title: "Developer hint", className: t, children: dr.jsxs("div", { className: "flex flex-col gap-2", children: [
      dr.jsx("div", { children: s }),
      dr.jsx("small", { className: "italic", children: "Note: This hint is only shown in development mode." })
    ] }) });
};

// node_modules/zudoku/lib/index-Dvh1BL_e.js
var n2 = __toESM(require_react(), 1);
var import_react = __toESM(require_react(), 1);
var H = (0, import_react.createContext)({ stagger: false });
var X = ({ children: e }) => {
  const { stagger: r } = (0, import_react.useContext)(H), [o, a] = (0, import_react.useState)(!r);
  return (0, import_react.useEffect)(() => {
    if (o)
      return;
    const t = requestIdleCallback(() => {
      a(true);
    });
    return () => cancelIdleCallback(t);
  }, [o]), o ? e : import_react.Children.toArray(e).slice(0, 3);
};
var g = "Collapsible";
var [z, Y] = Ci(g);
var [J, R] = z(g);
var S = n2.forwardRef(
  (e, r) => {
    const {
      __scopeCollapsible: o,
      open: a,
      defaultOpen: t,
      disabled: i,
      onOpenChange: l,
      ...f
    } = e, [p = false, d] = Si({
      prop: a,
      defaultProp: t,
      onChange: l
    });
    return dr.jsx(
      J,
      {
        scope: o,
        disabled: i,
        contentId: Oi(),
        open: p,
        onOpenToggle: n2.useCallback(() => d((C) => !C), [d]),
        children: dr.jsx(
          oe.div,
          {
            "data-state": x(p),
            "data-disabled": i ? "" : void 0,
            ...f,
            ref: r
          }
        )
      }
    );
  }
);
S.displayName = g;
var _ = "CollapsibleTrigger";
var I = n2.forwardRef(
  (e, r) => {
    const { __scopeCollapsible: o, ...a } = e, t = R(_, o);
    return dr.jsx(
      oe.button,
      {
        type: "button",
        "aria-controls": t.contentId,
        "aria-expanded": t.open || false,
        "data-state": x(t.open),
        "data-disabled": t.disabled ? "" : void 0,
        disabled: t.disabled,
        ...a,
        ref: r,
        onClick: Ve(e.onClick, t.onOpenToggle)
      }
    );
  }
);
I.displayName = _;
var v = "CollapsibleContent";
var T = n2.forwardRef(
  (e, r) => {
    const { forceMount: o, ...a } = e, t = R(v, e.__scopeCollapsible);
    return dr.jsx(w, { present: o || t.open, children: ({ present: i }) => dr.jsx(K, { ...a, ref: r, present: i }) });
  }
);
T.displayName = v;
var K = n2.forwardRef((e, r) => {
  const { __scopeCollapsible: o, present: a, children: t, ...i } = e, l = R(v, o), [f, p] = n2.useState(a), d = n2.useRef(null), C = ce(r, d), h = n2.useRef(0), y = h.current, P = n2.useRef(0), N = P.current, m = l.open || f, A = n2.useRef(m), u = n2.useRef();
  return n2.useEffect(() => {
    const s = requestAnimationFrame(() => A.current = false);
    return () => cancelAnimationFrame(s);
  }, []), Ee(() => {
    const s = d.current;
    if (s) {
      u.current = u.current || {
        transitionDuration: s.style.transitionDuration,
        animationName: s.style.animationName
      }, s.style.transitionDuration = "0s", s.style.animationName = "none";
      const E = s.getBoundingClientRect();
      h.current = E.height, P.current = E.width, A.current || (s.style.transitionDuration = u.current.transitionDuration, s.style.animationName = u.current.animationName), p(a);
    }
  }, [l.open, a]), dr.jsx(
    oe.div,
    {
      "data-state": x(l.open),
      "data-disabled": l.disabled ? "" : void 0,
      id: l.contentId,
      hidden: !m,
      ...i,
      ref: C,
      style: {
        "--radix-collapsible-content-height": y ? `${y}px` : void 0,
        "--radix-collapsible-content-width": N ? `${N}px` : void 0,
        ...e.style
      },
      children: m && t
    }
  );
});
function x(e) {
  return e ? "open" : "closed";
}
var Z = S;
var ee = I;
var te = T;

export {
  n,
  H,
  X,
  Z,
  ee,
  te
};
//# sourceMappingURL=chunk-XVAPQ3L6.js.map
