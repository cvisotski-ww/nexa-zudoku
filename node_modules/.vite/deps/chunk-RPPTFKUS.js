import {
  L,
  Nt,
  f,
  je,
  ke2 as ke,
  o
} from "./chunk-JRUNZBCC.js";
import {
  dr
} from "./chunk-VJHVP7KM.js";
import {
  require_react
} from "./chunk-DDZAXPWP.js";
import {
  __toESM
} from "./chunk-HXA6O6EE.js";

// node_modules/zudoku/lib/utils-Chi3p5nE.js
var import_react = __toESM(require_react(), 1);
var ce = Object.defineProperty;
var le = (e, t, r) => t in e ? ce(e, t, { enumerable: true, configurable: true, writable: true, value: r }) : e[t] = r;
var T = (e, t, r) => le(e, typeof t != "symbol" ? t + "" : t, r);
var _ = {};
var N = import_react.default.createContext(_);
function de(e) {
  const t = import_react.default.useContext(N);
  return import_react.default.useMemo(
    function() {
      return typeof e == "function" ? e(t) : { ...t, ...e };
    },
    [t, e]
  );
}
function We(e) {
  let t;
  return e.disableParentContext ? t = typeof e.components == "function" ? e.components(_) : e.components || _ : t = de(e.components), import_react.default.createElement(
    N.Provider,
    { value: t },
    e.children
  );
}
var pe = typeof Element < "u";
var he = typeof Map == "function";
var me = typeof Set == "function";
var ye = typeof ArrayBuffer == "function" && !!ArrayBuffer.isView;
function P(e, t) {
  if (e === t) return true;
  if (e && t && typeof e == "object" && typeof t == "object") {
    if (e.constructor !== t.constructor) return false;
    var r, n, s;
    if (Array.isArray(e)) {
      if (r = e.length, r != t.length) return false;
      for (n = r; n-- !== 0; )
        if (!P(e[n], t[n])) return false;
      return true;
    }
    var o2;
    if (he && e instanceof Map && t instanceof Map) {
      if (e.size !== t.size) return false;
      for (o2 = e.entries(); !(n = o2.next()).done; )
        if (!t.has(n.value[0])) return false;
      for (o2 = e.entries(); !(n = o2.next()).done; )
        if (!P(n.value[1], t.get(n.value[0]))) return false;
      return true;
    }
    if (me && e instanceof Set && t instanceof Set) {
      if (e.size !== t.size) return false;
      for (o2 = e.entries(); !(n = o2.next()).done; )
        if (!t.has(n.value[0])) return false;
      return true;
    }
    if (ye && ArrayBuffer.isView(e) && ArrayBuffer.isView(t)) {
      if (r = e.length, r != t.length) return false;
      for (n = r; n-- !== 0; )
        if (e[n] !== t[n]) return false;
      return true;
    }
    if (e.constructor === RegExp) return e.source === t.source && e.flags === t.flags;
    if (e.valueOf !== Object.prototype.valueOf && typeof e.valueOf == "function" && typeof t.valueOf == "function") return e.valueOf() === t.valueOf();
    if (e.toString !== Object.prototype.toString && typeof e.toString == "function" && typeof t.toString == "function") return e.toString() === t.toString();
    if (s = Object.keys(e), r = s.length, r !== Object.keys(t).length) return false;
    for (n = r; n-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(t, s[n])) return false;
    if (pe && e instanceof Element) return false;
    for (n = r; n-- !== 0; )
      if (!((s[n] === "_owner" || s[n] === "__v" || s[n] === "__o") && e.$$typeof) && !P(e[s[n]], t[s[n]]))
        return false;
    return true;
  }
  return e !== e && t !== t;
}
var Te = function(t, r) {
  try {
    return P(t, r);
  } catch (n) {
    if ((n.message || "").match(/stack|recursion/i))
      return console.warn("react-fast-compare cannot handle circular refs"), false;
    throw n;
  }
};
var ge = f(Te);
var ve = function(e, t, r, n, s, o2, l, i) {
  if (t === void 0)
    throw new Error("invariant requires an error message argument");
  if (!e) {
    var a;
    if (t === void 0)
      a = new Error(
        "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
      );
    else {
      var c = [r, n, s, o2, l, i], u = 0;
      a = new Error(
        t.replace(/%s/g, function() {
          return c[u++];
        })
      ), a.name = "Invariant Violation";
    }
    throw a.framesToPop = 1, a;
  }
};
var Ae = ve;
var X = f(Ae);
var be = function(t, r, n, s) {
  var o2 = n ? n.call(s, t, r) : void 0;
  if (o2 !== void 0)
    return !!o2;
  if (t === r)
    return true;
  if (typeof t != "object" || !t || typeof r != "object" || !r)
    return false;
  var l = Object.keys(t), i = Object.keys(r);
  if (l.length !== i.length)
    return false;
  for (var a = Object.prototype.hasOwnProperty.bind(r), c = 0; c < l.length; c++) {
    var u = l[c];
    if (!a(u))
      return false;
    var f2 = t[u], m = r[u];
    if (o2 = n ? n.call(s, f2, m, u) : void 0, o2 === false || o2 === void 0 && f2 !== m)
      return false;
  }
  return true;
};
var Ce = f(be);
var ee = ((e) => (e.BASE = "base", e.BODY = "body", e.HEAD = "head", e.HTML = "html", e.LINK = "link", e.META = "meta", e.NOSCRIPT = "noscript", e.SCRIPT = "script", e.STYLE = "style", e.TITLE = "title", e.FRAGMENT = "Symbol(react.fragment)", e))(ee || {});
var D = {
  link: { rel: ["amphtml", "canonical", "alternate"] },
  script: { type: ["application/ld+json"] },
  meta: {
    charset: "",
    name: ["generator", "robots", "description"],
    property: [
      "og:type",
      "og:title",
      "og:url",
      "og:image",
      "og:image:alt",
      "og:description",
      "twitter:url",
      "twitter:title",
      "twitter:description",
      "twitter:image",
      "twitter:image:alt",
      "twitter:card",
      "twitter:site"
    ]
  }
};
var Z = Object.values(ee);
var z = {
  accesskey: "accessKey",
  charset: "charSet",
  class: "className",
  contenteditable: "contentEditable",
  contextmenu: "contextMenu",
  "http-equiv": "httpEquiv",
  itemprop: "itemProp",
  tabindex: "tabIndex"
};
var Ee = Object.entries(z).reduce(
  (e, [t, r]) => (e[r] = t, e),
  {}
);
var y = "data-rh";
var b = {
  DEFAULT_TITLE: "defaultTitle",
  DEFER: "defer",
  ENCODE_SPECIAL_CHARACTERS: "encodeSpecialCharacters",
  ON_CHANGE_CLIENT_STATE: "onChangeClientState",
  TITLE_TEMPLATE: "titleTemplate",
  PRIORITIZE_SEO_TAGS: "prioritizeSeoTags"
};
var C = (e, t) => {
  for (let r = e.length - 1; r >= 0; r -= 1) {
    const n = e[r];
    if (Object.prototype.hasOwnProperty.call(n, t))
      return n[t];
  }
  return null;
};
var Oe = (e) => {
  let t = C(
    e,
    "title"
    /* TITLE */
  );
  const r = C(e, b.TITLE_TEMPLATE);
  if (Array.isArray(t) && (t = t.join("")), r && t)
    return r.replace(/%s/g, () => t);
  const n = C(e, b.DEFAULT_TITLE);
  return t || n || void 0;
};
var Se = (e) => C(e, b.ON_CHANGE_CLIENT_STATE) || (() => {
});
var M = (e, t) => t.filter((r) => typeof r[e] < "u").map((r) => r[e]).reduce((r, n) => ({ ...r, ...n }), {});
var we = (e, t) => t.filter((r) => typeof r.base < "u").map((r) => r.base).reverse().reduce((r, n) => {
  if (!r.length) {
    const s = Object.keys(n);
    for (let o2 = 0; o2 < s.length; o2 += 1) {
      const i = s[o2].toLowerCase();
      if (e.indexOf(i) !== -1 && n[i])
        return r.concat(n);
    }
  }
  return r;
}, []);
var xe = (e) => console && typeof console.warn == "function" && console.warn(e);
var E = (e, t, r) => {
  const n = {};
  return r.filter((s) => Array.isArray(s[e]) ? true : (typeof s[e] < "u" && xe(
    `Helmet: ${e} should be of type "Array". Instead found type "${typeof s[e]}"`
  ), false)).map((s) => s[e]).reverse().reduce((s, o2) => {
    const l = {};
    o2.filter((a) => {
      let c;
      const u = Object.keys(a);
      for (let m = 0; m < u.length; m += 1) {
        const d = u[m], g = d.toLowerCase();
        t.indexOf(g) !== -1 && !(c === "rel" && a[c].toLowerCase() === "canonical") && !(g === "rel" && a[g].toLowerCase() === "stylesheet") && (c = g), t.indexOf(d) !== -1 && (d === "innerHTML" || d === "cssText" || d === "itemprop") && (c = d);
      }
      if (!c || !a[c])
        return false;
      const f2 = a[c].toLowerCase();
      return n[c] || (n[c] = {}), l[c] || (l[c] = {}), n[c][f2] ? false : (l[c][f2] = true, true);
    }).reverse().forEach((a) => s.push(a));
    const i = Object.keys(l);
    for (let a = 0; a < i.length; a += 1) {
      const c = i[a], u = {
        ...n[c],
        ...l[c]
      };
      n[c] = u;
    }
    return s;
  }, []).reverse();
};
var Pe = (e, t) => {
  if (Array.isArray(e) && e.length) {
    for (let r = 0; r < e.length; r += 1)
      if (e[r][t])
        return true;
  }
  return false;
};
var ke2 = (e) => ({
  baseTag: we([
    "href"
    /* HREF */
  ], e),
  bodyAttributes: M("bodyAttributes", e),
  defer: C(e, b.DEFER),
  encode: C(e, b.ENCODE_SPECIAL_CHARACTERS),
  htmlAttributes: M("htmlAttributes", e),
  linkTags: E(
    "link",
    [
      "rel",
      "href"
      /* HREF */
    ],
    e
  ),
  metaTags: E(
    "meta",
    [
      "name",
      "charset",
      "http-equiv",
      "property",
      "itemprop"
      /* ITEM_PROP */
    ],
    e
  ),
  noscriptTags: E("noscript", [
    "innerHTML"
    /* INNER_HTML */
  ], e),
  onChangeClientState: Se(e),
  scriptTags: E(
    "script",
    [
      "src",
      "innerHTML"
      /* INNER_HTML */
    ],
    e
  ),
  styleTags: E("style", [
    "cssText"
    /* CSS_TEXT */
  ], e),
  title: Oe(e),
  titleAttributes: M("titleAttributes", e),
  prioritizeSeoTags: Pe(e, b.PRIORITIZE_SEO_TAGS)
});
var te = (e) => Array.isArray(e) ? e.join("") : e;
var $e = (e, t) => {
  const r = Object.keys(e);
  for (let n = 0; n < r.length; n += 1)
    if (t[r[n]] && t[r[n]].includes(e[r[n]]))
      return true;
  return false;
};
var I = (e, t) => Array.isArray(e) ? e.reduce(
  (r, n) => ($e(n, t) ? r.priority.push(n) : r.default.push(n), r),
  { priority: [], default: [] }
) : { default: e, priority: [] };
var W = (e, t) => ({
  ...e,
  [t]: void 0
});
var De = [
  "noscript",
  "script",
  "style"
  /* STYLE */
];
var R = (e, t = true) => t === false ? String(e) : String(e).replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27;");
var re = (e) => Object.keys(e).reduce((t, r) => {
  const n = typeof e[r] < "u" ? `${r}="${e[r]}"` : `${r}`;
  return t ? `${t} ${n}` : n;
}, "");
var Me = (e, t, r, n) => {
  const s = re(r), o2 = te(t);
  return s ? `<${e} ${y}="true" ${s}>${R(
    o2,
    n
  )}</${e}>` : `<${e} ${y}="true">${R(
    o2,
    n
  )}</${e}>`;
};
var Ie = (e, t, r = true) => t.reduce((n, s) => {
  const o2 = s, l = Object.keys(o2).filter(
    (c) => !(c === "innerHTML" || c === "cssText")
  ).reduce((c, u) => {
    const f2 = typeof o2[u] > "u" ? u : `${u}="${R(o2[u], r)}"`;
    return c ? `${c} ${f2}` : f2;
  }, ""), i = o2.innerHTML || o2.cssText || "", a = De.indexOf(e) === -1;
  return `${n}<${e} ${y}="true" ${l}${a ? "/>" : `>${i}</${e}>`}`;
}, "");
var ne = (e, t = {}) => Object.keys(e).reduce((r, n) => {
  const s = z[n];
  return r[s || n] = e[n], r;
}, t);
var He = (e, t, r) => {
  const n = {
    key: t,
    [y]: true
  }, s = ne(r, n);
  return [import_react.default.createElement("title", s, t)];
};
var k = (e, t) => t.map((r, n) => {
  const s = {
    key: n,
    [y]: true
  };
  return Object.keys(r).forEach((o2) => {
    const i = z[o2] || o2;
    if (i === "innerHTML" || i === "cssText") {
      const a = r.innerHTML || r.cssText;
      s.dangerouslySetInnerHTML = { __html: a };
    } else
      s[i] = r[o2];
  }), import_react.default.createElement(e, s);
});
var p = (e, t, r = true) => {
  switch (e) {
    case "title":
      return {
        toComponent: () => He(e, t.title, t.titleAttributes),
        toString: () => Me(e, t.title, t.titleAttributes, r)
      };
    case "bodyAttributes":
    case "htmlAttributes":
      return {
        toComponent: () => ne(t),
        toString: () => re(t)
      };
    default:
      return {
        toComponent: () => k(e, t),
        toString: () => Ie(e, t, r)
      };
  }
};
var _e = ({ metaTags: e, linkTags: t, scriptTags: r, encode: n }) => {
  const s = I(e, D.meta), o2 = I(t, D.link), l = I(r, D.script);
  return {
    priorityMethods: {
      toComponent: () => [
        ...k("meta", s.priority),
        ...k("link", o2.priority),
        ...k("script", l.priority)
      ],
      toString: () => (
        // generate all the tags as strings and concatenate them
        `${p("meta", s.priority, n)} ${p(
          "link",
          o2.priority,
          n
        )} ${p("script", l.priority, n)}`
      )
    },
    metaTags: s.default,
    linkTags: o2.default,
    scriptTags: l.default
  };
};
var Re = (e) => {
  const {
    baseTag: t,
    bodyAttributes: r,
    encode: n = true,
    htmlAttributes: s,
    noscriptTags: o2,
    styleTags: l,
    title: i = "",
    titleAttributes: a,
    prioritizeSeoTags: c
  } = e;
  let { linkTags: u, metaTags: f2, scriptTags: m } = e, d = {
    toComponent: () => {
    },
    toString: () => ""
  };
  return c && ({ priorityMethods: d, linkTags: u, metaTags: f2, scriptTags: m } = _e(e)), {
    priority: d,
    base: p("base", t, n),
    bodyAttributes: p("bodyAttributes", r, n),
    htmlAttributes: p("htmlAttributes", s, n),
    link: p("link", u, n),
    meta: p("meta", f2, n),
    noscript: p("noscript", o2, n),
    script: p("script", m, n),
    style: p("style", l, n),
    title: p("title", { title: i, titleAttributes: a }, n)
  };
};
var j = Re;
var x = [];
var se = !!(typeof window < "u" && window.document && window.document.createElement);
var L2 = class {
  constructor(e, t) {
    T(this, "instances", []);
    T(this, "canUseDOM", se);
    T(this, "context");
    T(this, "value", {
      setHelmet: (e2) => {
        this.context.helmet = e2;
      },
      helmetInstances: {
        get: () => this.canUseDOM ? x : this.instances,
        add: (e2) => {
          (this.canUseDOM ? x : this.instances).push(e2);
        },
        remove: (e2) => {
          const t2 = (this.canUseDOM ? x : this.instances).indexOf(e2);
          (this.canUseDOM ? x : this.instances).splice(t2, 1);
        }
      }
    });
    this.context = e, this.canUseDOM = t || false, t || (e.helmet = j({
      baseTag: [],
      bodyAttributes: {},
      encodeSpecialCharacters: true,
      htmlAttributes: {},
      linkTags: [],
      metaTags: [],
      noscriptTags: [],
      scriptTags: [],
      styleTags: [],
      title: "",
      titleAttributes: {}
    }));
  }
};
var je2 = {};
var oe = import_react.default.createContext(je2);
var v;
var Le = (v = class extends import_react.Component {
  constructor(r) {
    super(r);
    T(this, "helmetData");
    this.helmetData = new L2(this.props.context || {}, v.canUseDOM);
  }
  render() {
    return import_react.default.createElement(oe.Provider, { value: this.helmetData.value }, this.props.children);
  }
}, T(v, "canUseDOM", se), v);
var A = (e, t) => {
  const r = document.head || document.querySelector(
    "head"
    /* HEAD */
  ), n = r.querySelectorAll(`${e}[${y}]`), s = [].slice.call(n), o2 = [];
  let l;
  return t && t.length && t.forEach((i) => {
    const a = document.createElement(e);
    for (const c in i)
      if (Object.prototype.hasOwnProperty.call(i, c))
        if (c === "innerHTML")
          a.innerHTML = i.innerHTML;
        else if (c === "cssText")
          a.styleSheet ? a.styleSheet.cssText = i.cssText : a.appendChild(document.createTextNode(i.cssText));
        else {
          const u = c, f2 = typeof i[u] > "u" ? "" : i[u];
          a.setAttribute(c, f2);
        }
    a.setAttribute(y, "true"), s.some((c, u) => (l = u, a.isEqualNode(c))) ? s.splice(l, 1) : o2.push(a);
  }), s.forEach((i) => {
    var a;
    return (a = i.parentNode) == null ? void 0 : a.removeChild(i);
  }), o2.forEach((i) => r.appendChild(i)), {
    oldTags: s,
    newTags: o2
  };
};
var F = (e, t) => {
  const r = document.getElementsByTagName(e)[0];
  if (!r)
    return;
  const n = r.getAttribute(y), s = n ? n.split(",") : [], o2 = [...s], l = Object.keys(t);
  for (const i of l) {
    const a = t[i] || "";
    r.getAttribute(i) !== a && r.setAttribute(i, a), s.indexOf(i) === -1 && s.push(i);
    const c = o2.indexOf(i);
    c !== -1 && o2.splice(c, 1);
  }
  for (let i = o2.length - 1; i >= 0; i -= 1)
    r.removeAttribute(o2[i]);
  s.length === o2.length ? r.removeAttribute(y) : r.getAttribute(y) !== l.join(",") && r.setAttribute(y, l.join(","));
};
var Fe = (e, t) => {
  typeof e < "u" && document.title !== e && (document.title = te(e)), F("title", t);
};
var G = (e, t) => {
  const {
    baseTag: r,
    bodyAttributes: n,
    htmlAttributes: s,
    linkTags: o2,
    metaTags: l,
    noscriptTags: i,
    onChangeClientState: a,
    scriptTags: c,
    styleTags: u,
    title: f2,
    titleAttributes: m
  } = e;
  F("body", n), F("html", s), Fe(f2, m);
  const d = {
    baseTag: A("base", r),
    linkTags: A("link", o2),
    metaTags: A("meta", l),
    noscriptTags: A("noscript", i),
    scriptTags: A("script", c),
    styleTags: A("style", u)
  }, g = {}, Y = {};
  Object.keys(d).forEach((w) => {
    const { newTags: B, oldTags: ae } = d[w];
    B.length && (g[w] = B), ae.length && (Y[w] = d[w].oldTags);
  }), t && t(), a(e, g, Y);
};
var O = null;
var Ue = (e) => {
  O && cancelAnimationFrame(O), e.defer ? O = requestAnimationFrame(() => {
    G(e, () => {
      O = null;
    });
  }) : (G(e), O = null);
};
var qe = Ue;
var J = class extends import_react.Component {
  constructor() {
    super(...arguments);
    T(this, "rendered", false);
  }
  shouldComponentUpdate(t) {
    return !Ce(t, this.props);
  }
  componentDidUpdate() {
    this.emitChange();
  }
  componentWillUnmount() {
    const { helmetInstances: t } = this.props.context;
    t.remove(this), this.emitChange();
  }
  emitChange() {
    const { helmetInstances: t, setHelmet: r } = this.props.context;
    let n = null;
    const s = ke2(
      t.get().map((o2) => {
        const l = { ...o2.props };
        return delete l.context, l;
      })
    );
    Le.canUseDOM ? qe(s) : j && (n = j(s)), r(n);
  }
  // componentWillMount will be deprecated
  // for SSR, initialize on first render
  // constructor is also unsafe in StrictMode
  init() {
    if (this.rendered)
      return;
    this.rendered = true;
    const { helmetInstances: t } = this.props.context;
    t.add(this), this.emitChange();
  }
  render() {
    return this.init(), null;
  }
};
var H;
var Ge = (H = class extends import_react.Component {
  shouldComponentUpdate(e) {
    return !ge(W(this.props, "helmetData"), W(e, "helmetData"));
  }
  mapNestedChildrenToProps(e, t) {
    if (!t)
      return null;
    switch (e.type) {
      case "script":
      case "noscript":
        return {
          innerHTML: t
        };
      case "style":
        return {
          cssText: t
        };
      default:
        throw new Error(
          `<${e.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`
        );
    }
  }
  flattenArrayTypeChildren(e, t, r, n) {
    return {
      ...t,
      [e.type]: [
        ...t[e.type] || [],
        {
          ...r,
          ...this.mapNestedChildrenToProps(e, n)
        }
      ]
    };
  }
  mapObjectTypeChildren(e, t, r, n) {
    switch (e.type) {
      case "title":
        return {
          ...t,
          [e.type]: n,
          titleAttributes: { ...r }
        };
      case "body":
        return {
          ...t,
          bodyAttributes: { ...r }
        };
      case "html":
        return {
          ...t,
          htmlAttributes: { ...r }
        };
      default:
        return {
          ...t,
          [e.type]: { ...r }
        };
    }
  }
  mapArrayTypeChildrenToProps(e, t) {
    let r = { ...t };
    return Object.keys(e).forEach((n) => {
      r = {
        ...r,
        [n]: e[n]
      };
    }), r;
  }
  warnOnInvalidChildren(e, t) {
    return X(
      Z.some((r) => e.type === r),
      typeof e.type == "function" ? "You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information." : `Only elements types ${Z.join(
        ", "
      )} are allowed. Helmet does not support rendering <${e.type}> elements. Refer to our API for more information.`
    ), X(
      !t || typeof t == "string" || Array.isArray(t) && !t.some((r) => typeof r != "string"),
      `Helmet expects a string as a child of <${e.type}>. Did you forget to wrap your children in braces? ( <${e.type}>{\`\`}</${e.type}> ) Refer to our API for more information.`
    ), true;
  }
  mapChildrenToProps(e, t) {
    let r = {};
    return import_react.default.Children.forEach(e, (n) => {
      if (!n || !n.props)
        return;
      const { children: s, ...o2 } = n.props, l = Object.keys(o2).reduce((a, c) => (a[Ee[c] || c] = o2[c], a), {});
      let { type: i } = n;
      switch (typeof i == "symbol" ? i = i.toString() : this.warnOnInvalidChildren(n, s), i) {
        case "Symbol(react.fragment)":
          t = this.mapChildrenToProps(s, t);
          break;
        case "link":
        case "meta":
        case "noscript":
        case "script":
        case "style":
          r = this.flattenArrayTypeChildren(
            n,
            r,
            l,
            s
          );
          break;
        default:
          t = this.mapObjectTypeChildren(n, t, l, s);
          break;
      }
    }), this.mapArrayTypeChildrenToProps(r, t);
  }
  render() {
    const { children: e, ...t } = this.props;
    let r = { ...t }, { helmetData: n } = t;
    if (e && (r = this.mapChildrenToProps(e, r)), n && !(n instanceof L2)) {
      const s = n;
      n = new L2(s.context, true), delete r.helmetData;
    }
    return n ? import_react.default.createElement(J, { ...r, context: n.value }) : import_react.default.createElement(oe.Consumer, null, (s) => import_react.default.createElement(J, { ...r, context: s }));
  }
}, T(H, "defaultProps", {
  defer: true,
  encodeSpecialCharacters: true,
  prioritizeSeoTags: false
}), H);
var Je = (e) => {
  const t = L(), r = typeof e.to == "string" ? e.to : e.to.hash, n = (s) => {
    var o2;
    !(r != null && r.startsWith("#")) || r !== t.hash || (s.preventDefault(), (o2 = document.getElementById(r.slice(1))) == null || o2.scrollIntoView());
  };
  return dr.jsx(je, { onClick: n, ...e });
};
var ie = (e, t) => {
  for (const r of e) {
    const n = V(r, t);
    if (n !== void 0) return n;
  }
};
var V = (e, t, r = []) => {
  const n = t(e, r);
  if (n !== void 0) return n;
  if (e.type === "category")
    for (const s of e.items) {
      const o2 = V(s, t, [
        ...r,
        e
      ]);
      if (o2 !== void 0) return o2;
    }
};
var Qe = () => {
  const e = L(), t = Nt(), { sidebars: r } = ke(), n = t != null && t.id ? r[t.id] : [];
  return ie(n, (s) => {
    if (s.type === "doc" && o(t == null ? void 0 : t.id, s.id) === e.pathname)
      return s;
  });
};
var Ne = (e) => {
  const t = L(), r = Nt();
  return V(e, (n) => {
    if (n.type === "category" && n.link && o(r == null ? void 0 : r.id, n.link.id) === t.pathname || n.type === "doc" && o(r == null ? void 0 : r.id, n.id) === t.pathname)
      return true;
  });
};
var et = () => {
  const e = L().pathname, { sidebars: t } = ke(), r = Nt(), n = r != null && r.id ? t[r.id] : [];
  let s, o2, l = false;
  return ie(n, (i) => {
    const a = i.type === "doc" ? o(r == null ? void 0 : r.id, i.id) : i.type === "category" && i.link ? o(r == null ? void 0 : r.id, i.link.id) : void 0;
    if (a) {
      if (l)
        return o2 = { label: i.label, id: a }, true;
      e === a ? l = true : s = { label: i.label, id: a };
    }
  }), { prev: s, next: o2 };
};

export {
  de,
  We,
  Le,
  Ge,
  Je,
  Qe,
  Ne,
  et
};
//# sourceMappingURL=chunk-RPPTFKUS.js.map
