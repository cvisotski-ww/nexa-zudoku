{
  "version": 3,
  "sources": ["../../zudoku/src/lib/components/DeveloperHint.tsx", "../../zudoku/src/lib/plugins/openapi/StaggeredRender.tsx", "../../.pnpm/@radix-ui+react-collapsible@1.1.1_@types+react-dom@18.3.1_@types+react@18.3.11_react-dom@18.3_jhru3jt7b6rerrnqddeeufd6ni/node_modules/@radix-ui/react-collapsible/dist/index.mjs"],
  "sourcesContent": ["import type { ReactNode } from \"react\";\nimport { Callout } from \"../ui/Callout.js\";\n\nexport const DeveloperHint = ({\n  children,\n  className,\n}: {\n  children: ReactNode;\n  className?: string;\n}) => {\n  if (process.env.NODE_ENV !== \"development\") return;\n\n  return (\n    <Callout type=\"caution\" title=\"Developer hint\" className={className}>\n      <div className=\"flex flex-col gap-2\">\n        <div>{children}</div>\n        <small className=\"italic\">\n          Note: This hint is only shown in development mode.\n        </small>\n      </div>\n    </Callout>\n  );\n};\n", "import {\n  Children,\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\n\nexport const StaggeredRenderContext = createContext({ stagger: false });\n\nconst StaggeredRender = ({ children }: { children: ReactNode[] }) => {\n  const { stagger } = useContext(StaggeredRenderContext);\n  const [renderAll, setRenderAll] = useState(!stagger);\n\n  useEffect(() => {\n    if (renderAll) {\n      return;\n    }\n\n    const idle = requestIdleCallback(() => {\n      setRenderAll(true);\n    });\n\n    return () => cancelIdleCallback(idle);\n  }, [renderAll]);\n\n  return !renderAll ? Children.toArray(children).slice(0, 3) : children;\n};\n\nexport default StaggeredRender;\n", "\"use client\";\n\n// packages/react/collapsible/src/Collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef();\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n"],
  "mappings": "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",
  "names": ["DeveloperHint", "children", "className", "jsx", "Callout", "jsxs", "StaggeredRenderContext", "createContext", "StaggeredRender", "children", "stagger", "useContext", "renderAll", "setRenderAll", "useState", "useEffect", "idle", "Children", "COLLAPSIBLE_NAME", "createCollapsibleContext", "createCollapsibleScope", "createContextScope", "CollapsibleProvider", "useCollapsibleContext", "Collapsible", "props", "forwardedRef", "__scopeCollapsible", "openProp", "defaultOpen", "disabled", "onOpenChange", "collapsibleProps", "open", "setOpen", "useControllableState", "jsx", "useId", "prevOpen", "Primitive", "getState", "TRIGGER_NAME", "CollapsibleTrigger", "triggerProps", "context", "composeEventHandlers", "CONTENT_NAME", "CollapsibleContent", "forceMount", "contentProps", "Presence", "present", "CollapsibleContentImpl", "isPresent", "setIsPresent", "ref", "composedRefs", "useComposedRefs", "heightRef", "height", "widthRef", "width", "isOpen", "isMountAnimationPreventedRef", "originalStylesRef", "rAF", "useLayoutEffect", "node", "rect", "Root", "Trigger", "Content"]
}
