{
  "version": 3,
  "sources": ["../../@inkeep/widgets/dist/prism-css-db2d0e53.mjs"],
  "sourcesContent": ["(function(s) {\n  var e = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  s.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: RegExp(\"@[\\\\w-](?:\" + /[^;{\\s\"']|\\s+(?!\\s)/.source + \"|\" + e.source + \")*?\" + /(?:;|(?=\\s*\\{))/.source),\n      inside: {\n        rule: /^@[\\w-]+/,\n        \"selector-function-argument\": {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: !0,\n          alias: \"selector\"\n        },\n        keyword: {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: !0\n        }\n        // See rest below\n      }\n    },\n    url: {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp(\"\\\\burl\\\\((?:\" + e.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"),\n      greedy: !0,\n      inside: {\n        function: /^url/i,\n        punctuation: /^\\(|\\)$/,\n        string: {\n          pattern: RegExp(\"^\" + e.source + \"$\"),\n          alias: \"url\"\n        }\n      }\n    },\n    selector: {\n      pattern: RegExp(`(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"'\\\\s]|\\\\s+(?![\\\\s{])|` + e.source + \")*(?=\\\\s*\\\\{)\"),\n      lookbehind: !0\n    },\n    string: {\n      pattern: e,\n      greedy: !0\n    },\n    property: {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: !0\n    },\n    important: /!important\\b/i,\n    function: {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: !0\n    },\n    punctuation: /[(){};:,]/\n  }, s.languages.css.atrule.inside.rest = s.languages.css;\n  var t = s.languages.markup;\n  t && (t.tag.addInlined(\"style\", \"css\"), t.tag.addAttribute(\"style\", \"css\"));\n})(Prism);\n"],
  "mappings": ";CAAC,SAAS,GAAG;AACX,MAAI,IAAI;AACR,IAAE,UAAU,MAAM;AAAA,IAChB,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,SAAS,OAAO,eAAe,sBAAsB,SAAS,MAAM,EAAE,SAAS,QAAQ,kBAAkB,MAAM;AAAA,MAC/G,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,8BAA8B;AAAA,UAC5B,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,QACT;AAAA,QACA,SAAS;AAAA,UACP,SAAS;AAAA,UACT,YAAY;AAAA,QACd;AAAA;AAAA,MAEF;AAAA,IACF;AAAA,IACA,KAAK;AAAA;AAAA,MAEH,SAAS,OAAO,iBAAiB,EAAE,SAAS,MAAM,8BAA8B,SAAS,QAAQ,GAAG;AAAA,MACpG,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,UAAU;AAAA,QACV,aAAa;AAAA,QACb,QAAQ;AAAA,UACN,SAAS,OAAO,MAAM,EAAE,SAAS,GAAG;AAAA,UACpC,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR,SAAS,OAAO,sDAAsD,EAAE,SAAS,eAAe;AAAA,MAChG,YAAY;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,UAAU;AAAA,MACR,SAAS;AAAA,MACT,YAAY;AAAA,IACd;AAAA,IACA,WAAW;AAAA,IACX,UAAU;AAAA,MACR,SAAS;AAAA,MACT,YAAY;AAAA,IACd;AAAA,IACA,aAAa;AAAA,EACf,GAAG,EAAE,UAAU,IAAI,OAAO,OAAO,OAAO,EAAE,UAAU;AACpD,MAAI,IAAI,EAAE,UAAU;AACpB,QAAM,EAAE,IAAI,WAAW,SAAS,KAAK,GAAG,EAAE,IAAI,aAAa,SAAS,KAAK;AAC3E,GAAG,KAAK;",
  "names": []
}
