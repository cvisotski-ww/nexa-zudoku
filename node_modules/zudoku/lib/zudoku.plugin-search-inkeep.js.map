{"version":3,"file":"zudoku.plugin-search-inkeep.js","sources":["../src/lib/components/ClientOnly.tsx","../src/lib/plugins/search-inkeep/inkeep.ts","../src/lib/plugins/search-inkeep/index.tsx"],"sourcesContent":["import { useSyncExternalStore } from \"react\";\n\nconst noop = () => () => {};\n\nexport const ClientOnly = (props: { children: React.ReactNode }) => {\n  const value = useSyncExternalStore(\n    noop,\n    () => \"client\",\n    () => \"server\",\n  );\n\n  return value === \"client\" ? props.children : null;\n};\n","import {\n  InkeepAIChatSettings,\n  InkeepModalSettings,\n  InkeepSearchSettings,\n} from \"@inkeep/widgets\";\n\nconst baseSettings = {\n  theme: {\n    components: {\n      AIChatPageWrapper: {\n        defaultProps: {\n          size: \"shrink-vertically\",\n          variant: \"no-shadow\",\n        },\n      },\n      SearchBarTrigger: {\n        defaultProps: {\n          size: \"expand\",\n          variant: \"subtle\", // Choose from 'emphasized' or 'subtle'\n        },\n      },\n    },\n  },\n} as const;\n\nconst modalSettings: InkeepModalSettings = {};\n\nconst searchSettings: InkeepSearchSettings = {};\n\nconst aiChatSettings: InkeepAIChatSettings = {};\n\nexport { aiChatSettings, baseSettings, modalSettings, searchSettings };\n","import type { InkeepWidgetBaseSettings } from \"@inkeep/widgets\";\nimport { lazy } from \"react\";\nimport { ClientOnly } from \"../../components/ClientOnly.js\";\nimport type { DevPortalPlugin } from \"../../core/plugins.js\";\nimport { aiChatSettings, baseSettings } from \"./inkeep.js\";\n\ntype PickedPluginInkeepBaseSettings =\n  | \"apiKey\"\n  | \"integrationId\"\n  | \"organizationId\"\n  | \"primaryBrandColor\"\n  | \"organizationDisplayName\";\n\ntype PluginInkeepBaseSettings = Pick<\n  InkeepWidgetBaseSettings,\n  PickedPluginInkeepBaseSettings\n>;\n\nconst Inkeep = lazy(() => import(\"./InkeepCustomTrigger.js\"));\n\nconst InkeepSearch = ({\n  prefilledQuery,\n  isOpen,\n  onClose,\n  settings,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  prefilledQuery?: string | null;\n  settings: PluginInkeepBaseSettings;\n}) => {\n  return (\n    <Inkeep\n      isOpen={isOpen}\n      onClose={onClose}\n      baseSettings={{ ...baseSettings, ...settings }}\n      aiChatSettings={aiChatSettings}\n      searchSettings={{\n        prefilledQuery: prefilledQuery || undefined,\n      }}\n    />\n  );\n};\n\nexport const inkeepSearchPlugin = (\n  settings: PluginInkeepBaseSettings,\n): DevPortalPlugin => {\n  return {\n    renderSearch: ({\n      isOpen,\n      onClose,\n    }: {\n      isOpen: boolean;\n      onClose: () => void;\n    }) => {\n      return (\n        <ClientOnly>\n          <InkeepSearch isOpen={isOpen} onClose={onClose} settings={settings} />\n        </ClientOnly>\n      );\n    },\n  };\n};\n"],"names":["noop","ClientOnly","props","useSyncExternalStore","baseSettings","aiChatSettings","Inkeep","lazy","InkeepSearch","prefilledQuery","isOpen","onClose","settings","jsx","inkeepSearchPlugin"],"mappings":";;AAEA,MAAMA,IAAO,MAAM,MAAM;AAAC,GAEbC,IAAa,CAACC,MACXC;AAAA,EACZH;AAAA,EACA,MAAM;AAAA,EACN,MAAM;AAAA,MAGS,WAAWE,EAAM,WAAW,MCLzCE,IAAe;AAAA,EACnB,OAAO;AAAA,IACL,YAAY;AAAA,MACV,mBAAmB;AAAA,QACjB,cAAc;AAAA,UACZ,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,kBAAkB;AAAA,QAChB,cAAc;AAAA,UACZ,MAAM;AAAA,UACN,SAAS;AAAA;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GAMMC,IAAuC,CAAC,GCXxCC,IAASC,EAAK,MAAM,OAAO,mCAA0B,CAAC,GAEtDC,IAAe,CAAC;AAAA,EACpB,gBAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC;AACF,MAOIC,gBAAAA,EAAA;AAAA,EAACP;AAAA,EAAA;AAAA,IACC,QAAAI;AAAA,IACA,SAAAC;AAAA,IACA,cAAc,EAAE,GAAGP,GAAc,GAAGQ,EAAS;AAAA,IAC7C,gBAAAP;AAAA,IACA,gBAAgB;AAAA,MACd,gBAAgBI,KAAkB;AAAA,IACpC;AAAA,EAAA;AAAA,GAKOK,IAAqB,CAChCF,OAEO;AAAA,EACL,cAAc,CAAC;AAAA,IACb,QAAAF;AAAA,IACA,SAAAC;AAAA,EAAA,4BAMGV,GACC,EAAA,UAAAY,gBAAAA,EAAAA,IAACL,KAAa,QAAAE,GAAgB,SAAAC,GAAkB,UAAAC,EAAoB,CAAA,EACtE,CAAA;AAEJ;"}