import * as n from "react";
import { createContext as j, useContext as w, useState as O, useEffect as k, Children as D } from "react";
import { c as M, u as L, a as F, P as b, b as q, d as B, e as G } from "./index-Do_BBSIs.js";
import { P as $ } from "./SidebarBadge-DmI5hT04.js";
import { j as c } from "./jsx-runtime-B6kdoens.js";
const H = j({ stagger: !1 }), X = ({ children: e }) => {
  const { stagger: r } = w(H), [o, a] = O(!r);
  return k(() => {
    if (o)
      return;
    const t = requestIdleCallback(() => {
      a(!0);
    });
    return () => cancelIdleCallback(t);
  }, [o]), o ? e : D.toArray(e).slice(0, 3);
};
var g = "Collapsible", [z, Y] = M(g), [J, R] = z(g), S = n.forwardRef(
  (e, r) => {
    const {
      __scopeCollapsible: o,
      open: a,
      defaultOpen: t,
      disabled: i,
      onOpenChange: l,
      ...f
    } = e, [p = !1, d] = L({
      prop: a,
      defaultProp: t,
      onChange: l
    });
    return /* @__PURE__ */ c.jsx(
      J,
      {
        scope: o,
        disabled: i,
        contentId: F(),
        open: p,
        onOpenToggle: n.useCallback(() => d((C) => !C), [d]),
        children: /* @__PURE__ */ c.jsx(
          b.div,
          {
            "data-state": x(p),
            "data-disabled": i ? "" : void 0,
            ...f,
            ref: r
          }
        )
      }
    );
  }
);
S.displayName = g;
var _ = "CollapsibleTrigger", I = n.forwardRef(
  (e, r) => {
    const { __scopeCollapsible: o, ...a } = e, t = R(_, o);
    return /* @__PURE__ */ c.jsx(
      b.button,
      {
        type: "button",
        "aria-controls": t.contentId,
        "aria-expanded": t.open || !1,
        "data-state": x(t.open),
        "data-disabled": t.disabled ? "" : void 0,
        disabled: t.disabled,
        ...a,
        ref: r,
        onClick: q(e.onClick, t.onOpenToggle)
      }
    );
  }
);
I.displayName = _;
var v = "CollapsibleContent", T = n.forwardRef(
  (e, r) => {
    const { forceMount: o, ...a } = e, t = R(v, e.__scopeCollapsible);
    return /* @__PURE__ */ c.jsx($, { present: o || t.open, children: ({ present: i }) => /* @__PURE__ */ c.jsx(K, { ...a, ref: r, present: i }) });
  }
);
T.displayName = v;
var K = n.forwardRef((e, r) => {
  const { __scopeCollapsible: o, present: a, children: t, ...i } = e, l = R(v, o), [f, p] = n.useState(a), d = n.useRef(null), C = B(r, d), h = n.useRef(0), y = h.current, P = n.useRef(0), N = P.current, m = l.open || f, A = n.useRef(m), u = n.useRef();
  return n.useEffect(() => {
    const s = requestAnimationFrame(() => A.current = !1);
    return () => cancelAnimationFrame(s);
  }, []), G(() => {
    const s = d.current;
    if (s) {
      u.current = u.current || {
        transitionDuration: s.style.transitionDuration,
        animationName: s.style.animationName
      }, s.style.transitionDuration = "0s", s.style.animationName = "none";
      const E = s.getBoundingClientRect();
      h.current = E.height, P.current = E.width, A.current || (s.style.transitionDuration = u.current.transitionDuration, s.style.animationName = u.current.animationName), p(a);
    }
  }, [l.open, a]), /* @__PURE__ */ c.jsx(
    b.div,
    {
      "data-state": x(l.open),
      "data-disabled": l.disabled ? "" : void 0,
      id: l.contentId,
      hidden: !m,
      ...i,
      ref: C,
      style: {
        "--radix-collapsible-content-height": y ? `${y}px` : void 0,
        "--radix-collapsible-content-width": N ? `${N}px` : void 0,
        ...e.style
      },
      children: m && t
    }
  );
});
function x(e) {
  return e ? "open" : "closed";
}
var Z = S, ee = I, te = T;
export {
  te as C,
  Z as R,
  X as S,
  ee as T,
  H as a
};
//# sourceMappingURL=index-Dvh1BL_e.js.map
