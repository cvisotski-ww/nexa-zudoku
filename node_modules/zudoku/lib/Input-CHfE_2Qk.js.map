{"version":3,"file":"Input-CHfE_2Qk.js","sources":["../../../node_modules/.pnpm/@tanstack+query-core@5.59.13/node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../../node_modules/.pnpm/@tanstack+react-query@5.59.13_react@18.3.1/node_modules/@tanstack/react-query/build/modern/useMutation.js","../../../node_modules/.pnpm/react-hook-form@7.53.0_react@18.3.1/node_modules/react-hook-form/dist/index.esm.mjs","../../../node_modules/.pnpm/@radix-ui+number@1.1.0/node_modules/@radix-ui/number/dist/index.mjs","../../../node_modules/.pnpm/@radix-ui+react-use-previous@1.1.0_@types+react@18.3.11_react@18.3.1/node_modules/@radix-ui/react-use-previous/dist/index.mjs","../../../node_modules/.pnpm/@radix-ui+react-select@2.1.2_@types+react-dom@18.3.1_@types+react@18.3.11_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@radix-ui/react-select/dist/index.mjs","../src/lib/components/Select.tsx","../src/lib/ui/Input.tsx"],"sourcesContent":["// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport { MutationObserver, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { noop, shouldThrowError } from \"./utils.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        if (key === '__proto__') {\n            return;\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) â€¢ [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        validatingFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) â€¢ [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n        exact: true,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }));\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field && field._f) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        if (get(control._fields, name)) {\n            control._updateDisabledField({\n                disabled,\n                fields: control._fields,\n                name,\n                value: get(control._fields, name)._f.value,\n            });\n        }\n    }, [disabled, name, control]);\n    return {\n        field: {\n            name,\n            value,\n            ...(isBoolean(disabled) || formState.disabled\n                ? { disabled: formState.disabled || disabled }\n                : {}),\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\n                target: {\n                    value: getEventValue(event),\n                    name: name,\n                },\n                type: EVENTS.CHANGE,\n            }), [name]),\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\n                target: {\n                    value: get(control._formValues, name),\n                    name: name,\n                },\n                type: EVENTS.BLUR,\n            }), [name, control]),\n            ref: React.useCallback((elm) => {\n                const field = get(control._fields, name);\n                if (field && elm) {\n                    field._f.ref = {\n                        focus: () => elm.focus(),\n                        select: () => elm.select(),\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\n                        reportValidity: () => elm.reportValidity(),\n                    };\n                }\n            }, [control._fields, name]),\n        },\n        formState,\n        fieldState: Object.defineProperties({}, {\n            invalid: {\n                enumerable: true,\n                get: () => !!get(formState.errors, name),\n            },\n            isDirty: {\n                enumerable: true,\n                get: () => !!get(formState.dirtyFields, name),\n            },\n            isTouched: {\n                enumerable: true,\n                get: () => !!get(formState.touchedFields, name),\n            },\n            isValidating: {\n                enumerable: true,\n                get: () => !!get(formState.validatingFields, name),\n            },\n            error: {\n                enumerable: true,\n                get: () => get(formState.errors, name),\n            },\n        }),\n    };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) â€¢ [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            for (const name of control._names.mount) {\n                formData.append(name, get(data, name));\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(action, {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    return true;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    return true;\n                }\n                else {\n                    if (iterateFieldsByAction(currentField, action)) {\n                        break;\n                    }\n                }\n            }\n            else if (isObject(currentField)) {\n                if (iterateFieldsByAction(currentField, action)) {\n                    break;\n                }\n            }\n        }\n    }\n    return;\n};\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabled) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. â€¢ [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) â€¢ [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    props.rules &&\n        control.register(name, props.rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field &&\n                    field._f &&\n                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&\n                        getValidationModes(control._options.mode).isOnSubmit)) {\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend, [updateValues, name, control]),\n        append: React.useCallback(append, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        return;\n    }\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\nvar hasPromiseValidation = (fieldReference) => (!fieldReference || !fieldReference.validate) &&\n    !!((isFunction(fieldReference.validate) &&\n        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n        (isObject(fieldReference.validate) &&\n            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        validatingFields: {},\n        errors: _options.errors || {},\n        disabled: _options.disabled || false,\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        validatingFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (_proxyFormState.isValid || shouldUpdateValid) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (names, isValidating) => {\n        if (_proxyFormState.isValidating || _proxyFormState.validatingFields) {\n            (names || Array.from(_names.mount)).forEach((name) => {\n                if (name) {\n                    isValidating\n                        ? set(_formState.validatingFields, name, isValidating)\n                        : unset(_formState.validatingFields, name);\n                }\n            });\n            _subjects.state.next({\n                validatingFields: _formState.validatingFields,\n                isValidating: !isEmptyObject(_formState.validatingFields),\n            });\n        }\n    };\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        const disabledField = !!(get(_fields, name) &&\n            get(_fields, name)._f &&\n            get(_fields, name)._f.disabled);\n        if (!isBlurEvent || shouldDirty) {\n            if (_proxyFormState.isDirty) {\n                isPreviousDirty = _formState.isDirty;\n                _formState.isDirty = output.isDirty = _getDirty();\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\n            }\n            const isCurrentFieldPristine = disabledField || deepEqual(get(_defaultValues, name), fieldValue);\n            isPreviousDirty = !!(!disabledField && get(_formState.dirtyFields, name));\n            isCurrentFieldPristine || disabledField\n                ? unset(_formState.dirtyFields, name)\n                : set(_formState.dirtyFields, name, true);\n            output.dirtyFields = _formState.dirtyFields;\n            shouldUpdateField =\n                shouldUpdateField ||\n                    (_proxyFormState.dirtyFields &&\n                        isPreviousDirty !== !isCurrentFieldPristine);\n        }\n        if (isBlurEvent) {\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\n            if (!isPreviousFieldTouched) {\n                set(_formState.touchedFields, name, isBlurEvent);\n                output.touchedFields = _formState.touchedFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.touchedFields &&\n                            isPreviousFieldTouched !== isBlurEvent);\n            }\n        }\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (props.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(props.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n    };\n    const _executeSchema = async (name) => {\n        _updateIsValidating(name, true);\n        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n        _updateIsValidating(name);\n        return result;\n    };\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name], true);\n                    }\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name]);\n                    }\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                !isEmptyObject(fieldValue) &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\n        !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                !isPrimitive(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name: _state.mount ? name : undefined,\n            values: { ..._formValues },\n        });\n    };\n    const onChange = async (event) => {\n        _state.mount = true;\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    deepEqual(fieldValue, get(_formValues, name, fieldValue));\n        };\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                if (_proxyFormState.isValid) {\n                    if (props.mode === 'onBlur') {\n                        if (isBlurEvent) {\n                            _updateValid();\n                        }\n                    }\n                    else {\n                        _updateValid();\n                    }\n                }\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                _updateIsValidating([name], true);\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsValidating([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ...(_state.mount ? _formValues : _defaultValues),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        error: get((formState || _formState).errors, name),\n        isValidating: !!get(_formState.validatingFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        const currentError = get(_formState.errors, name) || {};\n        // Don't override existing error messages elsewhere in the object tree.\n        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n        set(_formState.errors, name, {\n            ...restOfErrorTree,\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !options.keepIsValidating &&\n                unset(_formState.validatingFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const _updateDisabledField = ({ disabled, name, field, fields, value, }) => {\n        if ((isBoolean(disabled) && _state.mount) || !!disabled) {\n            const inputValue = disabled\n                ? undefined\n                : isUndefined(value)\n                    ? getFieldValue(field ? field._f : get(fields, name)._f)\n                    : value;\n            set(_formValues, name, inputValue);\n            updateTouchAndDirty(name, inputValue, false, false, true);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(props.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _updateDisabledField({\n                field,\n                disabled: isBoolean(options.disabled)\n                    ? options.disabled\n                    : props.disabled,\n                name,\n                value: options.value,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined\n                ? { disabled: options.disabled || props.disabled }\n                : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                const currentField = get(_fields, name);\n                if (currentField) {\n                    ref.disabled = currentField._f.disabled || disabled;\n                    if (Array.isArray(currentField._f.refs)) {\n                        currentField._f.refs.forEach((inputRef) => {\n                            inputRef.disabled = currentField._f.disabled || disabled;\n                        });\n                    }\n                }\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        let onValidError = undefined;\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            try {\n                await onValid(fieldValues, e);\n            }\n            catch (error) {\n                onValidError = error;\n            }\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n        if (onValidError) {\n            throw onValidError;\n        }\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, cloneObject(get(_defaultValues, name)));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, cloneObject(options.defaultValue));\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const isEmptyResetValues = isEmptyObject(formValues);\n        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues) {\n                for (const fieldName of _names.mount) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = props.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        _state.mount =\n            !_proxyFormState.isValid ||\n                !!keepStateOptions.keepIsValid ||\n                !!keepStateOptions.keepDirtyValues;\n        _state.watch = !!props.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: isEmptyResetValues\n                ? false\n                : keepStateOptions.keepDirty\n                    ? _formState.isDirty\n                    : !!(keepStateOptions.keepDefaultValues &&\n                        !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: isEmptyResetValues\n                ? {}\n                : keepStateOptions.keepDirtyValues\n                    ? keepStateOptions.keepDefaultValues && _formValues\n                        ? getDirtyFields(_defaultValues, _formValues)\n                        : _formState.dirtyFields\n                    : keepStateOptions.keepDefaultValues && formValues\n                        ? getDirtyFields(_defaultValues, formValues)\n                        : keepStateOptions.keepDirty\n                            ? _formState.dirtyFields\n                            : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect && fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _updateDisabledField,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            _setErrors,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) â€¢ [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) â€¢ [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef();\n    const _values = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        validatingFields: {},\n        errors: props.errors || {},\n        disabled: props.disabled || false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (props.errors) {\n            control._setErrors(props.errors);\n        }\n    }, [props.errors, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    React.useEffect(() => {\n        props.shouldUnregister &&\n            control._subjects.values.next({\n                values: control._getWatch(),\n            });\n    }, [props.shouldUnregister, control]);\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","// packages/core/number/src/number.ts\nfunction clamp(value, [min, max]) {\n  return Math.min(max, Math.max(min, value));\n}\nexport {\n  clamp\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-previous/src/usePrevious.tsx\nimport * as React from \"react\";\nfunction usePrevious(value) {\n  const ref = React.useRef({ value, previous: value });\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/select/src/Select.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { VisuallyHidden } from \"@radix-ui/react-visually-hidden\";\nimport { hideOthers } from \"aria-hidden\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar OPEN_KEYS = [\" \", \"Enter\", \"ArrowUp\", \"ArrowDown\"];\nvar SELECTION_KEYS = [\" \", \"Enter\"];\nvar SELECT_NAME = \"Select\";\nvar [Collection, useCollection, createCollectionScope] = createCollection(SELECT_NAME);\nvar [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);\nvar [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);\nvar Select = (props) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState(null);\n  const [valueNode, setValueNode] = React.useState(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange\n  });\n  const triggerPointerDownPosRef = React.useRef(null);\n  const isFormControl = trigger ? form || !!trigger.closest(\"form\") : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(/* @__PURE__ */ new Set());\n  const nativeSelectKey = Array.from(nativeOptionsSet).map((option) => option.props.value).join(\";\");\n  return /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children: /* @__PURE__ */ jsxs(\n    SelectProvider,\n    {\n      required,\n      scope: __scopeSelect,\n      trigger,\n      onTriggerChange: setTrigger,\n      valueNode,\n      onValueNodeChange: setValueNode,\n      valueNodeHasChildren,\n      onValueNodeHasChildrenChange: setValueNodeHasChildren,\n      contentId: useId(),\n      value,\n      onValueChange: setValue,\n      open,\n      onOpenChange: setOpen,\n      dir: direction,\n      triggerPointerDownPosRef,\n      disabled,\n      children: [\n        /* @__PURE__ */ jsx(Collection.Provider, { scope: __scopeSelect, children: /* @__PURE__ */ jsx(\n          SelectNativeOptionsProvider,\n          {\n            scope: props.__scopeSelect,\n            onNativeOptionAdd: React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, []),\n            onNativeOptionRemove: React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, []),\n            children\n          }\n        ) }),\n        isFormControl ? /* @__PURE__ */ jsxs(\n          BubbleSelect,\n          {\n            \"aria-hidden\": true,\n            required,\n            tabIndex: -1,\n            name,\n            autoComplete,\n            value,\n            onChange: (event) => setValue(event.target.value),\n            disabled,\n            form,\n            children: [\n              value === void 0 ? /* @__PURE__ */ jsx(\"option\", { value: \"\" }) : null,\n              Array.from(nativeOptionsSet)\n            ]\n          },\n          nativeSelectKey\n        ) : null\n      ]\n    }\n  ) });\n};\nSelect.displayName = SELECT_NAME;\nvar TRIGGER_NAME = \"SelectTrigger\";\nvar SelectTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef(\"touch\");\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== void 0) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n    const handleOpen = (pointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        resetTypeahead();\n      }\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY)\n        };\n      }\n    };\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open,\n        \"aria-required\": context.required,\n        \"aria-autocomplete\": \"none\",\n        dir: context.dir,\n        \"data-state\": context.open ? \"open\" : \"closed\",\n        disabled: isDisabled,\n        \"data-disabled\": isDisabled ? \"\" : void 0,\n        \"data-placeholder\": shouldShowPlaceholder(context.value) ? \"\" : void 0,\n        ...triggerProps,\n        ref: composedRefs,\n        onClick: composeEventHandlers(triggerProps.onClick, (event) => {\n          event.currentTarget.focus();\n          if (pointerTypeRef.current !== \"mouse\") {\n            handleOpen(event);\n          }\n        }),\n        onPointerDown: composeEventHandlers(triggerProps.onPointerDown, (event) => {\n          pointerTypeRef.current = event.pointerType;\n          const target = event.target;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n          if (event.button === 0 && event.ctrlKey === false && event.pointerType === \"mouse\") {\n            handleOpen(event);\n            event.preventDefault();\n          }\n        }),\n        onKeyDown: composeEventHandlers(triggerProps.onKeyDown, (event) => {\n          const isTypingAhead = searchRef.current !== \"\";\n          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n          if (isTypingAhead && event.key === \" \") return;\n          if (OPEN_KEYS.includes(event.key)) {\n            handleOpen();\n            event.preventDefault();\n          }\n        })\n      }\n    ) });\n  }\n);\nSelectTrigger.displayName = TRIGGER_NAME;\nvar VALUE_NAME = \"SelectValue\";\nvar SelectValue = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, className, style, children, placeholder = \"\", ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== void 0;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        ...valueProps,\n        ref: composedRefs,\n        style: { pointerEvents: \"none\" },\n        children: shouldShowPlaceholder(context.value) ? /* @__PURE__ */ jsx(Fragment, { children: placeholder }) : children\n      }\n    );\n  }\n);\nSelectValue.displayName = VALUE_NAME;\nvar ICON_NAME = \"SelectIcon\";\nvar SelectIcon = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.span, { \"aria-hidden\": true, ...iconProps, ref: forwardedRef, children: children || \"\\u25BC\" });\n  }\n);\nSelectIcon.displayName = ICON_NAME;\nvar PORTAL_NAME = \"SelectPortal\";\nvar SelectPortal = (props) => {\n  return /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, ...props });\n};\nSelectPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"SelectContent\";\nvar SelectContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState();\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n    if (!context.open) {\n      const frag = fragment;\n      return frag ? ReactDOM.createPortal(\n        /* @__PURE__ */ jsx(SelectContentProvider, { scope: props.__scopeSelect, children: /* @__PURE__ */ jsx(Collection.Slot, { scope: props.__scopeSelect, children: /* @__PURE__ */ jsx(\"div\", { children: props.children }) }) }),\n        frag\n      ) : null;\n    }\n    return /* @__PURE__ */ jsx(SelectContentImpl, { ...props, ref: forwardedRef });\n  }\n);\nSelectContent.displayName = CONTENT_NAME;\nvar CONTENT_MARGIN = 10;\nvar [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME);\nvar CONTENT_IMPL_NAME = \"SelectContentImpl\";\nvar SelectContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = \"item-aligned\",\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState(null);\n    const [viewport, setViewport] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState(null);\n    const [selectedItemText, setSelectedItemText] = React.useState(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n    useFocusGuards();\n    const focusFirst = React.useCallback(\n      (candidates) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: \"nearest\" });\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n        const handlePointerMove = (event) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0))\n          };\n        };\n        const handlePointerUp = (event) => {\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            if (!content.contains(event.target)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener(\"pointermove\", handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener(\"pointermove\", handlePointerMove);\n          document.addEventListener(\"pointerup\", handlePointerUp, { capture: true, once: true });\n        }\n        return () => {\n          document.removeEventListener(\"pointermove\", handlePointerMove);\n          document.removeEventListener(\"pointerup\", handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener(\"blur\", close);\n      window.addEventListener(\"resize\", close);\n      return () => {\n        window.removeEventListener(\"blur\", close);\n        window.removeEventListener(\"resize\", close);\n      };\n    }, [onOpenChange]);\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        setTimeout(() => nextItem.ref.current.focus());\n      }\n    });\n    const itemRefCallback = React.useCallback(\n      (node, value, disabled) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== void 0 && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node, value, disabled) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== void 0 && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n    const SelectPosition = position === \"popper\" ? SelectPopperPosition : SelectItemAlignedPosition;\n    const popperContentProps = SelectPosition === SelectPopperPosition ? {\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions\n    } : {};\n    return /* @__PURE__ */ jsx(\n      SelectContentProvider,\n      {\n        scope: __scopeSelect,\n        content,\n        viewport,\n        onViewportChange: setViewport,\n        itemRefCallback,\n        selectedItem,\n        onItemLeave: handleItemLeave,\n        itemTextRefCallback,\n        focusSelectedItem,\n        selectedItemText,\n        position,\n        isPositioned,\n        searchRef,\n        children: /* @__PURE__ */ jsx(RemoveScroll, { as: Slot, allowPinchZoom: true, children: /* @__PURE__ */ jsx(\n          FocusScope,\n          {\n            asChild: true,\n            trapped: context.open,\n            onMountAutoFocus: (event) => {\n              event.preventDefault();\n            },\n            onUnmountAutoFocus: composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            }),\n            children: /* @__PURE__ */ jsx(\n              DismissableLayer,\n              {\n                asChild: true,\n                disableOutsidePointerEvents: true,\n                onEscapeKeyDown,\n                onPointerDownOutside,\n                onFocusOutside: (event) => event.preventDefault(),\n                onDismiss: () => context.onOpenChange(false),\n                children: /* @__PURE__ */ jsx(\n                  SelectPosition,\n                  {\n                    role: \"listbox\",\n                    id: context.contentId,\n                    \"data-state\": context.open ? \"open\" : \"closed\",\n                    dir: context.dir,\n                    onContextMenu: (event) => event.preventDefault(),\n                    ...contentProps,\n                    ...popperContentProps,\n                    onPlaced: () => setIsPositioned(true),\n                    ref: composedRefs,\n                    style: {\n                      // flex layout so we can place the scroll buttons properly\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      // reset the outline by default as the content MAY get focused\n                      outline: \"none\",\n                      ...contentProps.style\n                    },\n                    onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {\n                      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                      if (event.key === \"Tab\") event.preventDefault();\n                      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n                      if ([\"ArrowUp\", \"ArrowDown\", \"Home\", \"End\"].includes(event.key)) {\n                        const items = getItems().filter((item) => !item.disabled);\n                        let candidateNodes = items.map((item) => item.ref.current);\n                        if ([\"ArrowUp\", \"End\"].includes(event.key)) {\n                          candidateNodes = candidateNodes.slice().reverse();\n                        }\n                        if ([\"ArrowUp\", \"ArrowDown\"].includes(event.key)) {\n                          const currentElement = event.target;\n                          const currentIndex = candidateNodes.indexOf(currentElement);\n                          candidateNodes = candidateNodes.slice(currentIndex + 1);\n                        }\n                        setTimeout(() => focusFirst(candidateNodes));\n                        event.preventDefault();\n                      }\n                    })\n                  }\n                )\n              }\n            )\n          }\n        ) })\n      }\n    );\n  }\n);\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\nvar ITEM_ALIGNED_POSITION_NAME = \"SelectItemAlignedPosition\";\nvar SelectItemAlignedPosition = React.forwardRef((props, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState(null);\n  const [content, setContent] = React.useState(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n      if (context.dir !== \"rtl\") {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth)\n        ]);\n        contentWrapper.style.minWidth = minContentWidth + \"px\";\n        contentWrapper.style.left = clampedLeft + \"px\";\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth)\n        ]);\n        contentWrapper.style.minWidth = minContentWidth + \"px\";\n        contentWrapper.style.right = clampedRight + \"px\";\n      }\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = items.length > 0 && selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = \"0px\";\n        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport\n          (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + \"px\";\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0].ref.current;\n        contentWrapper.style.top = \"0px\";\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport\n          (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + \"px\";\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + \"px\";\n      contentWrapper.style.maxHeight = availableHeight + \"px\";\n      onPlaced?.();\n      requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced\n  ]);\n  useLayoutEffect(() => position(), [position]);\n  const [contentZIndex, setContentZIndex] = React.useState();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n  const handleScrollButtonChange = React.useCallback(\n    (node) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n  return /* @__PURE__ */ jsx(\n    SelectViewportProvider,\n    {\n      scope: __scopeSelect,\n      contentWrapper,\n      shouldExpandOnScrollRef,\n      onScrollButtonChange: handleScrollButtonChange,\n      children: /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          ref: setContentWrapper,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            position: \"fixed\",\n            zIndex: contentZIndex\n          },\n          children: /* @__PURE__ */ jsx(\n            Primitive.div,\n            {\n              ...popperProps,\n              ref: composedRefs,\n              style: {\n                // When we get the height of the content, it includes borders. If we were to set\n                // the height without having `boxSizing: 'border-box'` it would be too big.\n                boxSizing: \"border-box\",\n                // We need to ensure the content doesn't get taller than the wrapper\n                maxHeight: \"100%\",\n                ...popperProps.style\n              }\n            }\n          )\n        }\n      )\n    }\n  );\n});\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\nvar POPPER_POSITION_NAME = \"SelectPopperPosition\";\nvar SelectPopperPosition = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = \"start\",\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  return /* @__PURE__ */ jsx(\n    PopperPrimitive.Content,\n    {\n      ...popperScope,\n      ...popperProps,\n      ref: forwardedRef,\n      align,\n      collisionPadding,\n      style: {\n        // Ensure border-box for floating-ui calculations\n        boxSizing: \"border-box\",\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          \"--radix-select-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n          \"--radix-select-content-available-width\": \"var(--radix-popper-available-width)\",\n          \"--radix-select-content-available-height\": \"var(--radix-popper-available-height)\",\n          \"--radix-select-trigger-width\": \"var(--radix-popper-anchor-width)\",\n          \"--radix-select-trigger-height\": \"var(--radix-popper-anchor-height)\"\n        }\n      }\n    }\n  );\n});\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\nvar [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME, {});\nvar VIEWPORT_NAME = \"SelectViewport\";\nvar SelectViewport = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeSelect, children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-select-viewport\": \"\",\n          role: \"presentation\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            // we use position: 'relative' here on the `viewport` so that when we call\n            // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n            // (independent of the scrollUpButton).\n            position: \"relative\",\n            flex: 1,\n            // Viewport should only be scrollable in the vertical direction.\n            // This won't work in vertical writing modes, so we'll need to\n            // revisit this if/when that is supported\n            // https://developer.chrome.com/blog/vertical-form-controls\n            overflow: \"hidden auto\",\n            ...viewportProps.style\n          },\n          onScroll: composeEventHandlers(viewportProps.onScroll, (event) => {\n            const viewport = event.currentTarget;\n            const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n            if (shouldExpandOnScrollRef?.current && contentWrapper) {\n              const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n              if (scrolledBy > 0) {\n                const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                const cssHeight = parseFloat(contentWrapper.style.height);\n                const prevHeight = Math.max(cssMinHeight, cssHeight);\n                if (prevHeight < availableHeight) {\n                  const nextHeight = prevHeight + scrolledBy;\n                  const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                  const heightDiff = nextHeight - clampedNextHeight;\n                  contentWrapper.style.height = clampedNextHeight + \"px\";\n                  if (contentWrapper.style.bottom === \"0px\") {\n                    viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                    contentWrapper.style.justifyContent = \"flex-end\";\n                  }\n                }\n              }\n            }\n            prevScrollTopRef.current = viewport.scrollTop;\n          })\n        }\n      ) })\n    ] });\n  }\n);\nSelectViewport.displayName = VIEWPORT_NAME;\nvar GROUP_NAME = \"SelectGroup\";\nvar [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME);\nvar SelectGroup = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return /* @__PURE__ */ jsx(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId, children: /* @__PURE__ */ jsx(Primitive.div, { role: \"group\", \"aria-labelledby\": groupId, ...groupProps, ref: forwardedRef }) });\n  }\n);\nSelectGroup.displayName = GROUP_NAME;\nvar LABEL_NAME = \"SelectLabel\";\nvar SelectLabel = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return /* @__PURE__ */ jsx(Primitive.div, { id: groupContext.id, ...labelProps, ref: forwardedRef });\n  }\n);\nSelectLabel.displayName = LABEL_NAME;\nvar ITEM_NAME = \"SelectItem\";\nvar [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME);\nvar SelectItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? \"\");\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef(\"touch\");\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n    if (value === \"\") {\n      throw new Error(\n        \"A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.\"\n      );\n    }\n    return /* @__PURE__ */ jsx(\n      SelectItemContextProvider,\n      {\n        scope: __scopeSelect,\n        value,\n        disabled,\n        textId,\n        isSelected,\n        onItemTextChange: React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? \"\").trim());\n        }, []),\n        children: /* @__PURE__ */ jsx(\n          Collection.ItemSlot,\n          {\n            scope: __scopeSelect,\n            value,\n            disabled,\n            textValue,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                role: \"option\",\n                \"aria-labelledby\": textId,\n                \"data-highlighted\": isFocused ? \"\" : void 0,\n                \"aria-selected\": isSelected && isFocused,\n                \"data-state\": isSelected ? \"checked\" : \"unchecked\",\n                \"aria-disabled\": disabled || void 0,\n                \"data-disabled\": disabled ? \"\" : void 0,\n                tabIndex: disabled ? void 0 : -1,\n                ...itemProps,\n                ref: composedRefs,\n                onFocus: composeEventHandlers(itemProps.onFocus, () => setIsFocused(true)),\n                onBlur: composeEventHandlers(itemProps.onBlur, () => setIsFocused(false)),\n                onClick: composeEventHandlers(itemProps.onClick, () => {\n                  if (pointerTypeRef.current !== \"mouse\") handleSelect();\n                }),\n                onPointerUp: composeEventHandlers(itemProps.onPointerUp, () => {\n                  if (pointerTypeRef.current === \"mouse\") handleSelect();\n                }),\n                onPointerDown: composeEventHandlers(itemProps.onPointerDown, (event) => {\n                  pointerTypeRef.current = event.pointerType;\n                }),\n                onPointerMove: composeEventHandlers(itemProps.onPointerMove, (event) => {\n                  pointerTypeRef.current = event.pointerType;\n                  if (disabled) {\n                    contentContext.onItemLeave?.();\n                  } else if (pointerTypeRef.current === \"mouse\") {\n                    event.currentTarget.focus({ preventScroll: true });\n                  }\n                }),\n                onPointerLeave: composeEventHandlers(itemProps.onPointerLeave, (event) => {\n                  if (event.currentTarget === document.activeElement) {\n                    contentContext.onItemLeave?.();\n                  }\n                }),\n                onKeyDown: composeEventHandlers(itemProps.onKeyDown, (event) => {\n                  const isTypingAhead = contentContext.searchRef?.current !== \"\";\n                  if (isTypingAhead && event.key === \" \") return;\n                  if (SELECTION_KEYS.includes(event.key)) handleSelect();\n                  if (event.key === \" \") event.preventDefault();\n                })\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nSelectItem.displayName = ITEM_NAME;\nvar ITEM_TEXT_NAME = \"SelectItemText\";\nvar SelectItemText = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => /* @__PURE__ */ jsx(\"option\", { value: itemContext.value, disabled: itemContext.disabled, children: textContent }, itemContext.value),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(Primitive.span, { id: itemContext.textId, ...itemTextProps, ref: composedRefs }),\n      itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? ReactDOM.createPortal(itemTextProps.children, context.valueNode) : null\n    ] });\n  }\n);\nSelectItemText.displayName = ITEM_TEXT_NAME;\nvar ITEM_INDICATOR_NAME = \"SelectItemIndicator\";\nvar SelectItemIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? /* @__PURE__ */ jsx(Primitive.span, { \"aria-hidden\": true, ...itemIndicatorProps, ref: forwardedRef }) : null;\n  }\n);\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\nvar SCROLL_UP_BUTTON_NAME = \"SelectScrollUpButton\";\nvar SelectScrollUpButton = React.forwardRef((props, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      let handleScroll2 = function() {\n        const canScrollUp2 = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp2);\n      };\n      var handleScroll = handleScroll2;\n      const viewport = contentContext.viewport;\n      handleScroll2();\n      viewport.addEventListener(\"scroll\", handleScroll2);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll2);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollUp ? /* @__PURE__ */ jsx(\n    SelectScrollButtonImpl,\n    {\n      ...props,\n      ref: composedRefs,\n      onAutoScroll: () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }\n    }\n  ) : null;\n});\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\nvar SCROLL_DOWN_BUTTON_NAME = \"SelectScrollDownButton\";\nvar SelectScrollDownButton = React.forwardRef((props, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      let handleScroll2 = function() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown2);\n      };\n      var handleScroll = handleScroll2;\n      const viewport = contentContext.viewport;\n      handleScroll2();\n      viewport.addEventListener(\"scroll\", handleScroll2);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll2);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollDown ? /* @__PURE__ */ jsx(\n    SelectScrollButtonImpl,\n    {\n      ...props,\n      ref: composedRefs,\n      onAutoScroll: () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }\n    }\n  ) : null;\n});\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\nvar SelectScrollButtonImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext(\"SelectScrollButton\", __scopeSelect);\n  const autoScrollTimerRef = React.useRef(null);\n  const getItems = useCollection(__scopeSelect);\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: \"nearest\" });\n  }, [getItems]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"aria-hidden\": true,\n      ...scrollIndicatorProps,\n      ref: forwardedRef,\n      style: { flexShrink: 0, ...scrollIndicatorProps.style },\n      onPointerDown: composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      }),\n      onPointerMove: composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      }),\n      onPointerLeave: composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })\n    }\n  );\n});\nvar SEPARATOR_NAME = \"SelectSeparator\";\nvar SelectSeparator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.div, { \"aria-hidden\": true, ...separatorProps, ref: forwardedRef });\n  }\n);\nSelectSeparator.displayName = SEPARATOR_NAME;\nvar ARROW_NAME = \"SelectArrow\";\nvar SelectArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === \"popper\" ? /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef }) : null;\n  }\n);\nSelectArrow.displayName = ARROW_NAME;\nfunction shouldShowPlaceholder(value) {\n  return value === \"\" || value === void 0;\n}\nvar BubbleSelect = React.forwardRef(\n  (props, forwardedRef) => {\n    const { value, ...selectProps } = props;\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n    React.useEffect(() => {\n      const select = ref.current;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        \"value\"\n      );\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event(\"change\", { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n    return /* @__PURE__ */ jsx(VisuallyHidden, { asChild: true, children: /* @__PURE__ */ jsx(\"select\", { ...selectProps, ref: composedRefs, defaultValue: value }) });\n  }\n);\nBubbleSelect.displayName = \"BubbleSelect\";\nfunction useTypeaheadSearch(onSearchChange) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef(\"\");\n  const timerRef = React.useRef(0);\n  const handleTypeaheadSearch = React.useCallback(\n    (key) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n      (function updateSearch(value) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== \"\") timerRef.current = window.setTimeout(() => updateSearch(\"\"), 1e3);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = \"\";\n    window.clearTimeout(timerRef.current);\n  }, []);\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n  return [searchRef, handleTypeaheadSearch, resetTypeahead];\n}\nfunction findNextItem(items, search, currentItem) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find(\n    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : void 0;\n}\nfunction wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\nvar Root2 = Select;\nvar Trigger = SelectTrigger;\nvar Value = SelectValue;\nvar Icon = SelectIcon;\nvar Portal = SelectPortal;\nvar Content2 = SelectContent;\nvar Viewport = SelectViewport;\nvar Group = SelectGroup;\nvar Label = SelectLabel;\nvar Item = SelectItem;\nvar ItemText = SelectItemText;\nvar ItemIndicator = SelectItemIndicator;\nvar ScrollUpButton = SelectScrollUpButton;\nvar ScrollDownButton = SelectScrollDownButton;\nvar Separator = SelectSeparator;\nvar Arrow2 = SelectArrow;\nexport {\n  Arrow2 as Arrow,\n  Content2 as Content,\n  Group,\n  Icon,\n  Item,\n  ItemIndicator,\n  ItemText,\n  Label,\n  Portal,\n  Root2 as Root,\n  ScrollDownButton,\n  ScrollUpButton,\n  Select,\n  SelectArrow,\n  SelectContent,\n  SelectGroup,\n  SelectIcon,\n  SelectItem,\n  SelectItemIndicator,\n  SelectItemText,\n  SelectLabel,\n  SelectPortal,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n  SelectViewport,\n  Separator,\n  Trigger,\n  Value,\n  Viewport,\n  createSelectScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\nimport * as React from \"react\";\nimport { cn } from \"../util/cn.js\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"truncate\">{children}</span>\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"flex-shrink-0 h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n","import * as React from \"react\";\nimport { cn } from \"../util/cn.js\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":["MutationObserver","_a","Subscribable","client","options","__privateAdd","_MutationObserver_instances","_client","_currentResult","_currentMutation","_mutateOptions","__privateSet","__privateMethod","updateResult_fn","prevOptions","__privateGet","shallowEqualObjects","hashKey","action","notify_fn","variables","state","getDefaultState","notifyManager","context","_b","_d","_c","_f","_e","_h","_g","listener","useMutation","queryClient","useQueryClient","observer","React","result","onStoreChange","mutate","mutateOptions","noop","shouldThrowError","isCheckBoxInput","element","isDateObject","value","isNullOrUndefined","isObjectType","isObject","getEventValue","event","getNodeParentName","name","isNameInFieldArray","names","isPlainObject","tempObject","prototypeCopy","isWeb","cloneObject","data","copy","isArray","key","compact","isUndefined","val","get","object","path","defaultValue","isBoolean","isKey","stringToPath","input","set","index","tempPath","length","lastIndex","newValue","objValue","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","HookFormContext","useFormContext","FormProvider","props","children","getProxyFormState","formState","control","localProxyFormState","isRoot","_key","isEmptyObject","shouldRenderFormState","formStateData","_proxyFormState","updateFormState","convertToArrayPayload","shouldSubscribeByName","signalName","exact","currentName","useSubscribe","_props","subscription","useFormState","methods","disabled","_mounted","_localProxyFormState","_name","isString","generateWatchOutput","_names","formValues","isGlobal","fieldName","useWatch","updateValue","useController","shouldUnregister","isArrayField","_registerProps","_shouldUnregisterField","updateMounted","field","elm","message","Controller","appendErrors","validateAllFieldCriteria","errors","type","generateId","d","c","r","getFocusFieldName","getValidationModes","mode","isWatched","isBlurEvent","watchName","iterateFieldsByAction","fields","fieldsNames","abortEarly","currentField","updateFieldArrayRootError","error","fieldArrayErrors","isFileInput","isFunction","isHTMLElement","owner","isMessage","isRadioInput","isRegex","defaultResult","validResult","getCheckboxValue","values","option","defaultReturn","getRadioValue","previous","getValidateError","ref","getValueAndMessage","validationData","validateField","shouldUseNativeValidation","isFieldArray","refs","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","time","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","appendAt","fillEmptyArray","insert","moveArrayAt","from","to","prependAt","removeAtIndexes","indexes","i","temp","removeArrayAt","a","b","swapArrayAt","indexA","indexB","baseGet","updatePath","isEmptyArray","obj","unset","paths","childObject","updateAt","fieldValues","useFieldArray","keyName","setFields","ids","_fieldIds","_actioned","fieldArrayName","updateValues","updatedFieldArrayValues","append","appendValue","prepend","prependValue","remove","insert$1","insertValue","swap","move","update","item","replace","existingError","createSubject","_observers","o","isPrimitive","deepEqual","object1","object2","keys1","keys2","val1","val2","isMultipleSelect","live","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","defaultValues","getFieldValueAs","valueAsDate","setValueAs","getFieldValue","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","ASYNC_FUNCTION","hasPromiseValidation","fieldReference","validateFunction","hasValidation","schemaErrorLookup","foundError","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","createFormControl","_options","_formState","_defaultValues","_formValues","_state","delayErrorCallback","timer","_subjects","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","callback","wait","_updateValid","shouldUpdateValid","isValid","_executeSchema","executeBuiltInValidation","_updateIsValidating","isValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","touchedFields","_getDirty","updateErrors","_setErrors","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","disabledField","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","updatedFormState","executeSchemaAndUpdateState","shouldOnlyCheckValid","isFieldArrayRoot","isPromiseFunction","fieldError","_removeUnmounted","unregister","getValues","_getWatch","_getFieldArray","optionRef","checkboxRef","radioRef","trigger","setValues","fieldKey","setValue","cloneValue","onChange","target","isFieldValueUpdated","getCurrentFieldValue","_updateIsFieldValueUpdated","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","getFieldState","clearErrors","inputName","setError","currentError","currentRef","restOfErrorTree","watch","payload","_updateDisabledField","register","disabledIsDefined","fieldRef","radioOrCheckbox","_focusError","_disableForm","handleSubmit","onValid","onInvalid","e","onValidError","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","form","reset","useForm","_formControl","_values","isDirty","clamp","usePrevious","OPEN_KEYS","SELECTION_KEYS","SELECT_NAME","Collection","useCollection","createCollectionScope","createCollection","createSelectContext","createSelectScope","createContextScope","createPopperScope","usePopperScope","SelectProvider","useSelectContext","SelectNativeOptionsProvider","useSelectNativeOptionsContext","Select","__scopeSelect","openProp","defaultOpen","onOpenChange","valueProp","onValueChange","dir","autoComplete","popperScope","setTrigger","valueNode","setValueNode","valueNodeHasChildren","setValueNodeHasChildren","direction","useDirection","open","setOpen","useControllableState","triggerPointerDownPosRef","isFormControl","nativeOptionsSet","setNativeOptionsSet","nativeSelectKey","jsx","PopperPrimitive.Root","jsxs","useId","prev","optionsSet","BubbleSelect","TRIGGER_NAME","SelectTrigger","forwardedRef","triggerProps","isDisabled","composedRefs","useComposedRefs","getItems","pointerTypeRef","searchRef","handleTypeaheadSearch","resetTypeahead","useTypeaheadSearch","search","enabledItems","currentItem","nextItem","findNextItem","handleOpen","pointerEvent","PopperPrimitive.Anchor","Primitive","shouldShowPlaceholder","composeEventHandlers","isTypingAhead","VALUE_NAME","SelectValue","className","style","placeholder","valueProps","onValueNodeHasChildrenChange","hasChildren","useLayoutEffect","Fragment","ICON_NAME","SelectIcon","iconProps","PORTAL_NAME","SelectPortal","PortalPrimitive","CONTENT_NAME","SelectContent","fragment","setFragment","frag","ReactDOM","SelectContentProvider","SelectContentImpl","CONTENT_MARGIN","useSelectContentContext","CONTENT_IMPL_NAME","position","onCloseAutoFocus","onEscapeKeyDown","onPointerDownOutside","side","sideOffset","align","alignOffset","arrowPadding","collisionBoundary","collisionPadding","sticky","hideWhenDetached","avoidCollisions","contentProps","content","setContent","viewport","setViewport","node","selectedItem","setSelectedItem","selectedItemText","setSelectedItemText","isPositioned","setIsPositioned","firstValidItemFoundRef","hideOthers","useFocusGuards","focusFirst","candidates","firstItem","restItems","lastItem","PREVIOUSLY_FOCUSED_ELEMENT","candidate","focusSelectedItem","pointerMoveDelta","handlePointerMove","handlePointerUp","close","itemRefCallback","isFirstValidItem","handleItemLeave","itemTextRefCallback","SelectPosition","SelectPopperPosition","SelectItemAlignedPosition","popperContentProps","RemoveScroll","Slot","FocusScope","DismissableLayer","isModifierKey","candidateNodes","currentElement","currentIndex","ITEM_ALIGNED_POSITION_NAME","onPlaced","popperProps","contentContext","contentWrapper","setContentWrapper","shouldExpandOnScrollRef","shouldRepositionRef","triggerRect","contentRect","valueNodeRect","itemTextRect","itemTextOffset","left","leftDelta","minContentWidth","contentWidth","rightEdge","clampedLeft","right","rightDelta","leftEdge","clampedRight","items","availableHeight","itemsHeight","contentStyles","contentBorderTopWidth","contentPaddingTop","contentBorderBottomWidth","contentPaddingBottom","fullContentHeight","minContentHeight","viewportStyles","viewportPaddingTop","viewportPaddingBottom","topEdgeToTriggerMiddle","triggerMiddleToBottomEdge","selectedItemHalfHeight","itemOffsetMiddle","contentTopToItemMiddle","itemMiddleToContentBottom","isLastItem","viewportOffsetBottom","clampedTriggerMiddleToBottomEdge","height","isFirstItem","contentZIndex","setContentZIndex","handleScrollButtonChange","SelectViewportProvider","POPPER_POSITION_NAME","PopperPrimitive.Content","useSelectViewportContext","VIEWPORT_NAME","SelectViewport","nonce","viewportProps","viewportContext","prevScrollTopRef","scrolledBy","cssMinHeight","cssHeight","prevHeight","nextHeight","clampedNextHeight","heightDiff","GROUP_NAME","SelectGroupContextProvider","useSelectGroupContext","SelectGroup","groupProps","groupId","LABEL_NAME","SelectLabel","labelProps","groupContext","ITEM_NAME","SelectItemContextProvider","useSelectItemContext","SelectItem","textValueProp","itemProps","isSelected","textValue","setTextValue","isFocused","setIsFocused","textId","handleSelect","prevTextValue","ITEM_TEXT_NAME","SelectItemText","itemTextProps","itemContext","nativeOptionsContext","itemTextNode","setItemTextNode","textContent","nativeOption","onNativeOptionAdd","onNativeOptionRemove","ITEM_INDICATOR_NAME","SelectItemIndicator","itemIndicatorProps","SCROLL_UP_BUTTON_NAME","SelectScrollUpButton","canScrollUp","setCanScrollUp","handleScroll2","canScrollUp2","SelectScrollButtonImpl","SCROLL_DOWN_BUTTON_NAME","SelectScrollDownButton","canScrollDown","setCanScrollDown","maxScroll","canScrollDown2","onAutoScroll","scrollIndicatorProps","autoScrollTimerRef","clearAutoScrollTimer","activeItem","SEPARATOR_NAME","SelectSeparator","separatorProps","ARROW_NAME","SelectArrow","arrowProps","PopperPrimitive.Arrow","selectProps","prevValue","select","selectProto","VisuallyHidden","onSearchChange","handleSearchChange","useCallbackRef","timerRef","updateSearch","normalizedSearch","char","currentItemIndex","wrappedItems","wrapArray","v","array","startIndex","_","Root2","Trigger","Value","Icon","Portal","Content2","Viewport","Group","Label","Item","ItemText","ItemIndicator","ScrollUpButton","ScrollDownButton","Separator","SelectPrimitive.Root","SelectPrimitive.Group","SelectPrimitive.Value","SelectPrimitive.Trigger","cn","SelectPrimitive.Icon","ChevronDown","SelectPrimitive.ScrollUpButton","ChevronUp","SelectPrimitive.ScrollDownButton","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectPrimitive.Label","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","Check","SelectPrimitive.ItemText","SelectPrimitive.Separator","Input"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}