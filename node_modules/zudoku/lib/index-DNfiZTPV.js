import { j as p } from "./jsx-runtime-B6kdoens.js";
import { z as ma, A as ha } from "./ZudokuContext-BEmsYQoq.js";
import { XIcon as cr, EraserIcon as ur, ChevronsUpDownIcon as ya, LogInIcon as va, CirclePlayIcon as ga } from "lucide-react";
import { createClient as ba } from "zudoku/openapi-worker";
import { c as xa, h as ka, u as $a, a as Sa, P as ft, b as vt, B as je, S as wa, V as ja, n as Na } from "./index-Do_BBSIs.js";
import { E as Ta } from "./ErrorPage-B0COs372.js";
import { a as F, b as Oa, S as We, C as Ca } from "./Markdown-CWI6lU11.js";
import { j as Pa } from "./joinPath-B7kNnUX4.js";
import * as P from "react";
import { useRef as dr, useEffect as pr, useState as fr, useTransition as mr, Fragment as Ze, createContext as Ea, useContext as Ra, useMemo as Aa } from "react";
import { O as hr, C as yr, a as qa, b as vr, D as gr, e as Fa, d as Ia, T as _a, c as br, R as La, I as Ua, P as Ma, f as me } from "./SidebarBadge-DmI5hT04.js";
import { g as Yt, I as it, C as $e, h as Ha, u as Ba, a as Va, S as vn, b as gn, c as bn, d as xn, f as gt, F as za } from "./Input-CHfE_2Qk.js";
import { a as xr } from "./state-CsuHT8ZO.js";
import { S as kn } from "./Spinner-3cQDBVGr.js";
import { g as Da, c as Me, a as Ja } from "./index-DJqnphbT.js";
import { b as Wa, d as Ga } from "./index-BRCiYFaL.js";
import { o as $n, s as _t, t as Qa, a as Ka, c as Ya, C as Xa, b as Za, f as ei } from "./urql-core-KJnLL26g.js";
import { c as ti } from "./router-Oe6YmY6B.js";
var kr = {}, mt = P.createContext(kr), lu = mt.Provider;
mt.Consumer;
mt.displayName = "UrqlContext";
var ni = () => {
  var e = P.useContext(mt);
  if (e === kr && process.env.NODE_ENV !== "production") {
    var t = "No client has been specified using urql's Provider. please create a client and add a Provider.";
    throw console.error(t), new Error(t);
  }
  return e;
}, ri = {
  fetching: !1,
  stale: !1,
  error: void 0,
  data: void 0,
  extensions: void 0,
  operation: void 0
}, ai = (e, t) => e === t || !(!e || !t || e.key !== t.key), bt = (e, t) => {
  var n = {
    ...e,
    ...t,
    data: t.data !== void 0 || t.error ? t.data : e.data,
    fetching: !!t.fetching,
    stale: !!t.stale
  };
  return ((a, s) => {
    for (var i in a)
      if (!(i in s))
        return !0;
    for (var r in s)
      if (r === "operation" ? !ai(a[r], s[r]) : a[r] !== s[r])
        return !0;
    return !1;
  })(e, n) ? n : e;
}, ii = (e, t) => {
  for (var n = 0, a = t.length; n < a; n++)
    if (e[n] !== t[n])
      return !0;
  return !1;
}, xt = P.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
function Sn(e, t) {
  process.env.NODE_ENV !== "production" && xt && xt.ReactCurrentOwner && xt.ReactCurrentOwner.current ? Promise.resolve(t).then(e) : e(t);
}
function oi(e, t) {
  var n = P.useRef(void 0);
  return P.useMemo(() => {
    var a = Ya(e, t);
    return n.current !== void 0 && n.current.key === a.key ? n.current : (n.current = a, a);
  }, [e, t]);
}
var si = (e) => {
  if (!e._react) {
    var t = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Map();
    e.operations$ && _t((a) => {
      a.kind === "teardown" && t.has(a.key) && (t.delete(a.key), n.delete(a.key));
    })(e.operations$), e._react = {
      get: (a) => n.get(a),
      set(a, s) {
        t.delete(a), n.set(a, s);
      },
      dispose(a) {
        t.add(a);
      }
    };
  }
  return e._react;
}, li = (e, t) => t && t.suspense !== void 0 ? !!t.suspense : e.suspense;
function ci(e) {
  var t = ni(), n = si(t), a = li(t, e.context), s = oi(e.query, e.variables), i = P.useMemo(() => {
    if (e.pause)
      return null;
    var d = t.executeQuery(s, {
      requestPolicy: e.requestPolicy,
      ...e.context
    });
    return a ? $n((m) => {
      n.set(s.key, m);
    })(d) : d;
  }, [n, t, s, a, e.pause, e.requestPolicy, e.context]), r = P.useCallback((d, m) => {
    if (!d)
      return {
        fetching: !1
      };
    var h = n.get(s.key);
    if (h) {
      if (m && h != null && "then" in h)
        throw h;
    } else {
      var v, g = _t((y) => {
        h = y, v && v(h);
      })(Qa(() => m && !v || !h)(d));
      if (h == null && m) {
        var b = new Promise((y) => {
          v = y;
        });
        throw n.set(s.key, b), b;
      } else
        g.unsubscribe();
    }
    return h || {
      fetching: !0
    };
  }, [n, s]), o = [t, s, e.requestPolicy, e.context, e.pause], [l, c] = P.useState(() => [i, bt(ri, r(i, a)), o]), u = l[1];
  i !== l[0] && ii(l[2], o) && c([i, u = bt(l[1], r(i, a)), o]), P.useEffect(() => {
    var d = l[0], m = l[2][1], h = !1, v = (b) => {
      h = !0, Sn(c, (y) => {
        var x = bt(y[1], b);
        return y[1] !== x ? [y[0], x, y[2]] : y;
      });
    };
    if (d) {
      var g = _t(v)(Ka(() => {
        v({
          fetching: !1
        });
      })(d));
      return h || v({
        fetching: !0
      }), () => {
        n.dispose(m.key), g.unsubscribe();
      };
    } else
      v({
        fetching: !1
      });
  }, [n, l[0], l[2][1]]);
  var f = P.useCallback((d) => {
    var m = {
      requestPolicy: e.requestPolicy,
      ...e.context,
      ...d
    };
    Sn(c, (h) => [a ? $n((v) => {
      n.set(s.key, v);
    })(t.executeQuery(s, m)) : t.executeQuery(s, m), h[1], o]);
  }, [t, n, s, a, e.requestPolicy, e.context, e.pause]);
  return [u, f];
}
const ui = {
  kind: "Document",
  definitions: [
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OperationsFragment" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OperationItem" }
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "slug" } },
          { kind: "Field", name: { kind: "Name", value: "summary" } },
          { kind: "Field", name: { kind: "Name", value: "method" } },
          { kind: "Field", name: { kind: "Name", value: "description" } },
          { kind: "Field", name: { kind: "Name", value: "operationId" } },
          { kind: "Field", name: { kind: "Name", value: "contentTypes" } },
          { kind: "Field", name: { kind: "Name", value: "path" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "parameters" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "in" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                { kind: "Field", name: { kind: "Name", value: "required" } },
                { kind: "Field", name: { kind: "Name", value: "schema" } },
                { kind: "Field", name: { kind: "Name", value: "style" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "examples" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "description" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "externalValue" }
                      },
                      { kind: "Field", name: { kind: "Name", value: "value" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "summary" }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "requestBody" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "content" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "mediaType" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "encoding" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" }
                            }
                          ]
                        }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "schema" }
                      }
                    ]
                  }
                },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                { kind: "Field", name: { kind: "Name", value: "required" } }
              ]
            }
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "responses" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "statusCode" } },
                { kind: "Field", name: { kind: "Name", value: "links" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "content" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "mediaType" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "encoding" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" }
                            }
                          ]
                        }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "schema" }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}, di = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "ServersQuery" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" }
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "JSON" } }
          }
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "type" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "SchemaType" }
            }
          }
        }
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "schema" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" }
                }
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "type" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "type" }
                }
              }
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "url" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "servers" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}, pi = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "AllOperations" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" }
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "JSON" } }
          }
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "type" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "SchemaType" }
            }
          }
        }
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "schema" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" }
                }
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "type" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "type" }
                }
              }
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "description" } },
                { kind: "Field", name: { kind: "Name", value: "title" } },
                { kind: "Field", name: { kind: "Name", value: "url" } },
                { kind: "Field", name: { kind: "Name", value: "version" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "tags" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "description" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "operations" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "slug" }
                            },
                            {
                              kind: "FragmentSpread",
                              name: {
                                kind: "Name",
                                value: "OperationsFragment"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      kind: "FragmentDefinition",
      name: { kind: "Name", value: "OperationsFragment" },
      typeCondition: {
        kind: "NamedType",
        name: { kind: "Name", value: "OperationItem" }
      },
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          { kind: "Field", name: { kind: "Name", value: "slug" } },
          { kind: "Field", name: { kind: "Name", value: "summary" } },
          { kind: "Field", name: { kind: "Name", value: "method" } },
          { kind: "Field", name: { kind: "Name", value: "description" } },
          { kind: "Field", name: { kind: "Name", value: "operationId" } },
          { kind: "Field", name: { kind: "Name", value: "contentTypes" } },
          { kind: "Field", name: { kind: "Name", value: "path" } },
          {
            kind: "Field",
            name: { kind: "Name", value: "parameters" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "name" } },
                { kind: "Field", name: { kind: "Name", value: "in" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                { kind: "Field", name: { kind: "Name", value: "required" } },
                { kind: "Field", name: { kind: "Name", value: "schema" } },
                { kind: "Field", name: { kind: "Name", value: "style" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "examples" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "description" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "externalValue" }
                      },
                      { kind: "Field", name: { kind: "Name", value: "value" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "summary" }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "requestBody" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "content" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "mediaType" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "encoding" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" }
                            }
                          ]
                        }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "schema" }
                      }
                    ]
                  }
                },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                { kind: "Field", name: { kind: "Name", value: "required" } }
              ]
            }
          },
          {
            kind: "Field",
            name: { kind: "Name", value: "responses" },
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "statusCode" } },
                { kind: "Field", name: { kind: "Name", value: "links" } },
                { kind: "Field", name: { kind: "Name", value: "description" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "content" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "mediaType" }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "encoding" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "name" }
                            }
                          ]
                        }
                      },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "schema" }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}, fi = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "getServerQuery" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" }
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "JSON" } }
          }
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "type" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "SchemaType" }
            }
          }
        }
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "schema" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" }
                }
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "type" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "type" }
                }
              }
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                { kind: "Field", name: { kind: "Name", value: "url" } },
                {
                  kind: "Field",
                  name: { kind: "Name", value: "servers" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      { kind: "Field", name: { kind: "Name", value: "url" } }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}, mi = {
  kind: "Document",
  definitions: [
    {
      kind: "OperationDefinition",
      operation: "query",
      name: { kind: "Name", value: "GetCategories" },
      variableDefinitions: [
        {
          kind: "VariableDefinition",
          variable: {
            kind: "Variable",
            name: { kind: "Name", value: "input" }
          },
          type: {
            kind: "NonNullType",
            type: { kind: "NamedType", name: { kind: "Name", value: "JSON" } }
          }
        },
        {
          kind: "VariableDefinition",
          variable: { kind: "Variable", name: { kind: "Name", value: "type" } },
          type: {
            kind: "NonNullType",
            type: {
              kind: "NamedType",
              name: { kind: "Name", value: "SchemaType" }
            }
          }
        }
      ],
      selectionSet: {
        kind: "SelectionSet",
        selections: [
          {
            kind: "Field",
            name: { kind: "Name", value: "schema" },
            arguments: [
              {
                kind: "Argument",
                name: { kind: "Name", value: "input" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "input" }
                }
              },
              {
                kind: "Argument",
                name: { kind: "Name", value: "type" },
                value: {
                  kind: "Variable",
                  name: { kind: "Name", value: "type" }
                }
              }
            ],
            selectionSet: {
              kind: "SelectionSet",
              selections: [
                {
                  kind: "Field",
                  name: { kind: "Name", value: "tags" },
                  selectionSet: {
                    kind: "SelectionSet",
                    selections: [
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "__typename" }
                      },
                      { kind: "Field", name: { kind: "Name", value: "name" } },
                      {
                        kind: "Field",
                        name: { kind: "Name", value: "operations" },
                        selectionSet: {
                          kind: "SelectionSet",
                          selections: [
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "__typename" }
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "slug" }
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "deprecated" }
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "method" }
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "summary" }
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "operationId" }
                            },
                            {
                              kind: "Field",
                              name: { kind: "Name", value: "path" }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}, hi = {
  "\n  query ServersQuery($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      url\n      servers {\n        url\n      }\n    }\n  }\n": di,
  "\n  fragment OperationsFragment on OperationItem {\n    slug\n    summary\n    method\n    description\n    operationId\n    contentTypes\n    path\n    parameters {\n      name\n      in\n      description\n      required\n      schema\n      style\n      examples {\n        name\n        description\n        externalValue\n        value\n        summary\n      }\n    }\n    requestBody {\n      content {\n        mediaType\n        encoding {\n          name\n        }\n        schema\n      }\n      description\n      required\n    }\n    responses {\n      statusCode\n      links\n      description\n      content {\n        mediaType\n        encoding {\n          name\n        }\n        schema\n      }\n    }\n  }\n": ui,
  "\n  query AllOperations($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      description\n      title\n      url\n      version\n      tags {\n        name\n        description\n        operations {\n          slug\n          ...OperationsFragment\n        }\n      }\n    }\n  }\n": pi,
  "\n  query getServerQuery($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      url\n      servers {\n        url\n      }\n    }\n  }\n": fi,
  "\n  query GetCategories($input: JSON!, $type: SchemaType!) {\n    schema(input: $input, type: $type) {\n      tags {\n        __typename\n        name\n        operations {\n          __typename\n          slug\n          deprecated\n          method\n          summary\n          operationId\n          path\n        }\n      }\n    }\n  }\n": mi
};
function $r(e) {
  return hi[e] ?? {};
}
const yi = Ia, vi = _a, gi = Fa, Sr = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  hr,
  {
    ref: n,
    className: F(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      e
    ),
    ...t
  }
));
Sr.displayName = hr.displayName;
const wr = P.forwardRef(({ className: e, children: t, ...n }, a) => /* @__PURE__ */ p.jsxs(gi, { children: [
  /* @__PURE__ */ p.jsx(Sr, {}),
  /* @__PURE__ */ p.jsxs(
    yr,
    {
      ref: a,
      className: F(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg border-border",
        e
      ),
      ...n,
      children: [
        t,
        /* @__PURE__ */ p.jsxs(qa, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground", children: [
          /* @__PURE__ */ p.jsx(cr, { className: "h-4 w-4" }),
          /* @__PURE__ */ p.jsx("span", { className: "sr-only", children: "Close" })
        ] })
      ]
    }
  )
] }));
wr.displayName = yr.displayName;
const jr = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  vr,
  {
    ref: n,
    className: F(
      "text-lg font-semibold leading-none tracking-tight",
      e
    ),
    ...t
  }
));
jr.displayName = vr.displayName;
const bi = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  gr,
  {
    ref: n,
    className: F("text-sm text-muted-foreground", e),
    ...t
  }
));
bi.displayName = gr.displayName;
const ot = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  "div",
  {
    ref: n,
    className: F(
      "rounded-xl border bg-card text-card-foreground shadow",
      e
    ),
    ...t
  }
));
ot.displayName = "Card";
const Nr = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  "div",
  {
    ref: n,
    className: F("flex flex-col space-y-1.5 p-6", e),
    ...t
  }
));
Nr.displayName = "CardHeader";
const Tr = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  "h3",
  {
    ref: n,
    className: F("font-semibold leading-none tracking-tight", e),
    ...t
  }
));
Tr.displayName = "CardTitle";
const xi = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  "p",
  {
    ref: n,
    className: F("text-sm text-muted-foreground", e),
    ...t
  }
));
xi.displayName = "CardDescription";
const Or = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx("div", { ref: n, className: F("p-6 pt-0", e), ...t }));
Or.displayName = "CardContent";
const ki = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  "div",
  {
    ref: n,
    className: F("flex items-center p-6 pt-0", e),
    ...t
  }
));
ki.displayName = "CardFooter";
var Xt = "Tabs", [$i, cu] = xa(Xt, [
  br
]), Cr = br(), [Si, Zt] = $i(Xt), Pr = P.forwardRef(
  (e, t) => {
    const {
      __scopeTabs: n,
      value: a,
      onValueChange: s,
      defaultValue: i,
      orientation: r = "horizontal",
      dir: o,
      activationMode: l = "automatic",
      ...c
    } = e, u = ka(o), [f, d] = $a({
      prop: a,
      onChange: s,
      defaultProp: i
    });
    return /* @__PURE__ */ p.jsx(
      Si,
      {
        scope: n,
        baseId: Sa(),
        value: f,
        onValueChange: d,
        orientation: r,
        dir: u,
        activationMode: l,
        children: /* @__PURE__ */ p.jsx(
          ft.div,
          {
            dir: u,
            "data-orientation": r,
            ...c,
            ref: t
          }
        )
      }
    );
  }
);
Pr.displayName = Xt;
var Er = "TabsList", Rr = P.forwardRef(
  (e, t) => {
    const { __scopeTabs: n, loop: a = !0, ...s } = e, i = Zt(Er, n), r = Cr(n);
    return /* @__PURE__ */ p.jsx(
      La,
      {
        asChild: !0,
        ...r,
        orientation: i.orientation,
        dir: i.dir,
        loop: a,
        children: /* @__PURE__ */ p.jsx(
          ft.div,
          {
            role: "tablist",
            "aria-orientation": i.orientation,
            ...s,
            ref: t
          }
        )
      }
    );
  }
);
Rr.displayName = Er;
var Ar = "TabsTrigger", qr = P.forwardRef(
  (e, t) => {
    const { __scopeTabs: n, value: a, disabled: s = !1, ...i } = e, r = Zt(Ar, n), o = Cr(n), l = _r(r.baseId, a), c = Lr(r.baseId, a), u = a === r.value;
    return /* @__PURE__ */ p.jsx(
      Ua,
      {
        asChild: !0,
        ...o,
        focusable: !s,
        active: u,
        children: /* @__PURE__ */ p.jsx(
          ft.button,
          {
            type: "button",
            role: "tab",
            "aria-selected": u,
            "aria-controls": c,
            "data-state": u ? "active" : "inactive",
            "data-disabled": s ? "" : void 0,
            disabled: s,
            id: l,
            ...i,
            ref: t,
            onMouseDown: vt(e.onMouseDown, (f) => {
              !s && f.button === 0 && f.ctrlKey === !1 ? r.onValueChange(a) : f.preventDefault();
            }),
            onKeyDown: vt(e.onKeyDown, (f) => {
              [" ", "Enter"].includes(f.key) && r.onValueChange(a);
            }),
            onFocus: vt(e.onFocus, () => {
              const f = r.activationMode !== "manual";
              !u && !s && f && r.onValueChange(a);
            })
          }
        )
      }
    );
  }
);
qr.displayName = Ar;
var Fr = "TabsContent", Ir = P.forwardRef(
  (e, t) => {
    const { __scopeTabs: n, value: a, forceMount: s, children: i, ...r } = e, o = Zt(Fr, n), l = _r(o.baseId, a), c = Lr(o.baseId, a), u = a === o.value, f = P.useRef(u);
    return P.useEffect(() => {
      const d = requestAnimationFrame(() => f.current = !1);
      return () => cancelAnimationFrame(d);
    }, []), /* @__PURE__ */ p.jsx(Ma, { present: s || u, children: ({ present: d }) => /* @__PURE__ */ p.jsx(
      ft.div,
      {
        "data-state": u ? "active" : "inactive",
        "data-orientation": o.orientation,
        role: "tabpanel",
        "aria-labelledby": l,
        hidden: !d,
        id: c,
        tabIndex: 0,
        ...r,
        ref: t,
        style: {
          ...e.style,
          animationDuration: f.current ? "0s" : void 0
        },
        children: d && i
      }
    ) });
  }
);
Ir.displayName = Fr;
function _r(e, t) {
  return `${e}-trigger-${t}`;
}
function Lr(e, t) {
  return `${e}-content-${t}`;
}
var Ur = Pr, en = Rr, tn = qr, nn = Ir;
const wn = Ur, Lt = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  en,
  {
    ref: n,
    className: F(
      "inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground",
      e
    ),
    ...t
  }
));
Lt.displayName = en.displayName;
const Oe = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  tn,
  {
    ref: n,
    className: F(
      "inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow",
      e
    ),
    ...t
  }
));
Oe.displayName = tn.displayName;
const Ce = P.forwardRef(({ className: e, ...t }, n) => /* @__PURE__ */ p.jsx(
  nn,
  {
    ref: n,
    className: F(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      e
    ),
    ...t
  }
));
Ce.displayName = nn.displayName;
const kt = (e) => Math.abs(
  isNaN(parseInt(e)) ? e.toLowerCase().charCodeAt(0) - 96 : isNaN(parseInt(e)) ? 0 : parseInt(e)
), $t = (e) => e.length > 1 ? parseInt(e.split("").reduce((t, n) => `${kt(t) + kt(n)}`)) : kt(e), wi = (e, t = {}) => {
  const n = (3 * $t(e) + 2 * $t(e) + $t(e)) % 360, { saturation: a = 75, lightness: s = 60 } = t;
  return `${n}deg ${a}% ${s}%`;
}, St = "data-linked-param", ji = (e) => {
  const [t] = Oa();
  return wi(
    e,
    t ? void 0 : { saturation: 85, lightness: 50 }
  );
}, rn = ({
  name: e,
  className: t,
  backgroundOpacity: n = "100%",
  borderOpacity: a = "100%",
  slug: s,
  children: i,
  onClick: r
}) => {
  const o = dr(null), l = e.replace(/[{}]/g, ""), c = s == null ? void 0 : s.replace(/[{}]/g, ""), u = ji(l), f = `hsl(${u} / ${a})`, d = `hsl(${u} / ${n})`;
  return pr(() => {
    if (!c || !o.current) return;
    const m = () => {
      document.querySelectorAll(`[${St}="${c}"]`).forEach((v) => {
        v instanceof HTMLElement && (v.dataset.active = "true");
      });
    }, h = () => {
      document.querySelectorAll(`[${St}="${c}"]`).forEach((v) => {
        v instanceof HTMLElement && (v.dataset.active = "false");
      });
    };
    return o.current.addEventListener("mouseenter", m), o.current.addEventListener("mouseleave", h), () => {
      var v, g;
      (v = o.current) == null || v.removeEventListener("mouseenter", m), (g = o.current) == null || g.removeEventListener("mouseleave", h);
    };
  }, [c]), /* @__PURE__ */ p.jsxs(
    "span",
    {
      className: F("inline-flex relative rounded group", t),
      [St]: c,
      ref: o,
      onClick: r,
      children: [
        /* @__PURE__ */ p.jsx(
          "span",
          {
            className: "absolute inset-0 border-b-2 transition-opacity duration-200 opacity-30 group-data-[active=true]:opacity-100",
            style: { borderColor: f, backgroundColor: d }
          }
        ),
        /* @__PURE__ */ p.jsx("span", { className: "relative", children: i ?? e })
      ]
    }
  );
}, Ni = (e, t, n) => {
  const a = t.replace(/(:\w+|\{\w+})/g, (i) => {
    var l;
    const r = i.replace(/[:{}]/g, "");
    return ((l = n.pathParams.find((c) => c.name === r)) == null ? void 0 : l.value) ?? i;
  }), s = new URL(
    a.replace(/^\//, ""),
    e.endsWith("/") ? e : `${e}/`
  );
  return n.queryParams.filter((i) => i.active).forEach((i) => {
    s.searchParams.set(i.name, i.value);
  }), s;
}, Ti = ({
  control: e,
  register: t
}) => {
  const { fields: n, append: a, remove: s } = Yt({
    control: e,
    name: "headers"
  });
  return /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-2", children: [
    /* @__PURE__ */ p.jsx("table", { className: "w-full [&_td]:border [&_td]:p-1.5 [&_td]:px-2", children: /* @__PURE__ */ p.jsx("tbody", { children: n.map((i, r) => /* @__PURE__ */ p.jsxs(
      "tr",
      {
        className: "group has-[:focus]:bg-muted/50 hover:bg-muted/50",
        children: [
          /* @__PURE__ */ p.jsx("td", { className: "flex gap-2 items-center", children: /* @__PURE__ */ p.jsx(
            it,
            {
              ...t(`headers.${r}.name`),
              placeholder: "Name",
              className: "border-0 shadow-none text-xs font-mono",
              autoComplete: "off"
            }
          ) }),
          /* @__PURE__ */ p.jsx("td", { children: /* @__PURE__ */ p.jsxs("div", { className: "flex items-center gap-2", children: [
            /* @__PURE__ */ p.jsx(
              it,
              {
                placeholder: "Value",
                className: "border-0 shadow-none text-xs font-mono",
                ...t(`headers.${r}.value`),
                autoComplete: "off"
              }
            ),
            /* @__PURE__ */ p.jsx(
              je,
              {
                size: "icon",
                variant: "ghost",
                className: "text-muted-foreground opacity-0 group-hover:opacity-100",
                onClick: () => {
                  s(r);
                },
                type: "button",
                children: /* @__PURE__ */ p.jsx(cr, { size: 16 })
              }
            )
          ] }) })
        ]
      },
      i.id
    )) }) }),
    /* @__PURE__ */ p.jsx("div", { className: "text-end", children: /* @__PURE__ */ p.jsx(
      je,
      {
        className: "",
        onClick: () => a({ name: "", value: "" }),
        type: "button",
        children: "Add header"
      }
    ) })
  ] });
}, Oi = ({
  control: e
}) => {
  const { fields: t } = Yt({
    control: e,
    name: "pathParams"
  });
  return /* @__PURE__ */ p.jsx("table", { className: "w-full table-auto [&_td]:border [&_td]:py-1 [&_td]:px-2", children: /* @__PURE__ */ p.jsx("tbody", { children: t.map((n, a) => /* @__PURE__ */ p.jsxs("tr", { className: "hover:bg-accent/40", children: [
    /* @__PURE__ */ p.jsx("td", { children: /* @__PURE__ */ p.jsx(
      $e,
      {
        control: e,
        name: `pathParams.${a}.value`,
        render: ({ field: s }) => /* @__PURE__ */ p.jsxs("div", { children: [
          /* @__PURE__ */ p.jsx(
            rn,
            {
              slug: n.name,
              name: n.name,
              backgroundOpacity: "25%",
              borderOpacity: s.value ? "100%" : "0",
              className: F(
                "font-mono text-xs m-2",
                !s.value && "opacity-60"
              )
            }
          ),
          "*"
        ] })
      }
    ) }),
    /* @__PURE__ */ p.jsx("td", { children: /* @__PURE__ */ p.jsxs("div", { className: "flex justify-between items-center", children: [
      /* @__PURE__ */ p.jsx(
        $e,
        {
          control: e,
          name: `pathParams.${a}.value`,
          render: ({ field: s }) => /* @__PURE__ */ p.jsx(
            it,
            {
              ...s,
              placeholder: "Enter value",
              className: "border-0 shadow-none ring-0 font-mono text-xs"
            }
          )
        }
      ),
      /* @__PURE__ */ p.jsx(
        $e,
        {
          control: e,
          name: `pathParams.${a}.value`,
          render: ({ field: s }) => /* @__PURE__ */ p.jsx(
            je,
            {
              size: "icon",
              type: "button",
              variant: "ghost",
              "aria-label": "Clear value",
              className: F(
                "ms-2",
                s.value.length === 0 ? "opacity-0 pointer-events-none" : "opacity-100"
              ),
              title: "Clear value",
              onClick: () => s.onChange(""),
              children: /* @__PURE__ */ p.jsx(ur, { size: 16 })
            }
          )
        }
      )
    ] }) })
  ] }, n.id)) }) });
}, Ci = (e, t) => {
  const n = P.forwardRef(({ className: a, asChild: s, ...i }, r) => {
    const o = s ? wa : e;
    return P.createElement(o, {
      ...i,
      ref: r,
      className: F(t, a)
    });
  });
  return n.displayName = `VariantComponent(${e})`, n;
}, Pi = Ci(
  "input",
  "px-2 bg-transparent h-6 font-mono text-xs m-2"
), Ei = ({
  control: e,
  queryParams: t
}) => {
  const { fields: n } = Yt({
    control: e,
    name: "queryParams"
  }), a = Ha(), s = t.map((o) => !!o.isRequired), r = a.watch("identity") !== et;
  return /* @__PURE__ */ p.jsx("div", { className: "", children: /* @__PURE__ */ p.jsx("table", { className: "w-full [&_td]:border [&_td]:p-1.5 [&_td]:px-2", children: /* @__PURE__ */ p.jsx("tbody", { children: n.filter(
    // TODO remove this hack for Accu or make it more generic
    (o) => !(r && o.name === "apikey")
  ).map((o, l) => /* @__PURE__ */ p.jsxs("tr", { className: "hover:bg-accent/40", children: [
    /* @__PURE__ */ p.jsx("td", { className: "text-center", children: /* @__PURE__ */ p.jsx(
      $e,
      {
        control: e,
        name: `queryParams.${l}.active`,
        render: ({ field: c }) => /* @__PURE__ */ p.jsx(
          "input",
          {
            type: "checkbox",
            id: `queryParams.${l}.active`,
            checked: c.value,
            onChange: c.onChange
          }
        )
      }
    ) }),
    /* @__PURE__ */ p.jsx("td", { children: /* @__PURE__ */ p.jsx(
      $e,
      {
        control: e,
        render: ({ field: c }) => /* @__PURE__ */ p.jsx(Pi, { asChild: !0, children: /* @__PURE__ */ p.jsxs(
          "label",
          {
            className: "flex items-center cursor-pointer",
            htmlFor: `queryParams.${l}.active`,
            title: s[l] ? "Required field" : void 0,
            children: [
              c.value,
              s[l] && /* @__PURE__ */ p.jsx("sup", { children: " *" })
            ]
          }
        ) }),
        name: `queryParams.${l}.name`
      }
    ) }),
    /* @__PURE__ */ p.jsx("td", { children: /* @__PURE__ */ p.jsxs("div", { className: "flex justify-between items-center", children: [
      /* @__PURE__ */ p.jsx(
        $e,
        {
          control: e,
          render: ({ field: c }) => /* @__PURE__ */ p.jsx(
            it,
            {
              ...c,
              onChange: (u) => {
                c.onChange(u.target.value), u.target.value.length > 0 && a.setValue(`queryParams.${l}.active`, !0);
              },
              placeholder: "Enter value",
              className: "w-full border-0 shadow-none text-xs font-mono"
            }
          ),
          name: `queryParams.${l}.value`
        }
      ),
      /* @__PURE__ */ p.jsx(
        $e,
        {
          control: e,
          render: ({ field: c }) => /* @__PURE__ */ p.jsx(
            je,
            {
              size: "icon",
              type: "button",
              variant: "ghost",
              "aria-label": "Clear value",
              className: F(
                "ms-2",
                c.value.length === 0 ? "opacity-0 pointer-events-none" : "opacity-100"
              ),
              title: "Clear value",
              onClick: () => c.onChange(""),
              children: /* @__PURE__ */ p.jsx(ur, { size: 16 })
            }
          ),
          name: `queryParams.${l}.value`
        }
      )
    ] }) })
  ] }, o.id)) }) }) });
}, Mr = ({
  value: e,
  onChange: t,
  className: n,
  options: a,
  showChevrons: s = !0
}) => /* @__PURE__ */ p.jsxs("div", { className: "grid", children: [
  /* @__PURE__ */ p.jsx(
    "select",
    {
      className: F(
        "row-start-1 col-start-1 border border-input text-foreground px-2 py-1 pe-6",
        "rounded-md appearance-none bg-zinc-50 hover:bg-white dark:bg-zinc-800 hover:dark:bg-zinc-800/75",
        n
      ),
      value: e,
      onChange: t,
      children: a.map((i) => /* @__PURE__ */ p.jsx("option", { value: i.value, children: i.label }, i.value))
    }
  ),
  /* @__PURE__ */ p.jsx(
    "div",
    {
      className: F(
        !s && "hidden",
        "row-start-1 col-start-1 self-center justify-self-end relative end-2 pointer-events-none"
      ),
      children: /* @__PURE__ */ p.jsx(ya, { size: 14 })
    }
  )
] }), Ri = (e) => {
  var n;
  return (n = Object.entries({
    "application/json": "json",
    "text/json": "json",
    "text/html": "html",
    "text/css": "css",
    "text/javascript": "javascript",
    "application/xml": "xml",
    "application/xhtml+xml": "xhtml"
  }).find(
    ([a]) => e.includes(a)
  )) == null ? void 0 : n[1];
}, Ai = (e) => {
  const t = e.get("Content-Type") || "";
  return Ri(t);
}, qi = (e) => {
  try {
    return JSON.stringify(JSON.parse(e), null, 2);
  } catch {
    return null;
  }
}, Fi = ({
  body: e = "",
  headers: t
}) => {
  const n = Ai(t), a = qi(e), s = a || e, [i, r] = fr(
    a ? "formatted" : "raw"
  );
  return /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-2", children: [
    /* @__PURE__ */ p.jsx(ot, { className: "shadow-none", children: /* @__PURE__ */ p.jsx(
      We,
      {
        language: i === "raw" ? a ? "plain" : n : "json",
        noBackground: !0,
        className: "overflow-x-auto p-4 text-xs max-h-[calc(83.333vh-180px)]",
        code: i === "raw" ? e : s
      }
    ) }),
    a && /* @__PURE__ */ p.jsx("div", { className: "flex justify-end", children: /* @__PURE__ */ p.jsx(
      Mr,
      {
        value: i,
        onChange: (o) => r(o.target.value),
        options: [
          { value: "formatted", label: "Formatted" },
          { value: "raw", label: "Raw" }
        ]
      }
    ) })
  ] });
}, et = "__none", Ii = {
  200: "OK",
  201: "Created",
  202: "Accepted",
  204: "No Content",
  400: "Bad Request",
  401: "Unauthorized",
  403: "Forbidden",
  404: "Not Found",
  405: "Method Not Allowed",
  500: "Internal Server Error"
}, _i = ({
  server: e,
  servers: t,
  url: n,
  method: a,
  headers: s = [],
  queryParams: i = [],
  pathParams: r = [],
  defaultBody: o = ""
}) => {
  var A, H;
  const { selectedServer: l, setSelectedServer: c } = xr(), [, u] = mr(), { register: f, control: d, handleSubmit: m, watch: h, setValue: v, ...g } = Ba({
    defaultValues: {
      body: o,
      queryParams: i.map(($) => ({
        name: $.name,
        value: $.defaultValue ?? "",
        active: $.defaultActive ?? !1
      })),
      pathParams: r.map(($) => ({
        name: $.name,
        value: $.defaultValue ?? ""
      })),
      headers: s.map(($) => ({
        name: $.name,
        value: $.defaultValue ?? ""
      })),
      identity: et
    }
  }), b = h(), y = ma(), x = dr(!1);
  pr(() => {
    var L;
    if (x.current) return;
    const $ = (L = y.data) == null ? void 0 : L.at(0);
    $ && (v("identity", $.id), x.current = !0);
  }, [v, y.data]);
  const k = Va({
    mutationFn: async ($) => {
      var B, D;
      const L = Ni(l ?? e, n, $), I = performance.now(), z = new Request(L, {
        method: a.toUpperCase(),
        headers: Object.fromEntries(
          $.headers.filter((_) => _.name).map((_) => [_.name, _.value])
        )
      });
      $.identity !== et && ((D = (B = y.data) == null ? void 0 : B.find((_) => _.id === $.identity)) == null || D.authorizeRequest(z));
      try {
        const _ = await fetch(z, {
          signal: AbortSignal.timeout(5e3)
        }), he = performance.now() - I, pe = await _.text();
        return {
          status: _.status,
          headers: _.headers,
          size: pe.length,
          body: pe,
          time: he
        };
      } catch (_) {
        throw _ instanceof TypeError ? new Error(
          "The request failed, possibly due to network issues or CORS policy."
        ) : _;
      }
    }
  }), S = n.split("/").map(($, L, I) => {
    var he;
    const z = $.startsWith("{") && $.endsWith("}") || $.startsWith(":"), B = $.replace(/[:{}]/g, ""), D = (he = b.pathParams.find((pe) => pe.name === B)) == null ? void 0 : he.value, _ = D ? /* @__PURE__ */ p.jsx(rn, { backgroundOpacity: "25%", name: $, slug: $, children: encodeURIComponent(D) }) : /* @__PURE__ */ p.jsx(
      "span",
      {
        className: "underline decoration-wavy decoration-red-500",
        title: `Missing value for path parameter \`${B}\``,
        children: $
      }
    );
    return (
      // eslint-disable-next-line react/no-array-index-key
      /* @__PURE__ */ p.jsxs(Ze, { children: [
        z ? _ : $,
        L < I.length - 1 && "/",
        /* @__PURE__ */ p.jsx("wbr", {})
      ] }, $ + L)
    );
  }), j = Array.from(((A = k.data) == null ? void 0 : A.headers.entries()) ?? []), R = b.queryParams.filter(($) => $.active).map(($, L, I) => /* @__PURE__ */ p.jsxs(Ze, { children: [
    $.name,
    "=",
    encodeURIComponent($.value).replaceAll("%20", "+"),
    L < I.length - 1 && "&",
    /* @__PURE__ */ p.jsx("wbr", {})
  ] }, $.name)), E = /* @__PURE__ */ p.jsx("div", { className: "inline-block opacity-50 hover:opacity-100 transition", children: t && t.length > 1 ? /* @__PURE__ */ p.jsxs(
    vn,
    {
      onValueChange: ($) => {
        u(() => {
          c($);
        });
      },
      value: l,
      children: [
        /* @__PURE__ */ p.jsx(gn, { className: "p-0 border-none flex-row-reverse bg-transparent text-xs gap-0.5 h-auto", children: /* @__PURE__ */ p.jsx(bn, {}) }),
        /* @__PURE__ */ p.jsx(xn, { children: t.map(($) => /* @__PURE__ */ p.jsx(gt, { value: $, children: $.replace(/^https?:\/\//, "") }, $)) })
      ]
    }
  ) : /* @__PURE__ */ p.jsx("span", { children: e.replace(/^https?:\/\//, "") }) });
  return /* @__PURE__ */ p.jsx(
    za,
    {
      register: f,
      control: d,
      handleSubmit: m,
      watch: h,
      setValue: v,
      ...g,
      children: /* @__PURE__ */ p.jsx("form", { onSubmit: m(($) => k.mutateAsync($)), children: /* @__PURE__ */ p.jsxs("div", { className: "grid grid-cols-[8fr_7fr] text-sm h-full", children: [
        /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-4 p-8 bg-muted/50 after:bg-muted-foreground/20 relative after:absolute after:w-px after:inset-0 after:left-auto", children: [
          /* @__PURE__ */ p.jsxs("div", { className: "flex gap-2 items-stretch", children: [
            /* @__PURE__ */ p.jsxs("div", { className: "flex flex-1 items-center w-full border rounded-md", children: [
              /* @__PURE__ */ p.jsx("div", { className: "border-r p-2 bg-muted rounded-l-md self-stretch font-semibold font-mono", children: a.toUpperCase() }),
              /* @__PURE__ */ p.jsxs("div", { className: "flex items-center flex-wrap p-2 font-mono text-xs", children: [
                E,
                S,
                R.length > 0 ? "?" : "",
                R
              ] })
            ] }),
            /* @__PURE__ */ p.jsx(je, { type: "submit", className: "h-auto flex gap-1", children: "Send" })
          ] }),
          /* @__PURE__ */ p.jsxs(
            wn,
            {
              defaultValue: i.length + r.length > 0 ? "parameters" : "headers",
              children: [
                /* @__PURE__ */ p.jsxs("div", { className: "flex flex-wrap gap-1 justify-between", children: [
                  /* @__PURE__ */ p.jsxs(Lt, { children: [
                    i.length + r.length > 0 && /* @__PURE__ */ p.jsx(Oe, { value: "parameters", children: "Parameters" }),
                    /* @__PURE__ */ p.jsxs(Oe, { value: "headers", children: [
                      "Headers",
                      " ",
                      b.headers.length > 0 && `(${b.headers.length})`
                    ] }),
                    /* @__PURE__ */ p.jsx(
                      Oe,
                      {
                        value: "body",
                        disabled: !["POST", "PUT", "PATCH", "DELETE"].includes(
                          a.toUpperCase()
                        ),
                        children: "Body"
                      }
                    )
                  ] }),
                  /* @__PURE__ */ p.jsxs("div", { className: "flex gap-2 items-center", children: [
                    "Auth:",
                    /* @__PURE__ */ p.jsxs(
                      vn,
                      {
                        onValueChange: ($) => v("identity", $),
                        value: b.identity,
                        defaultValue: b.identity,
                        children: [
                          /* @__PURE__ */ p.jsx(gn, { className: "w-[180px] flex", children: y.isPending ? /* @__PURE__ */ p.jsx(kn, {}) : /* @__PURE__ */ p.jsx(bn, {}) }),
                          /* @__PURE__ */ p.jsxs(xn, { align: "center", children: [
                            /* @__PURE__ */ p.jsx(gt, { value: et, children: "None" }),
                            (H = y.data) == null ? void 0 : H.map(($) => /* @__PURE__ */ p.jsx(gt, { value: $.id, children: $.label }, $.id))
                          ] })
                        ]
                      }
                    )
                  ] })
                ] }),
                /* @__PURE__ */ p.jsx(Ce, { value: "headers", children: /* @__PURE__ */ p.jsx(Ti, { control: d, register: f }) }),
                /* @__PURE__ */ p.jsxs(Ce, { value: "parameters", children: [
                  r.length > 0 && /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-4 my-4", children: [
                    /* @__PURE__ */ p.jsx("span", { className: "font-semibold", children: "Path Parameters" }),
                    /* @__PURE__ */ p.jsx(Oi, { control: d })
                  ] }),
                  i.length > 0 && /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-4 my-4", children: [
                    /* @__PURE__ */ p.jsx("span", { className: "font-semibold", children: "Query Parameters" }),
                    /* @__PURE__ */ p.jsx(Ei, { control: d, queryParams: i })
                  ] })
                ] }),
                /* @__PURE__ */ p.jsx(Ce, { value: "body", children: /* @__PURE__ */ p.jsx(
                  "textarea",
                  {
                    ...f("body"),
                    className: "border w-full rounded p-2 bg-muted h-40"
                  }
                ) })
              ]
            }
          )
        ] }),
        /* @__PURE__ */ p.jsx("div", { className: "min-w-0 p-8 bg-muted/70", children: k.error ? /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-2", children: [
          b.pathParams.some(($) => $.value === "") && /* @__PURE__ */ p.jsx(Ca, { type: "caution", children: "Some path parameters are missing values. Please fill them in to ensure the request is sent correctly." }),
          /* @__PURE__ */ p.jsxs(ot, { children: [
            /* @__PURE__ */ p.jsx(Nr, { children: /* @__PURE__ */ p.jsx(Tr, { children: "Request failed" }) }),
            /* @__PURE__ */ p.jsxs(Or, { children: [
              "Error:",
              " ",
              k.error.message || String(k.error) || "Unexpected error"
            ] })
          ] })
        ] }) : k.data ? /* @__PURE__ */ p.jsxs("div", { className: "flex flex-col gap-2", children: [
          /* @__PURE__ */ p.jsx("div", { className: "flex gap-2", children: /* @__PURE__ */ p.jsxs("div", { className: "flex text-xs gap-6", children: [
            /* @__PURE__ */ p.jsxs("div", { children: [
              "Status: ",
              k.data.status,
              " ",
              Ii[k.data.status] ?? ""
            ] }),
            /* @__PURE__ */ p.jsxs("div", { children: [
              "Time: ",
              k.data.time.toFixed(0),
              "ms"
            ] }),
            /* @__PURE__ */ p.jsxs("div", { children: [
              "Size: ",
              k.data.size,
              " B"
            ] })
          ] }) }),
          /* @__PURE__ */ p.jsxs(wn, { defaultValue: "response", children: [
            /* @__PURE__ */ p.jsxs(Lt, { children: [
              /* @__PURE__ */ p.jsx(Oe, { value: "response", children: "Response" }),
              /* @__PURE__ */ p.jsx(Oe, { value: "headers", children: j.length ? `Headers (${j.length})` : "No headers" })
            ] }),
            /* @__PURE__ */ p.jsx(Ce, { value: "response", children: /* @__PURE__ */ p.jsx(
              Fi,
              {
                headers: k.data.headers,
                body: k.data.body
              }
            ) }),
            /* @__PURE__ */ p.jsx(Ce, { value: "headers", children: /* @__PURE__ */ p.jsxs(
              ot,
              {
                className: "max-h-[calc(83.333vh-140px)] overflow-y-auto grid grid-cols-2 w-full gap-2.5 font-mono text-xs shadow-none p-4",
                children: [
                  /* @__PURE__ */ p.jsx("div", { className: "font-semibold", children: "Key" }),
                  /* @__PURE__ */ p.jsx("div", { className: "font-semibold", children: "Value" }),
                  j.map(([$, L]) => /* @__PURE__ */ p.jsxs(Ze, { children: [
                    /* @__PURE__ */ p.jsx("div", { children: $ }),
                    /* @__PURE__ */ p.jsx("div", { className: "break-words", children: L })
                  ] }, $))
                ]
              }
            ) })
          ] })
        ] }) : /* @__PURE__ */ p.jsx("div", { className: "grid place-items-center h-full", children: /* @__PURE__ */ p.jsx("span", { className: "text-[16px] font-semibold text-muted-foreground", children: k.isPending ? /* @__PURE__ */ p.jsx(kn, {}) : "Send a request first to see the response here" }) }) })
      ] }) })
    }
  );
}, Li = ({
  className: e,
  size: t = 16
}) => /* @__PURE__ */ p.jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    className: e,
    width: t,
    height: t,
    children: /* @__PURE__ */ p.jsx(
      "path",
      {
        fillRule: "evenodd",
        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm14.024-.983a1.125 1.125 0 0 1 0 1.966l-5.603 3.113A1.125 1.125 0 0 1 9 15.113V8.887c0-.857.921-1.4 1.671-.983l5.603 3.113Z",
        clipRule: "evenodd"
      }
    )
  }
), Hr = (e) => {
  const [t, n] = fr(!1);
  return /* @__PURE__ */ p.jsxs(yi, { onOpenChange: (a) => n(a), children: [
    /* @__PURE__ */ p.jsx(vi, { asChild: !0, children: e.children ?? /* @__PURE__ */ p.jsxs("button", { className: "flex gap-1 items-center px-2 py-1 rounded-md bg-primary/80 hover:bg-primary transition text-primary-foreground text-xs", children: [
      "Test",
      /* @__PURE__ */ p.jsx(Li, { className: "", size: 14 })
    ] }) }),
    /* @__PURE__ */ p.jsxs(
      wr,
      {
        className: "max-w-screen-xl w-full h-5/6 overflow-auto p-0",
        "aria-describedby": void 0,
        children: [
          /* @__PURE__ */ p.jsx(ja, { children: /* @__PURE__ */ p.jsx(jr, { children: "Playground" }) }),
          t && /* @__PURE__ */ p.jsx(_i, { ...e })
        ]
      }
    )
  ] });
};
var jn = (e, t) => {
  const n = e[t.name];
  return n === void 0 ? (e[t.name] = t.value, e) : Array.isArray(n) ? (n.push(t.value), e) : (e[t.name] = [n, t.value], e);
}, Nn = "", Tn = `
`, O = class {
  /**
   * Helper object to format and aggragate lines of code.
   * Lines are aggregated in a `code` array, and need to be joined to obtain a proper code snippet.
   */
  constructor({ indent: e, join: t } = {}) {
    this.postProcessors = [], this.code = [], this.indentationCharacter = Nn, this.lineJoin = Tn, this.indentLine = (n, a = 0) => `${this.indentationCharacter.repeat(a)}${n}`, this.unshift = (n, a) => {
      const s = this.indentLine(n, a);
      this.code.unshift(s);
    }, this.push = (n, a) => {
      const s = this.indentLine(n, a);
      this.code.push(s);
    }, this.blank = () => {
      this.code.push("");
    }, this.join = () => {
      const n = this.code.join(this.lineJoin);
      return this.postProcessors.reduce((s, i) => i(s), n);
    }, this.addPostProcessor = (n) => {
      this.postProcessors = [...this.postProcessors, n];
    }, this.indentationCharacter = e || Nn, this.lineJoin = t ?? Tn;
  }
}, Ui = function(e) {
  return Object.prototype.toString.call(e) === "[object RegExp]";
}, Mi = function(e) {
  var t = typeof e;
  return e !== null && (t === "object" || t === "function");
}, an = {};
Object.defineProperty(an, "__esModule", { value: !0 });
an.default = (e) => Object.getOwnPropertySymbols(e).filter((t) => Object.prototype.propertyIsEnumerable.call(e, t));
const Hi = Ui, Bi = Mi, Vi = an.default;
var zi = (e, t, n) => {
  const a = [];
  return function s(i, r, o) {
    r = r || {}, r.indent = r.indent || "	", o = o || "";
    let l;
    r.inlineCharacterLimit === void 0 ? l = {
      newLine: `
`,
      newLineOrSpace: `
`,
      pad: o,
      indent: o + r.indent
    } : l = {
      newLine: "@@__STRINGIFY_OBJECT_NEW_LINE__@@",
      newLineOrSpace: "@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@",
      pad: "@@__STRINGIFY_OBJECT_PAD__@@",
      indent: "@@__STRINGIFY_OBJECT_INDENT__@@"
    };
    const c = (u) => {
      if (r.inlineCharacterLimit === void 0)
        return u;
      const f = u.replace(new RegExp(l.newLine, "g"), "").replace(new RegExp(l.newLineOrSpace, "g"), " ").replace(new RegExp(l.pad + "|" + l.indent, "g"), "");
      return f.length <= r.inlineCharacterLimit ? f : u.replace(new RegExp(l.newLine + "|" + l.newLineOrSpace, "g"), `
`).replace(new RegExp(l.pad, "g"), o).replace(new RegExp(l.indent, "g"), o + r.indent);
    };
    if (a.indexOf(i) !== -1)
      return '"[Circular]"';
    if (i == null || typeof i == "number" || typeof i == "boolean" || typeof i == "function" || typeof i == "symbol" || Hi(i))
      return String(i);
    if (i instanceof Date)
      return `new Date('${i.toISOString()}')`;
    if (Array.isArray(i)) {
      if (i.length === 0)
        return "[]";
      a.push(i);
      const u = "[" + l.newLine + i.map((f, d) => {
        const m = i.length - 1 === d ? l.newLine : "," + l.newLineOrSpace;
        let h = s(f, r, o + r.indent);
        return r.transform && (h = r.transform(i, d, h)), l.indent + h + m;
      }).join("") + l.pad + "]";
      return a.pop(), c(u);
    }
    if (Bi(i)) {
      let u = Object.keys(i).concat(Vi(i));
      if (r.filter && (u = u.filter((d) => r.filter(i, d))), u.length === 0)
        return "{}";
      a.push(i);
      const f = "{" + l.newLine + u.map((d, m) => {
        const h = u.length - 1 === m ? l.newLine : "," + l.newLineOrSpace, v = typeof d == "symbol", g = !v && /^[a-z$_][a-z$_0-9]*$/i.test(d), b = v || g ? d : s(d, r);
        let y = s(i[d], r, o + r.indent);
        return r.transform && (y = r.transform(i, d, y)), l.indent + String(b) + ": " + y + h;
      }).join("") + l.pad + "}";
      return a.pop(), c(f);
    }
    return i = String(i).replace(/[\r\n]/g, (u) => u === `
` ? "\\n" : "\\r"), r.singleQuotes === !1 ? (i = i.replace(/"/g, '\\"'), `"${i}"`) : (i = i.replace(/\\?'/g, "\\'"), `'${i}'`);
  }(e, t, n);
};
const Y = /* @__PURE__ */ Da(zi);
function ze(e, t = {}) {
  const { delimiter: n = '"', escapeChar: a = "\\", escapeNewlines: s = !0 } = t;
  return [...e.toString()].map((r) => r === "\b" ? `${a}b` : r === "	" ? `${a}t` : r === `
` ? s ? `${a}n` : r : r === "\f" ? `${a}f` : r === "\r" ? s ? `${a}r` : r : r === a ? a + a : r === n ? a + n : r < " " || r > "~" ? JSON.stringify(r).slice(1, -1) : r).join("");
}
var De = (e) => ze(e, { delimiter: "'" }), G = (e) => ze(e, { delimiter: '"' }), Di = {
  info: {
    key: "libcurl",
    title: "Libcurl",
    link: "http://curl.haxx.se/libcurl",
    description: "Simple REST and HTTP API Client for C",
    extname: ".c"
  },
  convert: ({ method: e, fullUrl: t, headersObj: n, allHeaders: a, postData: s }) => {
    const { push: i, blank: r, join: o } = new O();
    i("CURL *hnd = curl_easy_init();"), r(), i(`curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "${e.toUpperCase()}");`), i("curl_easy_setopt(hnd, CURLOPT_WRITEDATA, stdout);"), i(`curl_easy_setopt(hnd, CURLOPT_URL, "${t}");`);
    const l = Object.keys(n);
    return l.length && (r(), i("struct curl_slist *headers = NULL;"), l.forEach((c) => {
      i(`headers = curl_slist_append(headers, "${c}: ${G(n[c])}");`);
    }), i("curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);")), a.cookie && (r(), i(`curl_easy_setopt(hnd, CURLOPT_COOKIE, "${a.cookie}");`)), s.text && (r(), i(`curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, ${JSON.stringify(s.text)});`)), r(), i("CURLcode ret = curl_easy_perform(hnd);"), o();
  }
}, Ji = {
  info: {
    key: "c",
    title: "C",
    default: "libcurl",
    cli: "c"
  },
  clientsById: {
    libcurl: Di
  }
}, Z = (e, t) => Object.keys(e).find((n) => n.toLowerCase() === t.toLowerCase()), de = (e, t) => {
  const n = Z(e, t);
  if (n)
    return e[n];
}, ht = (e, t) => !!Z(e, t), Wi = (e) => ["application/json", "application/x-json", "text/json", "text/x-json", "+json"].some(
  (t) => e.indexOf(t) > -1
), On = class {
  constructor(e) {
    this.name = "", this.toString = () => `:${this.name}`, this.name = e;
  }
}, Gi = class {
  constructor(e) {
    this.path = "", this.toString = () => `(clojure.java.io/file "${this.path}")`, this.path = e;
  }
}, Br = (e) => e === void 0 ? null : e === null ? "null" : e.constructor.name.toLowerCase(), Vr = (e) => e === void 0 ? !0 : Br(e) === "object" ? Object.keys(e).length === 0 : !1, Cn = (e) => (Object.keys(e).filter((t) => Vr(e[t])).forEach((t) => {
  delete e[t];
}), e), tt = (e, t) => {
  const n = " ".repeat(e);
  return t.replace(/\n/g, `
${n}`);
}, Ut = (e) => {
  switch (Br(e)) {
    case "string":
      return `"${e.replace(/"/g, '\\"')}"`;
    case "file":
      return e.toString();
    case "keyword":
      return e.toString();
    case "null":
      return "nil";
    case "regexp":
      return `#"${e.source}"`;
    case "object": {
      const t = Object.keys(e).reduce((n, a) => {
        const s = tt(a.length + 2, Ut(e[a]));
        return `${n}:${a} ${s}
 `;
      }, "").trim();
      return `{${tt(1, t)}}`;
    }
    case "array": {
      const t = e.reduce((n, a) => `${n} ${Ut(a)}`, "").trim();
      return `[${tt(1, t)}]`;
    }
    default:
      return e.toString();
  }
}, Qi = {
  info: {
    key: "clj_http",
    title: "clj-http",
    link: "https://github.com/dakrone/clj-http",
    description: "An idiomatic clojure http client wrapping the apache client.",
    extname: ".clj"
  },
  convert: ({ queryObj: e, method: t, postData: n, url: a, allHeaders: s }, i) => {
    const { push: r, join: o } = new O({ indent: i == null ? void 0 : i.indent }), l = ["get", "post", "put", "delete", "patch", "head", "options"];
    if (t = t.toLowerCase(), !l.includes(t))
      return r("Method not supported"), o();
    const c = {
      headers: s,
      "query-params": e
    };
    switch (n.mimeType) {
      case "application/json":
        {
          c["content-type"] = new On("json"), c["form-params"] = n.jsonObj;
          const u = Z(c.headers, "content-type");
          u && delete c.headers[u];
        }
        break;
      case "application/x-www-form-urlencoded":
        {
          c["form-params"] = n.paramsObj;
          const u = Z(c.headers, "content-type");
          u && delete c.headers[u];
        }
        break;
      case "text/plain":
        {
          c.body = n.text;
          const u = Z(c.headers, "content-type");
          u && delete c.headers[u];
        }
        break;
      case "multipart/form-data": {
        if (n.params) {
          c.multipart = n.params.map((f) => f.fileName && !f.value ? {
            name: f.name,
            content: new Gi(f.fileName)
          } : {
            name: f.name,
            content: f.value
          });
          const u = Z(c.headers, "content-type");
          u && delete c.headers[u];
        }
        break;
      }
    }
    switch (de(c.headers, "accept")) {
      case "application/json":
        {
          c.accept = new On("json");
          const u = Z(c.headers, "accept");
          u && delete c.headers[u];
        }
        break;
    }
    if (r(`(require '[clj-http.client :as client])
`), Vr(Cn(c)))
      r(`(client/${t} "${a}")`);
    else {
      const u = 11 + t.length + a.length, f = tt(u, Ut(Cn(c)));
      r(`(client/${t} "${a}" ${f})`);
    }
    return o();
  }
}, Ki = {
  info: {
    key: "clojure",
    title: "Clojure",
    default: "clj_http"
  },
  clientsById: {
    clj_http: Qi
  }
}, Yi = (e) => {
  let t = de(e, "accept-encoding");
  if (!t)
    return [];
  const n = {
    gzip: "DecompressionMethods.GZip",
    deflate: "DecompressionMethods.Deflate"
  }, a = [];
  return typeof t == "string" && (t = [t]), t.forEach((s) => {
    s.split(",").forEach((i) => {
      const r = /\s*([^;\s]+)/.exec(i);
      if (r) {
        const o = n[r[1]];
        o && a.push(o);
      }
    });
  }), a;
}, Xi = {
  info: {
    key: "httpclient",
    title: "HttpClient",
    link: "https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient",
    description: ".NET Standard HTTP Client",
    extname: ".cs"
  },
  convert: ({ allHeaders: e, postData: t, method: n, fullUrl: a }, s) => {
    var m, h;
    const i = {
      indent: "    ",
      ...s
    }, { push: r, join: o } = new O({ indent: i.indent });
    r("using System.Net.Http.Headers;");
    let l = "";
    const c = !!e.cookie, u = Yi(e);
    (c || u.length) && (l = "clientHandler", r("var clientHandler = new HttpClientHandler"), r("{"), c && r("UseCookies = false,", 1), u.length && r(`AutomaticDecompression = ${u.join(" | ")},`, 1), r("};")), r(`var client = new HttpClient(${l});`), r("var request = new HttpRequestMessage"), r("{");
    const f = ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS", "TRACE"];
    n = n.toUpperCase(), n && f.includes(n) ? n = `HttpMethod.${n[0]}${n.substring(1).toLowerCase()}` : n = `new HttpMethod("${n}")`, r(`Method = ${n},`, 1), r(`RequestUri = new Uri("${a}"),`, 1);
    const d = Object.keys(e).filter((v) => {
      switch (v.toLowerCase()) {
        case "content-type":
        case "content-length":
        case "accept-encoding":
          return !1;
        default:
          return !0;
      }
    });
    if (d.length && (r("Headers =", 1), r("{", 1), d.forEach((v) => {
      r(`{ "${v}", "${G(e[v])}" },`, 2);
    }), r("},", 1)), t.text) {
      const v = t.mimeType;
      switch (v) {
        case "application/x-www-form-urlencoded":
          r("Content = new FormUrlEncodedContent(new Dictionary<string, string>", 1), r("{", 1), (m = t.params) == null || m.forEach((g) => {
            r(`{ "${g.name}", "${g.value}" },`, 2);
          }), r("}),", 1);
          break;
        case "multipart/form-data":
          r("Content = new MultipartFormDataContent", 1), r("{", 1), (h = t.params) == null || h.forEach((g) => {
            r(`new StringContent(${JSON.stringify(g.value || "")})`, 2), r("{", 2), r("Headers =", 3), r("{", 3), g.contentType && r(`ContentType = new MediaTypeHeaderValue("${g.contentType}"),`, 4), r('ContentDisposition = new ContentDispositionHeaderValue("form-data")', 4), r("{", 4), r(`Name = "${g.name}",`, 5), g.fileName && r(`FileName = "${g.fileName}",`, 5), r("}", 4), r("}", 3), r("},", 2);
          }), r("},", 1);
          break;
        default:
          r(`Content = new StringContent(${JSON.stringify(t.text || "")})`, 1), r("{", 1), r("Headers =", 2), r("{", 2), r(`ContentType = new MediaTypeHeaderValue("${v}")`, 3), r("}", 2), r("}", 1);
          break;
      }
    }
    return r("};"), r("using (var response = await client.SendAsync(request))"), r("{"), r("response.EnsureSuccessStatusCode();", 1), r("var body = await response.Content.ReadAsStringAsync();", 1), r("Console.WriteLine(body);", 1), r("}"), o();
  }
};
function Zi(e) {
  return e[0].toUpperCase() + e.slice(1).toLowerCase();
}
var eo = {
  info: {
    key: "restsharp",
    title: "RestSharp",
    link: "http://restsharp.org/",
    description: "Simple REST and HTTP API Client for .NET",
    extname: ".cs",
    installation: "dotnet add package RestSharp"
  },
  convert: ({ method: e, fullUrl: t, headersObj: n, cookies: a, postData: s, uriObj: i }) => {
    const { push: r, join: o } = new O();
    if (!["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"].includes(
      e.toUpperCase()
    ))
      return "Method not supported";
    r(`using RestSharp;

`), r(`var options = new RestClientOptions("${t}");`), r("var client = new RestClient(options);"), r('var request = new RestRequest("");');
    const c = s.mimeType && s.mimeType === "multipart/form-data";
    switch (c && r("request.AlwaysMultipartFormData = true;"), Object.keys(n).forEach((u) => {
      if (s.mimeType && u.toLowerCase() === "content-type" && s.text) {
        c && s.boundary && r(`request.FormBoundary = "${s.boundary}";`);
        return;
      }
      r(`request.AddHeader("${u}", "${G(n[u])}");`);
    }), a.forEach(({ name: u, value: f }) => {
      r(`request.AddCookie("${u}", "${G(f)}", "${i.pathname}", "${i.host}");`);
    }), s.mimeType) {
      case "multipart/form-data":
        if (!s.params) break;
        s.params.forEach((u) => {
          u.fileName ? r(`request.AddFile("${u.name}", "${u.fileName}");`) : r(`request.AddParameter("${u.name}", "${u.value}");`);
        });
        break;
      case "application/x-www-form-urlencoded":
        if (!s.params) break;
        s.params.forEach((u) => {
          r(`request.AddParameter("${u.name}", "${u.value}");`);
        });
        break;
      case "application/json": {
        if (!s.text) break;
        const u = JSON.stringify(s.text);
        r(`request.AddJsonBody(${u}, false);`);
        break;
      }
      default:
        if (!s.text) break;
        r(`request.AddStringBody("${s.text}", "${s.mimeType}");`);
    }
    return r(`var response = await client.${Zi(e)}Async(request);
`), r(`Console.WriteLine("{0}", response.Content);
`), o();
  }
}, to = {
  info: {
    key: "csharp",
    title: "C#",
    default: "restsharp",
    cli: "dotnet"
  },
  clientsById: {
    httpclient: Xi,
    restsharp: eo
  }
}, no = {
  info: {
    key: "native",
    title: "NewRequest",
    link: "http://golang.org/pkg/net/http/#NewRequest",
    description: "Golang HTTP client request",
    extname: ".go"
  },
  convert: ({ postData: e, method: t, allHeaders: n, fullUrl: a }, s = {}) => {
    const { blank: i, push: r, join: o } = new O({ indent: "	" }), { showBoilerplate: l = !0, checkErrors: c = !1, printBody: u = !0, timeout: f = -1 } = s, d = c ? "err" : "_", m = l ? 1 : 0, h = () => {
      c && (r("if err != nil {", m), r("panic(err)", m + 1), r("}", m));
    };
    l && (r("package main"), i(), r("import ("), r('"fmt"', m), f > 0 && r('"time"', m), e.text && r('"strings"', m), r('"net/http"', m), u && r('"io"', m), r(")"), i(), r("func main() {"), i());
    const v = f > 0, g = v, b = g ? "client" : "http.DefaultClient";
    return g && (r("client := http.Client{", m), v && r(`Timeout: time.Duration(${f} * time.Second),`, m + 1), r("}", m), i()), r(`url := "${a}"`, m), i(), e.text ? (r(`payload := strings.NewReader(${JSON.stringify(e.text)})`, m), i(), r(`req, ${d} := http.NewRequest("${t}", url, payload)`, m), i()) : (r(`req, ${d} := http.NewRequest("${t}", url, nil)`, m), i()), h(), Object.keys(n).length && (Object.keys(n).forEach((y) => {
      r(`req.Header.Add("${y}", "${G(n[y])}")`, m);
    }), i()), r(`res, ${d} := ${b}.Do(req)`, m), h(), u && (i(), r("defer res.Body.Close()", m), r(`body, ${d} := io.ReadAll(res.Body)`, m), h()), i(), u && r("fmt.Println(string(body))", m), l && (i(), r("}")), o();
  }
}, ro = {
  info: {
    key: "go",
    title: "Go",
    default: "native",
    cli: "go"
  },
  clientsById: {
    native: no
  }
}, Pn = `\r
`, ao = {
  info: {
    key: "http1.1",
    title: "HTTP/1.1",
    link: "https://tools.ietf.org/html/rfc7230",
    description: "HTTP/1.1 request string in accordance with RFC 7230",
    extname: null
  },
  convert: ({ method: e, fullUrl: t, uriObj: n, httpVersion: a, allHeaders: s, postData: i }, r) => {
    const o = {
      absoluteURI: !1,
      autoContentLength: !0,
      autoHost: !0,
      ...r
    }, { blank: l, push: c, join: u } = new O({ indent: "", join: Pn }), f = o.absoluteURI ? t : n.path;
    c(`${e} ${f} ${a}`);
    const d = Object.keys(s);
    if (d.forEach((v) => {
      const g = v.toLowerCase().replace(/(^|-)(\w)/g, (b) => b.toUpperCase());
      c(`${g}: ${s[v]}`);
    }), o.autoHost && !d.includes("host") && c(`Host: ${n.host}`), o.autoContentLength && i.text && !d.includes("content-length")) {
      const g = new TextEncoder().encode(i.text).length.toString();
      c(`Content-Length: ${g}`);
    }
    l();
    const m = u(), h = i.text || "";
    return `${m}${Pn}${h}`;
  }
}, io = {
  info: {
    key: "http",
    title: "HTTP",
    default: "http1.1"
  },
  clientsById: {
    "http1.1": ao
  }
}, oo = {
  info: {
    key: "asynchttp",
    title: "AsyncHttp",
    link: "https://github.com/AsyncHttpClient/async-http-client",
    description: "Asynchronous Http and WebSocket Client library for Java",
    extname: ".java"
  },
  convert: ({ method: e, allHeaders: t, postData: n, fullUrl: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, { blank: r, push: o, join: l } = new O({ indent: i.indent });
    return o("AsyncHttpClient client = new DefaultAsyncHttpClient();"), o(`client.prepare("${e.toUpperCase()}", "${a}")`), Object.keys(t).forEach((c) => {
      o(`.setHeader("${c}", "${G(t[c])}")`, 1);
    }), n.text && o(`.setBody(${JSON.stringify(n.text)})`, 1), o(".execute()", 1), o(".toCompletableFuture()", 1), o(".thenAccept(System.out::println)", 1), o(".join();", 1), r(), o("client.close();"), l();
  }
}, so = {
  info: {
    key: "nethttp",
    title: "java.net.http",
    link: "https://openjdk.java.net/groups/net/httpclient/intro.html",
    description: "Java Standardized HTTP Client API",
    extname: ".java"
  },
  convert: ({ allHeaders: e, fullUrl: t, method: n, postData: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, { push: r, join: o } = new O({ indent: i.indent });
    return r("HttpRequest request = HttpRequest.newBuilder()"), r(`.uri(URI.create("${t}"))`, 2), Object.keys(e).forEach((l) => {
      r(`.header("${l}", "${G(e[l])}")`, 2);
    }), a.text ? r(
      `.method("${n.toUpperCase()}", HttpRequest.BodyPublishers.ofString(${JSON.stringify(a.text)}))`,
      2
    ) : r(`.method("${n.toUpperCase()}", HttpRequest.BodyPublishers.noBody())`, 2), r(".build();", 2), r(
      "HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());"
    ), r("System.out.println(response.body());"), o();
  }
}, lo = {
  info: {
    key: "okhttp",
    title: "OkHttp",
    link: "http://square.github.io/okhttp/",
    description: "An HTTP Request Client Library",
    extname: ".java"
  },
  convert: ({ postData: e, method: t, fullUrl: n, allHeaders: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, { push: r, blank: o, join: l } = new O({ indent: i.indent }), c = ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD"], u = ["POST", "PUT", "DELETE", "PATCH"];
    return r("OkHttpClient client = new OkHttpClient();"), o(), e.text && (e.boundary ? r(`MediaType mediaType = MediaType.parse("${e.mimeType}; boundary=${e.boundary}");`) : r(`MediaType mediaType = MediaType.parse("${e.mimeType}");`), r(`RequestBody body = RequestBody.create(mediaType, ${JSON.stringify(e.text)});`)), r("Request request = new Request.Builder()"), r(`.url("${n}")`, 1), c.includes(t.toUpperCase()) ? u.includes(t.toUpperCase()) ? e.text ? r(`.${t.toLowerCase()}(body)`, 1) : r(`.${t.toLowerCase()}(null)`, 1) : r(`.${t.toLowerCase()}()`, 1) : e.text ? r(`.method("${t.toUpperCase()}", body)`, 1) : r(`.method("${t.toUpperCase()}", null)`, 1), Object.keys(a).forEach((f) => {
      r(`.addHeader("${f}", "${G(a[f])}")`, 1);
    }), r(".build();", 1), o(), r("Response response = client.newCall(request).execute();"), l();
  }
}, co = {
  info: {
    key: "unirest",
    title: "Unirest",
    link: "http://unirest.io/java.html",
    description: "Lightweight HTTP Request Client Library",
    extname: ".java"
  },
  convert: ({ method: e, allHeaders: t, postData: n, fullUrl: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, { join: r, push: o } = new O({ indent: i.indent });
    return ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"].includes(e.toUpperCase()) ? o(`HttpResponse<String> response = Unirest.${e.toLowerCase()}("${a}")`) : o(`HttpResponse<String> response = Unirest.customMethod("${e.toUpperCase()}","${a}")`), Object.keys(t).forEach((c) => {
      o(`.header("${c}", "${G(t[c])}")`, 1);
    }), n.text && o(`.body(${JSON.stringify(n.text)})`, 1), o(".asString();", 1), r();
  }
}, uo = {
  info: {
    key: "java",
    title: "Java",
    default: "unirest"
  },
  clientsById: {
    asynchttp: oo,
    nethttp: so,
    okhttp: lo,
    unirest: co
  }
}, po = {
  info: {
    key: "axios",
    title: "Axios",
    link: "https://github.com/axios/axios",
    description: "Promise based HTTP client for the browser and node.js",
    extname: ".js",
    installation: "npm install axios --save"
  },
  convert: ({ allHeaders: e, method: t, url: n, queryObj: a, postData: s }, i) => {
    const r = {
      indent: "  ",
      ...i
    }, { blank: o, push: l, join: c, addPostProcessor: u } = new O({ indent: r.indent });
    l("import axios from 'axios';"), o();
    const f = {
      method: t,
      url: n
    };
    switch (Object.keys(a).length && (f.params = a), Object.keys(e).length && (f.headers = e), s.mimeType) {
      case "application/x-www-form-urlencoded":
        s.params && (l("const encodedParams = new URLSearchParams();"), s.params.forEach((m) => {
          l(`encodedParams.set('${m.name}', '${m.value}');`);
        }), o(), f.data = "encodedParams,", u((m) => m.replace(/'encodedParams,'/, "encodedParams,")));
        break;
      case "application/json":
        s.jsonObj && (f.data = s.jsonObj);
        break;
      case "multipart/form-data":
        if (!s.params)
          break;
        l("const form = new FormData();"), s.params.forEach((m) => {
          l(`form.append('${m.name}', '${m.value || m.fileName || ""}');`);
        }), o(), f.data = "[form]";
        break;
      default:
        s.text && (f.data = s.text);
    }
    const d = Y(f, {
      indent: "  ",
      inlineCharacterLimit: 80
    }).replace('"[form]"', "form");
    return l(`const options = ${d};`), o(), l("axios"), l(".request(options)", 1), l(".then(function (response) {", 1), l("console.log(response.data);", 2), l("})", 1), l(".catch(function (error) {", 1), l("console.error(error);", 2), l("});", 1), c();
  }
}, fo = {
  info: {
    key: "fetch",
    title: "fetch",
    link: "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    description: "Perform asynchronous HTTP requests with the Fetch API",
    extname: ".js"
  },
  convert: ({ method: e, allHeaders: t, postData: n, fullUrl: a }, s) => {
    const i = {
      indent: "  ",
      credentials: null,
      ...s
    }, { blank: r, join: o, push: l } = new O({ indent: i.indent }), c = {
      method: e
    };
    switch (Object.keys(t).length && (c.headers = t), i.credentials !== null && (c.credentials = i.credentials), n.mimeType) {
      case "application/x-www-form-urlencoded":
        c.body = n.paramsObj ? n.paramsObj : n.text;
        break;
      case "application/json":
        n.jsonObj && (c.body = n.jsonObj);
        break;
      case "multipart/form-data":
        if (!n.params)
          break;
        const u = Z(t, "content-type");
        u && delete t[u], l("const form = new FormData();"), n.params.forEach((f) => {
          l(`form.append('${f.name}', '${f.value || f.fileName || ""}');`);
        }), r();
        break;
      default:
        n.text && (c.body = n.text);
    }
    return c.headers && !Object.keys(c.headers).length && delete c.headers, l(
      `const options = ${Y(c, {
        indent: i.indent,
        inlineCharacterLimit: 80,
        // The Fetch API body only accepts string parameters, but stringified JSON can be difficult
        // to read, so we keep the object as a literal and use this transform function to wrap the
        // literal in a `JSON.stringify` call.
        transform: (u, f, d) => {
          if (f === "body") {
            if (n.mimeType === "application/x-www-form-urlencoded")
              return `new URLSearchParams(${d})`;
            if (n.mimeType === "application/json")
              return `JSON.stringify(${d})`;
          }
          return d;
        }
      })};`
    ), r(), n.params && n.mimeType === "multipart/form-data" && (l("options.body = form;"), r()), l(`fetch('${a}', options)`), l(".then(response => response.json())", 1), l(".then(response => console.log(response))", 1), l(".catch(err => console.error(err));", 1), o();
  }
}, mo = {
  info: {
    key: "jquery",
    title: "jQuery",
    link: "http://api.jquery.com/jquery.ajax/",
    description: "Perform an asynchronous HTTP (Ajax) requests with jQuery",
    extname: ".js"
  },
  convert: ({ fullUrl: e, method: t, allHeaders: n, postData: a }, s) => {
    var f;
    const i = {
      indent: "  ",
      ...s
    }, { blank: r, push: o, join: l } = new O({ indent: i.indent }), c = {
      async: !0,
      crossDomain: !0,
      url: e,
      method: t,
      headers: n
    };
    switch (a.mimeType) {
      case "application/x-www-form-urlencoded":
        c.data = a.paramsObj ? a.paramsObj : a.text;
        break;
      case "application/json":
        c.processData = !1, c.data = a.text;
        break;
      case "multipart/form-data":
        if (!a.params)
          break;
        if (o("const form = new FormData();"), a.params.forEach((d) => {
          o(`form.append('${d.name}', '${d.value || d.fileName || ""}');`);
        }), c.processData = !1, c.contentType = !1, c.mimeType = "multipart/form-data", c.data = "[form]", ht(n, "content-type") && (f = de(n, "content-type")) != null && f.includes("boundary")) {
          const d = Z(n, "content-type");
          d && delete c.headers[d];
        }
        r();
        break;
      default:
        a.text && (c.data = a.text);
    }
    const u = Y(c, { indent: i.indent }).replace("'[form]'", "form");
    return o(`const settings = ${u};`), r(), o("$.ajax(settings).done(function (response) {"), o("console.log(response);", 1), o("});"), l();
  }
}, ho = {
  info: {
    key: "xhr",
    title: "XMLHttpRequest",
    link: "https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",
    description: "W3C Standard API that provides scripted client functionality",
    extname: ".js"
  },
  convert: ({ postData: e, allHeaders: t, method: n, fullUrl: a }, s) => {
    var c;
    const i = {
      indent: "  ",
      cors: !0,
      ...s
    }, { blank: r, push: o, join: l } = new O({ indent: i.indent });
    switch (e.mimeType) {
      case "application/json":
        o(
          `const data = JSON.stringify(${Y(e.jsonObj, {
            indent: i.indent
          })});`
        ), r();
        break;
      case "multipart/form-data":
        if (!e.params)
          break;
        if (o("const data = new FormData();"), e.params.forEach((u) => {
          o(`data.append('${u.name}', '${u.value || u.fileName || ""}');`);
        }), ht(t, "content-type") && (c = de(t, "content-type")) != null && c.includes("boundary")) {
          const u = Z(t, "content-type");
          u && delete t[u];
        }
        r();
        break;
      default:
        o(`const data = ${e.text ? `'${e.text}'` : "null"};`), r();
    }
    return o("const xhr = new XMLHttpRequest();"), i.cors && o("xhr.withCredentials = true;"), r(), o("xhr.addEventListener('readystatechange', function () {"), o("if (this.readyState === this.DONE) {", 1), o("console.log(this.responseText);", 2), o("}", 1), o("});"), r(), o(`xhr.open('${n}', '${a}');`), Object.keys(t).forEach((u) => {
      o(`xhr.setRequestHeader('${u}', '${De(t[u])}');`);
    }), r(), o("xhr.send(data);"), l();
  }
}, yo = {
  info: {
    key: "javascript",
    title: "JavaScript",
    default: "xhr"
  },
  clientsById: {
    xhr: ho,
    axios: po,
    fetch: fo,
    jquery: mo
  }
}, vo = {
  info: {
    key: "native",
    title: "Native JSON",
    link: "https://www.json.org/json-en.html",
    description: "A JSON represetation of any HAR payload.",
    extname: ".json"
  },
  convert: ({ postData: e }, t) => {
    const n = {
      indent: "  ",
      ...t
    };
    let a = "";
    switch (e.mimeType) {
      case "application/x-www-form-urlencoded":
        a = e.paramsObj ? e.paramsObj : e.text;
        break;
      case "application/json":
        e.jsonObj && (a = e.jsonObj);
        break;
      case "multipart/form-data":
        if (!e.params)
          break;
        const s = {};
        e.params.forEach((i) => {
          s[i.name] = i.value;
        }), a = s;
        break;
      default:
        e.text && (a = e.text);
    }
    return typeof a > "u" || a === "" ? "No JSON body" : JSON.stringify(a, null, n.indent);
  }
}, go = {
  info: {
    key: "json",
    title: "JSON",
    default: "native"
  },
  clientsById: {
    native: vo
  }
}, bo = {
  info: {
    key: "okhttp",
    title: "OkHttp",
    link: "http://square.github.io/okhttp/",
    description: "An HTTP Request Client Library",
    extname: ".kt"
  },
  convert: ({ postData: e, fullUrl: t, method: n, allHeaders: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, { blank: r, join: o, push: l } = new O({ indent: i.indent }), c = ["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD"], u = ["POST", "PUT", "DELETE", "PATCH"];
    return l("val client = OkHttpClient()"), r(), e.text && (e.boundary ? l(`val mediaType = MediaType.parse("${e.mimeType}; boundary=${e.boundary}")`) : l(`val mediaType = MediaType.parse("${e.mimeType}")`), l(`val body = RequestBody.create(mediaType, ${JSON.stringify(e.text)})`)), l("val request = Request.Builder()"), l(`.url("${t}")`, 1), c.includes(n.toUpperCase()) ? u.includes(n.toUpperCase()) ? e.text ? l(`.${n.toLowerCase()}(body)`, 1) : l(`.${n.toLowerCase()}(null)`, 1) : l(`.${n.toLowerCase()}()`, 1) : e.text ? l(`.method("${n.toUpperCase()}", body)`, 1) : l(`.method("${n.toUpperCase()}", null)`, 1), Object.keys(a).forEach((f) => {
      l(`.addHeader("${f}", "${G(a[f])}")`, 1);
    }), l(".build()", 1), r(), l("val response = client.newCall(request).execute()"), o();
  }
}, xo = {
  info: {
    key: "kotlin",
    title: "Kotlin",
    default: "okhttp"
  },
  clientsById: {
    okhttp: bo
  }
}, ko = {
  info: {
    key: "axios",
    title: "Axios",
    link: "https://github.com/axios/axios",
    description: "Promise based HTTP client for the browser and node.js",
    extname: ".cjs",
    installation: "npm install axios --save"
  },
  convert: ({ method: e, fullUrl: t, allHeaders: n, postData: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, { blank: r, join: o, push: l, addPostProcessor: c } = new O({ indent: i.indent });
    l("const axios = require('axios');");
    const u = {
      method: e,
      url: t
    };
    switch (Object.keys(n).length && (u.headers = n), a.mimeType) {
      case "application/x-www-form-urlencoded":
        a.params && (l("const { URLSearchParams } = require('url');"), r(), l("const encodedParams = new URLSearchParams();"), a.params.forEach((d) => {
          l(`encodedParams.set('${d.name}', '${d.value}');`);
        }), r(), u.data = "encodedParams,", c((d) => d.replace(/'encodedParams,'/, "encodedParams,")));
        break;
      case "application/json":
        r(), a.jsonObj && (u.data = a.jsonObj);
        break;
      default:
        r(), a.text && (u.data = a.text);
    }
    const f = Y(u, { indent: "  ", inlineCharacterLimit: 80 });
    return l(`const options = ${f};`), r(), l("axios"), l(".request(options)", 1), l(".then(function (response) {", 1), l("console.log(response.data);", 2), l("})", 1), l(".catch(function (error) {", 1), l("console.error(error);", 2), l("});", 1), o();
  }
}, $o = {
  info: {
    key: "fetch",
    title: "Fetch",
    link: "https://github.com/bitinn/node-fetch",
    description: "Simplified HTTP node-fetch client",
    extname: ".cjs",
    installation: "npm install node-fetch@2 --save"
  },
  convert: ({ method: e, fullUrl: t, postData: n, headersObj: a, cookies: s }, i) => {
    var v;
    const r = {
      indent: "  ",
      ...i
    };
    let o = !1;
    const { blank: l, push: c, join: u, unshift: f } = new O({ indent: r.indent });
    c("const fetch = require('node-fetch');");
    const d = t, m = {
      method: e
    };
    switch (Object.keys(a).length && (m.headers = a), n.mimeType) {
      case "application/x-www-form-urlencoded":
        f("const { URLSearchParams } = require('url');"), c("const encodedParams = new URLSearchParams();"), l(), (v = n.params) == null || v.forEach((b) => {
          c(`encodedParams.set('${b.name}', '${b.value}');`);
        }), m.body = "encodedParams";
        break;
      case "application/json":
        n.jsonObj && (m.body = n.jsonObj);
        break;
      case "multipart/form-data":
        if (!n.params)
          break;
        const g = Z(a, "content-type");
        g && delete a[g], f("const FormData = require('form-data');"), c("const formData = new FormData();"), l(), n.params.forEach((b) => {
          if (!b.fileName && !b.fileName && !b.contentType) {
            c(`formData.append('${b.name}', '${b.value}');`);
            return;
          }
          b.fileName && (o = !0, c(`formData.append('${b.name}', fs.createReadStream('${b.fileName}'));`));
        });
        break;
      default:
        n.text && (m.body = n.text);
    }
    if (s.length) {
      const g = s.map(({ name: b, value: y }) => `${encodeURIComponent(b)}=${encodeURIComponent(y)}`).join("; ");
      m.headers || (m.headers = {}), m.headers.cookie = g;
    }
    l(), c(`const url = '${d}';`), m.headers && !Object.keys(m.headers).length && delete m.headers;
    const h = Y(m, {
      indent: "  ",
      inlineCharacterLimit: 80,
      // The Fetch API body only accepts string parameters, but stringified JSON can be difficult to
      // read, so we keep the object as a literal and use this transform function to wrap the literal
      // in a `JSON.stringify` call.
      transform: (g, b, y) => b === "body" && n.mimeType === "application/json" ? `JSON.stringify(${y})` : y
    });
    return c(`const options = ${h};`), l(), o && f("const fs = require('fs');"), n.params && n.mimeType === "multipart/form-data" && (c("options.body = formData;"), l()), c("fetch(url, options)"), c(".then(res => res.json())", 1), c(".then(json => console.log(json))", 1), c(".catch(err => console.error('error:' + err));", 1), u().replace(/'encodedParams'/, "encodedParams").replace(/"fs\.createReadStream\(\\"(.+)\\"\)"/, 'fs.createReadStream("$1")');
  }
}, So = {
  info: {
    key: "native",
    title: "HTTP",
    link: "http://nodejs.org/api/http.html#http_http_request_options_callback",
    description: "Node.js native HTTP interface",
    extname: ".cjs"
  },
  convert: ({ uriObj: e, method: t, allHeaders: n, postData: a }, s = {}) => {
    var f;
    const { indent: i = "  " } = s, { blank: r, join: o, push: l, unshift: c } = new O({ indent: i }), u = {
      method: t,
      hostname: e.hostname,
      port: e.port,
      path: e.path,
      headers: n
    };
    switch (l(`const http = require('${(f = e.protocol) == null ? void 0 : f.replace(":", "")}');`), r(), l(`const options = ${Y(u, { indent: i })};`), r(), l("const req = http.request(options, function (res) {"), l("const chunks = [];", 1), r(), l("res.on('data', function (chunk) {", 1), l("chunks.push(chunk);", 2), l("});", 1), r(), l("res.on('end', function () {", 1), l("const body = Buffer.concat(chunks);", 2), l("console.log(body.toString());", 2), l("});", 1), l("});"), r(), a.mimeType) {
      case "application/x-www-form-urlencoded":
        a.paramsObj && (c("const qs = require('querystring');"), l(
          `req.write(qs.stringify(${Y(a.paramsObj, {
            indent: "  ",
            inlineCharacterLimit: 80
          })}));`
        ));
        break;
      case "application/json":
        a.jsonObj && l(
          `req.write(JSON.stringify(${Y(a.jsonObj, {
            indent: "  ",
            inlineCharacterLimit: 80
          })}));`
        );
        break;
      default:
        a.text && l(`req.write(${Y(a.text, { indent: i })});`);
    }
    return l("req.end();"), o();
  }
}, wo = {
  info: {
    key: "request",
    title: "Request",
    link: "https://github.com/request/request",
    description: "Simplified HTTP request client",
    extname: ".cjs",
    installation: "npm install request --save"
  },
  convert: ({ method: e, url: t, fullUrl: n, postData: a, headersObj: s, cookies: i }, r) => {
    const o = {
      indent: "  ",
      ...r
    };
    let l = !1;
    const { push: c, blank: u, join: f, unshift: d, addPostProcessor: m } = new O({ indent: o.indent });
    c("const request = require('request');"), u();
    const h = {
      method: e,
      url: n
    };
    switch (Object.keys(s).length && (h.headers = s), a.mimeType) {
      case "application/x-www-form-urlencoded":
        h.form = a.paramsObj;
        break;
      case "application/json":
        a.jsonObj && (h.body = a.jsonObj, h.json = !0);
        break;
      case "multipart/form-data":
        if (!a.params)
          break;
        h.formData = {}, a.params.forEach((v) => {
          if (!v.fileName && !v.fileName && !v.contentType) {
            h.formData[v.name] = v.value;
            return;
          }
          let g = {};
          v.fileName ? (l = !0, g = {
            value: `fs.createReadStream(${v.fileName})`,
            options: {
              filename: v.fileName,
              contentType: v.contentType ? v.contentType : null
            }
          }) : v.value && (g.value = v.value), h.formData[v.name] = g;
        }), m((v) => v.replace(/'fs\.createReadStream\((.*)\)'/, "fs.createReadStream('$1')"));
        break;
      default:
        a.text && (h.body = a.text);
    }
    return i.length && (h.jar = "JAR", c("const jar = request.jar();"), i.forEach(({ name: v, value: g }) => {
      c(`jar.setCookie(request.cookie('${encodeURIComponent(v)}=${encodeURIComponent(g)}'), '${t}');`);
    }), u(), m((v) => v.replace(/'JAR'/, "jar"))), l && d("const fs = require('fs');"), c(`const options = ${Y(h, { indent: "  ", inlineCharacterLimit: 80 })};`), u(), c("request(options, function (error, response, body) {"), c("if (error) throw new Error(error);", 1), u(), c("console.log(body);", 1), c("});"), f();
  }
}, jo = {
  info: {
    key: "unirest",
    title: "Unirest",
    link: "http://unirest.io/nodejs.html",
    description: "Lightweight HTTP Request Client Library",
    extname: ".cjs"
  },
  convert: ({ method: e, url: t, cookies: n, queryObj: a, postData: s, headersObj: i }, r) => {
    const o = {
      indent: "  ",
      ...r
    };
    let l = !1;
    const { addPostProcessor: c, blank: u, join: f, push: d, unshift: m } = new O({
      indent: o.indent
    });
    switch (d("const unirest = require('unirest');"), u(), d(`const req = unirest('${e}', '${t}');`), u(), n.length && (d("const CookieJar = unirest.jar();"), n.forEach((h) => {
      d(`CookieJar.add('${encodeURIComponent(h.name)}=${encodeURIComponent(h.value)}', '${t}');`);
    }), d("req.jar(CookieJar);"), u()), Object.keys(a).length && (d(`req.query(${Y(a, { indent: o.indent })});`), u()), Object.keys(i).length && (d(`req.headers(${Y(i, { indent: o.indent })});`), u()), s.mimeType) {
      case "application/x-www-form-urlencoded":
        s.paramsObj && (d(`req.form(${Y(s.paramsObj, { indent: o.indent })});`), u());
        break;
      case "application/json":
        s.jsonObj && (d("req.type('json');"), d(`req.send(${Y(s.jsonObj, { indent: o.indent })});`), u());
        break;
      case "multipart/form-data": {
        if (!s.params)
          break;
        const h = [];
        s.params.forEach((v) => {
          const g = {};
          v.fileName && !v.value ? (l = !0, g.body = `fs.createReadStream('${v.fileName}')`, c((b) => b.replace(/'fs\.createReadStream\(\\'(.+)\\'\)'/, "fs.createReadStream('$1')"))) : v.value && (g.body = v.value), g.body && (v.contentType && (g["content-type"] = v.contentType), h.push(g));
        }), d(`req.multipart(${Y(h, { indent: o.indent })});`), u();
        break;
      }
      default:
        s.text && (d(`req.send(${Y(s.text, { indent: o.indent })});`), u());
    }
    return l && m("const fs = require('fs');"), d("req.end(function (res) {"), d("if (res.error) throw new Error(res.error);", 1), u(), d("console.log(res.body);", 1), d("});"), f();
  }
}, No = {
  info: {
    key: "node",
    title: "Node.js",
    default: "native",
    cli: "node %s"
  },
  clientsById: {
    native: So,
    request: wo,
    unirest: jo,
    axios: ko,
    fetch: $o
  }
}, wt = (e, t, n, a) => {
  const s = `${e} *${t} = `, i = Mt(n, a ? s.length : void 0);
  return `${s}${i};`;
}, Mt = (e, t) => {
  const n = t === void 0 ? ", " : `,
   ${" ".repeat(t)}`;
  switch (Object.prototype.toString.call(e)) {
    case "[object Number]":
      return `@${e}`;
    case "[object Array]":
      return `@[ ${e.map((s) => Mt(s)).join(n)} ]`;
    case "[object Object]": {
      const a = [];
      return Object.keys(e).forEach((s) => {
        a.push(`@"${s}": ${Mt(e[s])}`);
      }), `@{ ${a.join(n)} }`;
    }
    case "[object Boolean]":
      return e ? "@YES" : "@NO";
    default:
      return e == null ? "" : `@"${e.toString().replace(/"/g, '\\"')}"`;
  }
}, To = {
  info: {
    key: "nsurlsession",
    title: "NSURLSession",
    link: "https://developer.apple.com/library/mac/documentation/Foundation/Reference/NSURLSession_class/index.html",
    description: "Foundation's NSURLSession request",
    extname: ".m"
  },
  convert: ({ allHeaders: e, postData: t, method: n, fullUrl: a }, s) => {
    var u;
    const i = {
      indent: "    ",
      pretty: !0,
      timeout: 10,
      ...s
    }, { push: r, join: o, blank: l } = new O({ indent: i.indent }), c = {
      hasHeaders: !1,
      hasBody: !1
    };
    if (r("#import <Foundation/Foundation.h>"), Object.keys(e).length && (c.hasHeaders = !0, l(), r(wt("NSDictionary", "headers", e, i.pretty))), t.text || t.jsonObj || t.params)
      switch (c.hasBody = !0, t.mimeType) {
        case "application/x-www-form-urlencoded":
          if ((u = t.params) != null && u.length) {
            l();
            const [f, ...d] = t.params;
            r(
              `NSMutableData *postData = [[NSMutableData alloc] initWithData:[@"${f.name}=${f.value}" dataUsingEncoding:NSUTF8StringEncoding]];`
            ), d.forEach(({ name: m, value: h }) => {
              r(`[postData appendData:[@"&${m}=${h}" dataUsingEncoding:NSUTF8StringEncoding]];`);
            });
          } else
            c.hasBody = !1;
          break;
        case "application/json":
          t.jsonObj && (r(wt("NSDictionary", "parameters", t.jsonObj, i.pretty)), l(), r("NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];"));
          break;
        case "multipart/form-data":
          r(wt("NSArray", "parameters", t.params || [], i.pretty)), r(`NSString *boundary = @"${t.boundary}";`), l(), r("NSError *error;"), r("NSMutableString *body = [NSMutableString string];"), r("for (NSDictionary *param in parameters) {"), r('[body appendFormat:@"--%@\\r\\n", boundary];', 1), r('if (param[@"fileName"]) {', 1), r(
            '[body appendFormat:@"Content-Disposition:form-data; name=\\"%@\\"; filename=\\"%@\\"\\r\\n", param[@"name"], param[@"fileName"]];',
            2
          ), r('[body appendFormat:@"Content-Type: %@\\r\\n\\r\\n", param[@"contentType"]];', 2), r(
            '[body appendFormat:@"%@", [NSString stringWithContentsOfFile:param[@"fileName"] encoding:NSUTF8StringEncoding error:&error]];',
            2
          ), r("if (error) {", 2), r('NSLog(@"%@", error);', 3), r("}", 2), r("} else {", 1), r('[body appendFormat:@"Content-Disposition:form-data; name=\\"%@\\"\\r\\n\\r\\n", param[@"name"]];', 2), r('[body appendFormat:@"%@", param[@"value"]];', 2), r("}", 1), r("}"), r('[body appendFormat:@"\\r\\n--%@--\\r\\n", boundary];'), r("NSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];");
          break;
        default:
          l(), r(
            `NSData *postData = [[NSData alloc] initWithData:[@"${t.text}" dataUsingEncoding:NSUTF8StringEncoding]];`
          );
      }
    return l(), r(`NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"${a}"]`), r("                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy"), r(`                                                   timeoutInterval:${i.timeout.toFixed(1)}];`), r(`[request setHTTPMethod:@"${n}"];`), c.hasHeaders && r("[request setAllHTTPHeaderFields:headers];"), c.hasBody && r("[request setHTTPBody:postData];"), l(), r("NSURLSession *session = [NSURLSession sharedSession];"), r("NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request"), r(
      "                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {"
    ), r("                                            if (error) {", 1), r('                                            NSLog(@"%@", error);', 2), r("                                            } else {", 1), r(
      "                                            NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;",
      2
    ), r('                                            NSLog(@"%@", httpResponse);', 2), r("                                            }", 1), r("                                            }];"), r("[dataTask resume];"), o();
  }
}, Oo = {
  info: {
    key: "objc",
    title: "Objective-C",
    default: "nsurlsession"
  },
  clientsById: {
    nsurlsession: To
  }
}, Co = {
  info: {
    key: "cohttp",
    title: "CoHTTP",
    link: "https://github.com/mirage/ocaml-cohttp",
    description: "Cohttp is a very lightweight HTTP server using Lwt or Async for OCaml",
    extname: ".ml",
    installation: "opam install cohttp-lwt-unix cohttp-async"
  },
  convert: ({ fullUrl: e, allHeaders: t, postData: n, method: a }, s) => {
    const i = {
      indent: "  ",
      ...s
    }, r = ["get", "post", "head", "delete", "patch", "put", "options"], { push: o, blank: l, join: c } = new O({ indent: i.indent });
    o("open Cohttp_lwt_unix"), o("open Cohttp"), o("open Lwt"), l(), o(`let uri = Uri.of_string "${e}" in`);
    const u = Object.keys(t);
    u.length === 1 ? o(
      `let headers = Header.add (Header.init ()) "${u[0]}" "${G(
        t[u[0]]
      )}" in`
    ) : u.length > 1 && (o("let headers = Header.add_list (Header.init ()) ["), u.forEach((h) => {
      o(`("${h}", "${G(t[h])}");`, 1);
    }), o("] in")), n.text && o(`let body = Cohttp_lwt_body.of_string ${JSON.stringify(n.text)} in`), l();
    const f = u.length ? "~headers " : "", d = n.text ? "~body " : "", m = r.includes(a.toLowerCase()) ? `\`${a.toUpperCase()}` : `(Code.method_of_string "${a}")`;
    return o(`Client.call ${f}${d}${m} uri`), o(">>= fun (res, body_stream) ->"), o("(* Do stuff with the result *)", 1), c();
  }
}, Po = {
  info: {
    key: "ocaml",
    title: "OCaml",
    default: "cohttp"
  },
  clientsById: {
    cohttp: Co
  }
}, q = (e, t, n) => {
  switch (n = n || "", t = t || "", Object.prototype.toString.call(e)) {
    case "[object Boolean]":
      return e;
    case "[object Null]":
      return "null";
    case "[object Undefined]":
      return "null";
    case "[object String]":
      return `'${ze(e, { delimiter: "'", escapeNewlines: !1 })}'`;
    case "[object Number]":
      return e.toString();
    case "[object Array]": {
      const a = e.map((s) => q(s, `${t}${t}`, t)).join(`,
${t}`);
      return `[
${t}${a}
${n}]`;
    }
    case "[object Object]": {
      const a = [];
      for (const s in e)
        Object.prototype.hasOwnProperty.call(e, s) && a.push(`${q(s, t)} => ${q(e[s], `${t}${t}`, t)}`);
      return `[
${t}${a.join(`,
${t}`)}
${n}]`;
    }
    default:
      return "null";
  }
}, En = [
  "ACL",
  "BASELINE_CONTROL",
  "CHECKIN",
  "CHECKOUT",
  "CONNECT",
  "COPY",
  "DELETE",
  "GET",
  "HEAD",
  "LABEL",
  "LOCK",
  "MERGE",
  "MKACTIVITY",
  "MKCOL",
  "MKWORKSPACE",
  "MOVE",
  "OPTIONS",
  "POST",
  "PROPFIND",
  "PROPPATCH",
  "PUT",
  "REPORT",
  "TRACE",
  "UNCHECKOUT",
  "UNLOCK",
  "UPDATE",
  "VERSION_CONTROL"
], Eo = {
  info: {
    key: "curl",
    title: "cURL",
    link: "http://php.net/manual/en/book.curl.php",
    description: "PHP with ext-curl",
    extname: ".php"
  },
  convert: ({ uriObj: e, postData: t, fullUrl: n, method: a, httpVersion: s, cookies: i, headersObj: r }, o = {}) => {
    const {
      closingTag: l = !1,
      indent: c = "  ",
      maxRedirects: u = 10,
      namedErrors: f = !1,
      noTags: d = !1,
      shortTags: m = !1,
      timeout: h = 30
    } = o, { push: v, blank: g, join: b } = new O({ indent: c });
    d || (v(m ? "<?" : "<?php"), g()), v("$curl = curl_init();"), g();
    const y = [
      {
        escape: !0,
        name: "CURLOPT_PORT",
        value: e.port
      },
      {
        escape: !0,
        name: "CURLOPT_URL",
        value: n
      },
      {
        escape: !1,
        name: "CURLOPT_RETURNTRANSFER",
        value: "true"
      },
      {
        escape: !0,
        name: "CURLOPT_ENCODING",
        value: ""
      },
      {
        escape: !1,
        name: "CURLOPT_MAXREDIRS",
        value: u
      },
      {
        escape: !1,
        name: "CURLOPT_TIMEOUT",
        value: h
      },
      {
        escape: !1,
        name: "CURLOPT_HTTP_VERSION",
        value: s === "HTTP/1.0" ? "CURL_HTTP_VERSION_1_0" : "CURL_HTTP_VERSION_1_1"
      },
      {
        escape: !0,
        name: "CURLOPT_CUSTOMREQUEST",
        value: a
      },
      {
        escape: !t.jsonObj,
        name: "CURLOPT_POSTFIELDS",
        value: t ? t.jsonObj ? `json_encode(${q(t.jsonObj, c.repeat(2), c)})` : t.text : void 0
      }
    ];
    v("curl_setopt_array($curl, [");
    const x = new O({ indent: c, join: `
${c}` });
    y.forEach(({ value: j, name: R, escape: E }) => {
      j != null && x.push(`${R} => ${E ? JSON.stringify(j) : j},`);
    });
    const k = i.map((j) => `${encodeURIComponent(j.name)}=${encodeURIComponent(j.value)}`);
    k.length && x.push(`CURLOPT_COOKIE => "${k.join("; ")}",`);
    const S = Object.keys(r).sort().map((j) => `"${j}: ${G(r[j])}"`);
    return S.length && (x.push("CURLOPT_HTTPHEADER => ["), x.push(S.join(`,
${c}${c}`), 1), x.push("],")), v(x.join(), 1), v("]);"), g(), v("$response = curl_exec($curl);"), v("$err = curl_error($curl);"), g(), v("curl_close($curl);"), g(), v("if ($err) {"), v(f ? 'echo array_flip(get_defined_constants(true)["curl"])[$err];' : 'echo "cURL Error #:" . $err;', 1), v("} else {"), v("echo $response;", 1), v("}"), !d && l && (g(), v("?>")), b();
  }
}, Ro = {
  info: {
    key: "guzzle",
    title: "Guzzle",
    link: "http://docs.guzzlephp.org/en/stable/",
    description: "PHP with Guzzle",
    extname: ".php",
    installation: "composer require guzzlehttp/guzzle"
  },
  convert: ({ postData: e, fullUrl: t, method: n, cookies: a, headersObj: s }, i) => {
    var v;
    const r = {
      closingTag: !1,
      indent: "  ",
      noTags: !1,
      shortTags: !1,
      ...i
    }, { push: o, blank: l, join: c } = new O({ indent: r.indent }), { code: u, push: f, join: d } = new O({ indent: r.indent });
    switch (r.noTags || o(r.shortTags ? "<?" : "<?php"), o("require_once('vendor/autoload.php');"), l(), e.mimeType) {
      case "application/x-www-form-urlencoded":
        f(`'form_params' => ${q(e.paramsObj, r.indent + r.indent, r.indent)},`, 1);
        break;
      case "multipart/form-data": {
        const g = [];
        if (e.params && e.params.forEach((b) => {
          if (b.fileName) {
            const y = {
              name: b.name,
              filename: b.fileName,
              contents: b.value
            };
            b.contentType && (y.headers = { "Content-Type": b.contentType }), g.push(y);
          } else b.value && g.push({
            name: b.name,
            contents: b.value
          });
        }), g.length && (f(`'multipart' => ${q(g, r.indent + r.indent, r.indent)}`, 1), ht(s, "content-type") && (v = de(s, "content-type")) != null && v.indexOf("boundary"))) {
          const b = Z(s, "content-type");
          b && delete s[b];
        }
        break;
      }
      default:
        e.text && f(`'body' => ${q(e.text)},`, 1);
    }
    const m = Object.keys(s).sort().map(function(g) {
      return `${r.indent}${r.indent}'${g}' => '${De(s[g])}',`;
    }), h = a.map((g) => `${encodeURIComponent(g.name)}=${encodeURIComponent(g.value)}`).join("; ");
    return h.length && m.push(`${r.indent}${r.indent}'cookie' => '${De(h)}',`), m.length && (f("'headers' => [", 1), f(m.join(`
`)), f("],", 1)), o("$client = new \\GuzzleHttp\\Client();"), l(), u.length ? (o(`$response = $client->request('${n}', '${t}', [`), o(d()), o("]);")) : o(`$response = $client->request('${n}', '${t}');`), l(), o("echo $response->getBody();"), !r.noTags && r.closingTag && (l(), o("?>")), c();
  }
}, Ao = {
  info: {
    key: "http1",
    title: "HTTP v1",
    link: "http://php.net/manual/en/book.http.php",
    description: "PHP with pecl/http v1",
    extname: ".php"
  },
  convert: ({ method: e, url: t, postData: n, queryObj: a, headersObj: s, cookiesObj: i }, r = {}) => {
    const { closingTag: o = !1, indent: l = "  ", noTags: c = !1, shortTags: u = !1 } = r, { push: f, blank: d, join: m } = new O({ indent: l });
    switch (c || (f(u ? "<?" : "<?php"), d()), En.includes(e.toUpperCase()) || f(`HttpRequest::methodRegister('${e}');`), f("$request = new HttpRequest();"), f(`$request->setUrl(${q(t)});`), En.includes(e.toUpperCase()) ? f(`$request->setMethod(HTTP_METH_${e.toUpperCase()});`) : f(`$request->setMethod(HttpRequest::HTTP_METH_${e.toUpperCase()});`), d(), Object.keys(a).length && (f(`$request->setQueryData(${q(a, l)});`), d()), Object.keys(s).length && (f(`$request->setHeaders(${q(s, l)});`), d()), Object.keys(i).length && (f(`$request->setCookies(${q(i, l)});`), d()), n.mimeType) {
      case "application/x-www-form-urlencoded":
        f(`$request->setContentType(${q(n.mimeType)});`), f(`$request->setPostFields(${q(n.paramsObj, l)});`), d();
        break;
      case "application/json":
        f(`$request->setContentType(${q(n.mimeType)});`), f(`$request->setBody(json_encode(${q(n.jsonObj, l)}));`), d();
        break;
      default:
        n.text && (f(`$request->setBody(${q(n.text)});`), d());
    }
    return f("try {"), f("$response = $request->send();", 1), d(), f("echo $response->getBody();", 1), f("} catch (HttpException $ex) {"), f("echo $ex;", 1), f("}"), !c && o && (d(), f("?>")), m();
  }
}, qo = {
  info: {
    key: "http2",
    title: "HTTP v2",
    link: "http://devel-m6w6.rhcloud.com/mdref/http",
    description: "PHP with pecl/http v2",
    extname: ".php"
  },
  convert: ({ postData: e, headersObj: t, method: n, queryObj: a, cookiesObj: s, url: i }, r = {}) => {
    var v;
    const { closingTag: o = !1, indent: l = "  ", noTags: c = !1, shortTags: u = !1 } = r, { push: f, blank: d, join: m } = new O({ indent: l });
    let h = !1;
    switch (c || (f(u ? "<?" : "<?php"), d()), f("$client = new http\\Client;"), f("$request = new http\\Client\\Request;"), d(), e.mimeType) {
      case "application/x-www-form-urlencoded":
        f("$body = new http\\Message\\Body;"), f(`$body->append(new http\\QueryString(${q(e.paramsObj, l)}));`), d(), h = !0;
        break;
      case "multipart/form-data": {
        if (!e.params)
          break;
        const g = [], b = {};
        e.params.forEach(({ name: k, fileName: S, value: j, contentType: R }) => {
          if (S) {
            g.push({
              name: k,
              type: R,
              file: S,
              data: j
            });
            return;
          }
          j && (b[k] = j);
        });
        const y = Object.keys(b).length ? q(b, l) : "null", x = g.length ? q(g, l) : "null";
        if (f("$body = new http\\Message\\Body;"), f(`$body->addForm(${y}, ${x});`), ht(t, "content-type") && (v = de(t, "content-type")) != null && v.indexOf("boundary")) {
          const k = Z(t, "content-type");
          k && delete t[k];
        }
        d(), h = !0;
        break;
      }
      case "application/json":
        f("$body = new http\\Message\\Body;"), f(`$body->append(json_encode(${q(e.jsonObj, l)}));`), h = !0;
        break;
      default:
        e.text && (f("$body = new http\\Message\\Body;"), f(`$body->append(${q(e.text)});`), d(), h = !0);
    }
    return f(`$request->setRequestUrl(${q(i)});`), f(`$request->setRequestMethod(${q(n)});`), h && (f("$request->setBody($body);"), d()), Object.keys(a).length && (f(`$request->setQuery(new http\\QueryString(${q(a, l)}));`), d()), Object.keys(t).length && (f(`$request->setHeaders(${q(t, l)});`), d()), Object.keys(s).length && (d(), f(`$client->setCookies(${q(s, l)});`), d()), f("$client->enqueue($request)->send();"), f("$response = $client->getResponse();"), d(), f("echo $response->getBody();"), !c && o && (d(), f("?>")), m();
  }
}, Fo = {
  info: {
    key: "php",
    title: "PHP",
    default: "curl",
    cli: "php %s"
  },
  clientsById: {
    curl: Eo,
    guzzle: Ro,
    http1: Ao,
    http2: qo
  }
}, zr = (e) => ({ method: n, headersObj: a, cookies: s, uriObj: i, fullUrl: r, postData: o, allHeaders: l }) => {
  const { push: c, join: u } = new O();
  if (!["GET", "POST", "PUT", "DELETE", "PATCH", "HEAD", "OPTIONS"].includes(n.toUpperCase()))
    return "Method not supported";
  const d = [], m = Object.keys(a);
  return m.length && (c("$headers=@{}"), m.forEach((h) => {
    h !== "connection" && c(`$headers.Add("${h}", "${ze(a[h], { escapeChar: "`" })}")`);
  }), d.push("-Headers $headers")), s.length && (c("$session = New-Object Microsoft.PowerShell.Commands.WebRequestSession"), s.forEach((h) => {
    c("$cookie = New-Object System.Net.Cookie"), c(`$cookie.Name = '${h.name}'`), c(`$cookie.Value = '${h.value}'`), c(`$cookie.Domain = '${i.host}'`), c("$session.Cookies.Add($cookie)");
  }), d.push("-WebSession $session")), o.text && (d.push(
    `-ContentType '${ze(de(l, "content-type"), { delimiter: "'", escapeChar: "`" })}'`
  ), d.push(`-Body '${o.text}'`)), c(`$response = ${e} -Uri '${r}' -Method ${n} ${d.join(" ")}`.trim()), u();
}, Io = {
  info: {
    key: "restmethod",
    title: "Invoke-RestMethod",
    link: "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Utility/Invoke-RestMethod",
    description: "Powershell Invoke-RestMethod client",
    extname: ".ps1"
  },
  convert: zr("Invoke-RestMethod")
}, _o = {
  info: {
    key: "webrequest",
    title: "Invoke-WebRequest",
    link: "https://docs.microsoft.com/en-us/powershell/module/Microsoft.PowerShell.Utility/Invoke-WebRequest",
    description: "Powershell Invoke-WebRequest client",
    extname: ".ps1"
  },
  convert: zr("Invoke-WebRequest")
}, Lo = {
  info: {
    key: "powershell",
    title: "Powershell",
    default: "webrequest"
  },
  clientsById: {
    webrequest: _o,
    restmethod: Io
  }
};
function Rn(e, t, n, a, s) {
  const i = a.repeat(s), r = a.repeat(s - 1), o = n ? `,
${i}` : ", ", l = e === "object" ? "{" : "[", c = e === "object" ? "}" : "]";
  return n ? `${l}
${i}${t.join(o)}
${r}${c}` : e === "object" && t.length > 0 ? `${l} ${t.join(o)} ${c}` : `${l}${t.join(o)}${c}`;
}
var Ee = (e, t, n) => {
  switch (n = n === void 0 ? 1 : n + 1, Object.prototype.toString.call(e)) {
    case "[object Number]":
      return e;
    case "[object Array]": {
      let a = !1;
      const s = e.map((i) => (Object.prototype.toString.call(i) === "[object Object]" && (a = Object.keys(i).length > 1), Ee(i, t, n)));
      return Rn("array", s, a, t.indent, n);
    }
    case "[object Object]": {
      const a = [];
      for (const s in e)
        a.push(`"${s}": ${Ee(e[s], t, n)}`);
      return Rn("object", a, t.pretty && a.length > 1, t.indent, n);
    }
    case "[object Null]":
      return "None";
    case "[object Boolean]":
      return e ? "True" : "False";
    default:
      return e == null ? "" : `"${e.toString().replace(/"/g, '\\"')}"`;
  }
}, Uo = ["HEAD", "GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"], Mo = {
  info: {
    key: "requests",
    title: "Requests",
    link: "http://docs.python-requests.org/en/latest/api/#requests.request",
    description: "Requests HTTP library",
    extname: ".py",
    installation: "python -m pip install requests"
  },
  convert: ({ fullUrl: e, postData: t, allHeaders: n, method: a }, s) => {
    const i = {
      indent: "    ",
      pretty: !0,
      ...s
    }, { push: r, blank: o, join: l, addPostProcessor: c } = new O({ indent: i.indent });
    r("import requests"), o(), r(`url = "${e}"`), o();
    const u = n;
    let f = {};
    const d = {};
    let m = !1, h = !1, v = !1;
    switch (t.mimeType) {
      case "application/json":
        t.jsonObj && (r(`payload = ${Ee(t.jsonObj, i)}`), v = !0, h = !0);
        break;
      case "multipart/form-data":
        if (!t.params)
          break;
        if (f = {}, t.params.forEach((y) => {
          y.fileName ? (y.contentType ? d[y.name] = `('${y.fileName}', open('${y.fileName}', 'rb'), '${y.contentType}')` : d[y.name] = `('${y.fileName}', open('${y.fileName}', 'rb'))`, m = !0) : (f[y.name] = y.value, h = !0);
        }), m) {
          r(`files = ${Ee(d, i)}`), h && r(`payload = ${Ee(f, i)}`);
          const y = Z(u, "content-type");
          y && delete u[y];
        } else {
          const y = JSON.stringify(t.text);
          y && (r(`payload = ${y}`), h = !0);
        }
        c(
          (y) => y.replace(/"\('(.+)', open\('(.+)', 'rb'\)\)"/g, '("$1", open("$2", "rb"))').replace(/"\('(.+)', open\('(.+)', 'rb'\), '(.+)'\)"/g, '("$1", open("$2", "rb"), "$3")')
        );
        break;
      default: {
        if (t.mimeType === "application/x-www-form-urlencoded" && t.paramsObj) {
          r(`payload = ${Ee(t.paramsObj, i)}`), h = !0;
          break;
        }
        const y = JSON.stringify(t.text);
        y && (r(`payload = ${y}`), h = !0);
      }
    }
    const g = Object.keys(u).length;
    if (g === 0 && (h || m))
      o();
    else if (g === 1)
      Object.keys(u).forEach((y) => {
        r(`headers = {"${y}": "${G(u[y])}"}`), o();
      });
    else if (g > 1) {
      let y = 1;
      r("headers = {"), Object.keys(u).forEach((x) => {
        r(y !== g ? `"${x}": "${G(u[x])}",` : `"${x}": "${G(u[x])}"`, 1), y += 1;
      }), r("}"), o();
    }
    let b = Uo.includes(a) ? `response = requests.${a.toLowerCase()}(url` : `response = requests.request("${a}", url`;
    return h && (v ? b += ", json=payload" : b += ", data=payload"), m && (b += ", files=files"), g > 0 && (b += ", headers=headers"), b += ")", r(b), o(), r("print(response.text)"), l();
  }
}, Ho = {
  info: {
    key: "python",
    title: "Python",
    default: "requests",
    cli: "python3 %s"
  },
  clientsById: {
    requests: Mo
  }
}, Bo = {
  info: {
    key: "httr",
    title: "httr",
    link: "https://cran.r-project.org/web/packages/httr/vignettes/quickstart.html",
    description: "httr: Tools for Working with URLs and HTTP",
    extname: ".r"
  },
  convert: ({ url: e, queryObj: t, queryString: n, postData: a, allHeaders: s, method: i }) => {
    const { push: r, blank: o, join: l } = new O();
    r("library(httr)"), o(), r(`url <- "${e}"`), o();
    const c = t;
    delete t.key;
    const u = Object.keys(c).length;
    n.length === 1 ? (r(`queryString <- list(${Object.keys(c)} = "${Object.values(c).toString()}")`), o()) : n.length > 1 && (r("queryString <- list("), Object.keys(c).forEach((S, j) => {
      j !== u - 1 ? r(`  ${S} = "${c[S].toString()}",`) : r(`  ${S} = "${c[S].toString()}"`);
    }), r(")"), o());
    const f = JSON.stringify(a.text);
    if (f && (r(`payload <- ${f}`), o()), a.text || a.jsonObj || a.params)
      switch (a.mimeType) {
        case "application/x-www-form-urlencoded":
          r('encode <- "form"'), o();
          break;
        case "application/json":
          r('encode <- "json"'), o();
          break;
        case "multipart/form-data":
          r('encode <- "multipart"'), o();
          break;
        default:
          r('encode <- "raw"'), o();
          break;
      }
    const d = de(s, "cookie"), m = de(s, "accept"), h = d ? `set_cookies(\`${String(d).replace(/;/g, '", `').replace(/` /g, "`").replace(/[=]/g, '` = "')}")` : void 0, v = m ? `accept("${G(m)}")` : void 0, g = `content_type("${G(a.mimeType)}")`, b = Object.entries(s).filter(([S]) => !["cookie", "accept", "content-type"].includes(S.toLowerCase())).map(([S, j]) => `'${S}' = '${De(j)}'`).join(", "), y = b ? `add_headers(${b})` : void 0;
    let x = `response <- VERB("${i}", url`;
    f && (x += ", body = payload"), n.length && (x += ", query = queryString");
    const k = [y, g, v, h].filter((S) => !!S).join(", ");
    return k && (x += `, ${k}`), (a.text || a.jsonObj || a.params) && (x += ", encode = encode"), x += ")", r(x), o(), r('content(response, "text")'), l();
  }
}, Vo = {
  info: {
    key: "r",
    title: "R",
    default: "httr"
  },
  clientsById: {
    httr: Bo
  }
}, zo = {
  info: {
    key: "native",
    title: "net::http",
    link: "http://ruby-doc.org/stdlib-2.2.1/libdoc/net/http/rdoc/Net/HTTP.html",
    description: "Ruby HTTP client",
    extname: ".rb"
  },
  convert: ({ uriObj: e, method: t, fullUrl: n, postData: a, allHeaders: s }) => {
    const { push: i, blank: r, join: o } = new O();
    i("require 'uri'"), i("require 'net/http'"), r();
    const l = t.toUpperCase(), c = [
      "GET",
      "POST",
      "HEAD",
      "DELETE",
      "PATCH",
      "PUT",
      "OPTIONS",
      "COPY",
      "LOCK",
      "UNLOCK",
      "MOVE",
      "TRACE"
    ], u = l.charAt(0) + l.substring(1).toLowerCase();
    c.includes(l) || (i(`class Net::HTTP::${u} < Net::HTTPRequest`), i(`  METHOD = '${l.toUpperCase()}'`), i(`  REQUEST_HAS_BODY = '${a.text ? "true" : "false"}'`), i("  RESPONSE_HAS_BODY = true"), i("end"), r()), i(`url = URI("${n}")`), r(), i("http = Net::HTTP.new(url.host, url.port)"), e.protocol === "https:" && i("http.use_ssl = true"), r(), i(`request = Net::HTTP::${u}.new(url)`);
    const f = Object.keys(s);
    return f.length && f.forEach((d) => {
      i(`request["${d}"] = '${De(s[d])}'`);
    }), a.text && i(`request.body = ${JSON.stringify(a.text)}`), r(), i("response = http.request(request)"), i("puts response.read_body"), o();
  }
}, Do = {
  info: {
    key: "ruby",
    title: "Ruby",
    default: "native"
  },
  clientsById: {
    native: zo
  }
}, K = (e = "") => /^[a-z0-9-_/.@%^=:]+$/i.test(e) ? e : `'${e.replace(/'/g, "'\\''")}'`, Jo = (e) => e.replace(/\r/g, "\\r").replace(/\n/g, "\\n"), Wo = {
  "http1.0": "0",
  "url ": "",
  cookie: "b",
  data: "d",
  form: "F",
  globoff: "g",
  header: "H",
  insecure: "k",
  request: "X"
}, Go = (e) => (t) => {
  if (e) {
    const n = Wo[t];
    return n ? `-${n}` : "";
  }
  return `--${t}`;
}, Qo = {
  info: {
    key: "curl",
    title: "cURL",
    link: "http://curl.haxx.se/",
    description: "cURL is a command line tool and library for transferring data with URL syntax",
    extname: ".sh"
  },
  convert: ({ fullUrl: e, method: t, httpVersion: n, headersObj: a, allHeaders: s, postData: i }, r = {}) => {
    var g;
    const { indent: o = "  ", short: l = !1, binary: c = !1, globOff: u = !1 } = r, f = "  ", { push: d, join: m } = new O({
      ...typeof o == "string" ? { indent: o } : {},
      join: o !== !1 ? ` \\
${o}` : " "
    }), h = Go(l);
    let v = K(e);
    if (d(`curl ${h("request")} ${t}`), u && (v = unescape(v), d(h("globoff"))), d(`${h("url ")}${v}`), n === "HTTP/1.0" && d(h("http1.0")), de(s, "accept-encoding") && d("--compressed"), i.mimeType === "multipart/form-data") {
      const b = Z(a, "content-type");
      if (b) {
        const y = a[b];
        if (b && y) {
          const x = String(y).replace(/; boundary.+?(?=(;|$))/, "");
          a[b] = x, s[b] = x;
        }
      }
    }
    switch (Object.keys(a).sort().forEach((b) => {
      const y = `${b}: ${a[b]}`;
      d(`${h("header")} ${K(y)}`);
    }), s.cookie && d(`${h("cookie")} ${K(s.cookie)}`), i.mimeType) {
      case "multipart/form-data":
        (g = i.params) == null || g.forEach((y) => {
          let x = "";
          y.fileName ? x = `${y.name}='@${y.fileName}'` : x = K(`${y.name}=${y.value}`), d(`${h("form")} ${x}`);
        });
        break;
      case "application/x-www-form-urlencoded":
        i.params ? i.params.forEach((y) => {
          const x = y.name, k = encodeURIComponent(y.name), S = k !== x, j = S ? k : x, R = c ? "--data-binary" : S ? "--data-urlencode" : h("data");
          d(`${R} ${K(`${j}=${y.value}`)}`);
        }) : d(`${c ? "--data-binary" : h("data")} ${K(i.text)}`);
        break;
      default:
        if (!i.text)
          break;
        let b = !1;
        if (Wi(i.mimeType) && i.text.length > 20)
          try {
            const y = JSON.parse(i.text);
            b = !0, i.text.indexOf("'") > 0 ? d(
              `${c ? "--data-binary" : h("data")} @- <<EOF
${JSON.stringify(
                y,
                null,
                f
              )}
EOF`
            ) : d(
              `${c ? "--data-binary" : h("data")} '
${JSON.stringify(y, null, f)}
'`
            );
          } catch {
          }
        b || d(`${c ? "--data-binary" : h("data")} ${K(i.text)}`);
    }
    return m();
  }
}, Ko = {
  info: {
    key: "httpie",
    title: "HTTPie",
    link: "http://httpie.org/",
    description: "a CLI, cURL-like tool for humans",
    extname: ".sh",
    installation: "brew install httpie"
  },
  convert: ({ allHeaders: e, postData: t, queryObj: n, fullUrl: a, method: s, url: i }, r) => {
    const o = {
      body: !1,
      cert: !1,
      headers: !1,
      indent: "  ",
      pretty: !1,
      print: !1,
      queryParams: !1,
      short: !1,
      style: !1,
      timeout: !1,
      verbose: !1,
      verify: !1,
      ...r
    }, { push: l, join: c, unshift: u } = new O({
      indent: o.indent,
      // @ts-expect-error SEEMS LEGIT
      join: o.indent !== !1 ? ` \\
${o.indent}` : " "
    });
    let f = !1;
    const d = [];
    o.headers && d.push(o.short ? "-h" : "--headers"), o.body && d.push(o.short ? "-b" : "--body"), o.verbose && d.push(o.short ? "-v" : "--verbose"), o.print && d.push(`${o.short ? "-p" : "--print"}=${o.print}`), o.verify && d.push(`--verify=${o.verify}`), o.cert && d.push(`--cert=${o.cert}`), o.pretty && d.push(`--pretty=${o.pretty}`), o.style && d.push(`--style=${o.style}`), o.timeout && d.push(`--timeout=${o.timeout}`), o.queryParams && Object.keys(n).forEach((h) => {
      const v = n[h];
      Array.isArray(v) ? v.forEach((g) => {
        l(`${h}==${K(g)}`);
      }) : l(`${h}==${K(v)}`);
    }), Object.keys(e).sort().forEach((h) => {
      l(`${h}:${K(e[h])}`);
    }), t.mimeType === "application/x-www-form-urlencoded" ? t.params && t.params.length && (d.push(o.short ? "-f" : "--form"), t.params.forEach((h) => {
      l(`${h.name}=${K(h.value)}`);
    })) : f = !0;
    const m = d.length ? `${d.join(" ")} ` : "";
    if (i = K(o.queryParams ? i : a), u(`http ${m}${s} ${i}`), f && t.text) {
      const h = K(t.text);
      u(`echo ${h} | `);
    }
    return c();
  }
}, Yo = {
  info: {
    key: "wget",
    title: "Wget",
    link: "https://www.gnu.org/software/wget/",
    description: "a free software package for retrieving files using HTTP, HTTPS",
    extname: ".sh"
  },
  convert: ({ method: e, postData: t, allHeaders: n, fullUrl: a }, s) => {
    const i = {
      indent: "  ",
      short: !1,
      verbose: !1,
      ...s
    }, { push: r, join: o } = new O({
      ...typeof i.indent == "string" ? { indent: i.indent } : {},
      join: i.indent !== !1 ? ` \\
${i.indent}` : " "
    });
    return i.verbose ? r(`wget ${i.short ? "-v" : "--verbose"}`) : r(`wget ${i.short ? "-q" : "--quiet"}`), r(`--method ${K(e)}`), Object.keys(n).forEach((l) => {
      const c = `${l}: ${n[l]}`;
      r(`--header ${K(c)}`);
    }), t.text && r(`--body-data ${Jo(K(t.text))}`), r(i.short ? "-O" : "--output-document"), r(`- ${K(a)}`), o();
  }
}, Xo = {
  info: {
    key: "shell",
    title: "Shell",
    default: "curl",
    cli: "%s"
  },
  clientsById: {
    curl: Qo,
    httpie: Ko,
    wget: Yo
  }
}, An = (e, t) => t.repeat(e), qn = (e, t, n, a) => {
  const s = An(a, n), i = An(a - 1, n), r = t ? `,
${s}` : ", ";
  return t ? `[
${s}${e.join(r)}
${i}]` : `[${e.join(r)}]`;
}, Fn = (e, t, n) => `let ${e} = ${st(t, n)}`, st = (e, t, n) => {
  switch (n = n === void 0 ? 1 : n + 1, Object.prototype.toString.call(e)) {
    case "[object Number]":
      return e;
    case "[object Array]": {
      let a = !1;
      const s = e.map((i) => (Object.prototype.toString.call(i) === "[object Object]" && (a = Object.keys(i).length > 1), st(i, t, n)));
      return qn(s, a, t.indent, n);
    }
    case "[object Object]": {
      const a = [];
      for (const s in e)
        a.push(`"${s}": ${st(e[s], t, n)}`);
      return qn(
        a,
        // @ts-expect-error needs better types
        t.pretty && a.length > 1,
        // @ts-expect-error needs better types
        t.indent,
        n
      );
    }
    case "[object Boolean]":
      return e.toString();
    default:
      return e == null ? "nil" : `"${e.toString().replace(/"/g, '\\"')}"`;
  }
}, Zo = {
  info: {
    key: "urlsession",
    title: "URLSession",
    link: "https://developer.apple.com/documentation/foundation/urlsession",
    description: "Foundation's URLSession request",
    extname: ".swift"
  },
  convert: ({ allHeaders: e, postData: t, uriObj: n, queryObj: a, method: s }, i) => {
    var d;
    const r = {
      indent: "  ",
      pretty: !0,
      timeout: 10,
      ...i
    }, { push: o, blank: l, join: c } = new O({ indent: r.indent });
    o("import Foundation"), l();
    const u = t.text || t.jsonObj || t.params;
    if (u)
      switch (t.mimeType) {
        case "application/x-www-form-urlencoded":
          if ((d = t.params) != null && d.length) {
            const m = t.params.map((h) => `"${h.name}": "${h.value}"`);
            r.pretty ? (o("let parameters = ["), m.forEach((h) => o(`${h},`, 1)), o("]")) : o(`let parameters = [${m.join(", ")}]`), o('let joinedParameters = parameters.map { "\\($0.key)=\\($0.value)" }.joined(separator: "&")'), o("let postData = Data(joinedParameters.utf8)"), l();
          }
          break;
        case "application/json":
          t.jsonObj && (o(`${Fn("parameters", t.jsonObj, r)} as [String : Any?]`), l(), o("let postData = try JSONSerialization.data(withJSONObject: parameters, options: [])"), l());
          break;
        case "multipart/form-data":
          o(Fn("parameters", t.params, r)), l(), o(`let boundary = "${t.boundary}"`), l(), o('var body = ""'), o("for param in parameters {"), o('let paramName = param["name"]!', 1), o('body += "--\\(boundary)\\r\\n"', 1), o('body += "Content-Disposition:form-data; name=\\"\\(paramName)\\""', 1), o('if let filename = param["fileName"] {', 1), o('let contentType = param["contentType"]!', 2), o("let fileContent = try String(contentsOfFile: filename, encoding: .utf8)", 2), o('body += "; filename=\\"\\(filename)\\"\\r\\n"', 2), o('body += "Content-Type: \\(contentType)\\r\\n\\r\\n"', 2), o("body += fileContent", 2), o('} else if let paramValue = param["value"] {', 1), o('body += "\\r\\n\\r\\n\\(paramValue)"', 2), o("}", 1), o("}"), l(), o("let postData = Data(body.utf8)"), l();
          break;
        default:
          o(`let postData = Data("${t.text}".utf8)`), l();
      }
    o(`let url = URL(string: "${n.href}")!`);
    const f = a ? Object.entries(a) : [];
    return f.length < 1 ? o("var request = URLRequest(url: url)") : (o("var components = URLComponents(url: url, resolvingAgainstBaseURL: true)!"), o("let queryItems: [URLQueryItem] = ["), f.forEach((m) => {
      const h = m[0], v = m[1];
      switch (Object.prototype.toString.call(v)) {
        case "[object String]":
          o(`URLQueryItem(name: "${h}", value: "${v}"),`, 1);
          break;
        case "[object Array]":
          v.forEach((g) => {
            o(`URLQueryItem(name: "${h}", value: "${g}"),`, 1);
          });
          break;
      }
    }), o("]"), o("components.queryItems = components.queryItems.map { $0 + queryItems } ?? queryItems"), l(), o("var request = URLRequest(url: components.url!)")), o(`request.httpMethod = "${s}"`), o(`request.timeoutInterval = ${r.timeout}`), Object.keys(e).length && o(`request.allHTTPHeaderFields = ${st(e, r)}`), u && o("request.httpBody = postData"), l(), o("let (data, _) = try await URLSession.shared.data(for: request)"), o("print(String(decoding: data, as: UTF8.self))"), c();
  }
}, es = {
  info: {
    key: "swift",
    title: "Swift",
    default: "urlsession"
  },
  clientsById: {
    urlsession: Zo
  }
}, ts = {
  c: Ji,
  clojure: Ki,
  csharp: to,
  go: ro,
  http: io,
  java: uo,
  javascript: yo,
  json: go,
  kotlin: xo,
  node: No,
  objc: Oo,
  ocaml: Po,
  php: Fo,
  powershell: Lo,
  python: Ho,
  r: Vo,
  ruby: Do,
  shell: Xo,
  swift: es
}, lt = { exports: {} };
/*! https://mths.be/punycode v1.4.1 by @mathias */
lt.exports;
(function(e, t) {
  (function(n) {
    var a = t && !t.nodeType && t, s = e && !e.nodeType && e, i = typeof Me == "object" && Me;
    (i.global === i || i.window === i || i.self === i) && (n = i);
    var r, o = 2147483647, l = 36, c = 1, u = 26, f = 38, d = 700, m = 72, h = 128, v = "-", g = /^xn--/, b = /[^\x20-\x7E]/, y = /[\x2E\u3002\uFF0E\uFF61]/g, x = {
      overflow: "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    }, k = l - c, S = Math.floor, j = String.fromCharCode, R;
    function E(w) {
      throw new RangeError(x[w]);
    }
    function A(w, N) {
      for (var C = w.length, U = []; C--; )
        U[C] = N(w[C]);
      return U;
    }
    function H(w, N) {
      var C = w.split("@"), U = "";
      C.length > 1 && (U = C[0] + "@", w = C[1]), w = w.replace(y, ".");
      var V = w.split("."), te = A(V, N).join(".");
      return U + te;
    }
    function $(w) {
      for (var N = [], C = 0, U = w.length, V, te; C < U; )
        V = w.charCodeAt(C++), V >= 55296 && V <= 56319 && C < U ? (te = w.charCodeAt(C++), (te & 64512) == 56320 ? N.push(((V & 1023) << 10) + (te & 1023) + 65536) : (N.push(V), C--)) : N.push(V);
      return N;
    }
    function L(w) {
      return A(w, function(N) {
        var C = "";
        return N > 65535 && (N -= 65536, C += j(N >>> 10 & 1023 | 55296), N = 56320 | N & 1023), C += j(N), C;
      }).join("");
    }
    function I(w) {
      return w - 48 < 10 ? w - 22 : w - 65 < 26 ? w - 65 : w - 97 < 26 ? w - 97 : l;
    }
    function z(w, N) {
      return w + 22 + 75 * (w < 26) - ((N != 0) << 5);
    }
    function B(w, N, C) {
      var U = 0;
      for (w = C ? S(w / d) : w >> 1, w += S(w / N); w > k * u >> 1; U += l)
        w = S(w / k);
      return S(U + (k + 1) * w / (w + f));
    }
    function D(w) {
      var N = [], C = w.length, U, V = 0, te = h, Q = m, ne, ae, se, fe, X, re, ie, ye, xe;
      for (ne = w.lastIndexOf(v), ne < 0 && (ne = 0), ae = 0; ae < ne; ++ae)
        w.charCodeAt(ae) >= 128 && E("not-basic"), N.push(w.charCodeAt(ae));
      for (se = ne > 0 ? ne + 1 : 0; se < C; ) {
        for (fe = V, X = 1, re = l; se >= C && E("invalid-input"), ie = I(w.charCodeAt(se++)), (ie >= l || ie > S((o - V) / X)) && E("overflow"), V += ie * X, ye = re <= Q ? c : re >= Q + u ? u : re - Q, !(ie < ye); re += l)
          xe = l - ye, X > S(o / xe) && E("overflow"), X *= xe;
        U = N.length + 1, Q = B(V - fe, U, fe == 0), S(V / U) > o - te && E("overflow"), te += S(V / U), V %= U, N.splice(V++, 0, te);
      }
      return L(N);
    }
    function _(w) {
      var N, C, U, V, te, Q, ne, ae, se, fe, X, re = [], ie, ye, xe, yt;
      for (w = $(w), ie = w.length, N = h, C = 0, te = m, Q = 0; Q < ie; ++Q)
        X = w[Q], X < 128 && re.push(j(X));
      for (U = V = re.length, V && re.push(v); U < ie; ) {
        for (ne = o, Q = 0; Q < ie; ++Q)
          X = w[Q], X >= N && X < ne && (ne = X);
        for (ye = U + 1, ne - N > S((o - C) / ye) && E("overflow"), C += (ne - N) * ye, N = ne, Q = 0; Q < ie; ++Q)
          if (X = w[Q], X < N && ++C > o && E("overflow"), X == N) {
            for (ae = C, se = l; fe = se <= te ? c : se >= te + u ? u : se - te, !(ae < fe); se += l)
              yt = ae - fe, xe = l - fe, re.push(
                j(z(fe + yt % xe, 0))
              ), ae = S(yt / xe);
            re.push(j(z(ae, 0))), te = B(C, ye, U == V), C = 0, ++U;
          }
        ++C, ++N;
      }
      return re.join("");
    }
    function he(w) {
      return H(w, function(N) {
        return g.test(N) ? D(N.slice(4).toLowerCase()) : N;
      });
    }
    function pe(w) {
      return H(w, function(N) {
        return b.test(N) ? "xn--" + _(N) : N;
      });
    }
    if (r = {
      /**
       * A string representing the current Punycode.js version number.
       * @memberOf punycode
       * @type String
       */
      version: "1.4.1",
      /**
       * An object of methods to convert from JavaScript's internal character
       * representation (UCS-2) to Unicode code points, and back.
       * @see <https://mathiasbynens.be/notes/javascript-encoding>
       * @memberOf punycode
       * @type Object
       */
      ucs2: {
        decode: $,
        encode: L
      },
      decode: D,
      encode: _,
      toASCII: pe,
      toUnicode: he
    }, a && s)
      if (e.exports == a)
        s.exports = r;
      else
        for (R in r)
          r.hasOwnProperty(R) && (a[R] = r[R]);
    else
      n.punycode = r;
  })(Me);
})(lt, lt.exports);
var ns = lt.exports, rs = Error, as = EvalError, is = RangeError, os = ReferenceError, Dr = SyntaxError, Ge = TypeError, ss = URIError, ls = function() {
  if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
    return !1;
  if (typeof Symbol.iterator == "symbol")
    return !0;
  var t = {}, n = Symbol("test"), a = Object(n);
  if (typeof n == "string" || Object.prototype.toString.call(n) !== "[object Symbol]" || Object.prototype.toString.call(a) !== "[object Symbol]")
    return !1;
  var s = 42;
  t[n] = s;
  for (n in t)
    return !1;
  if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
    return !1;
  var i = Object.getOwnPropertySymbols(t);
  if (i.length !== 1 || i[0] !== n || !Object.prototype.propertyIsEnumerable.call(t, n))
    return !1;
  if (typeof Object.getOwnPropertyDescriptor == "function") {
    var r = Object.getOwnPropertyDescriptor(t, n);
    if (r.value !== s || r.enumerable !== !0)
      return !1;
  }
  return !0;
}, In = typeof Symbol < "u" && Symbol, cs = ls, us = function() {
  return typeof In != "function" || typeof Symbol != "function" || typeof In("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : cs();
}, jt = {
  __proto__: null,
  foo: {}
}, ds = Object, ps = function() {
  return { __proto__: jt }.foo === jt.foo && !(jt instanceof ds);
}, fs = "Function.prototype.bind called on incompatible ", ms = Object.prototype.toString, hs = Math.max, ys = "[object Function]", _n = function(t, n) {
  for (var a = [], s = 0; s < t.length; s += 1)
    a[s] = t[s];
  for (var i = 0; i < n.length; i += 1)
    a[i + t.length] = n[i];
  return a;
}, vs = function(t, n) {
  for (var a = [], s = n, i = 0; s < t.length; s += 1, i += 1)
    a[i] = t[s];
  return a;
}, gs = function(e, t) {
  for (var n = "", a = 0; a < e.length; a += 1)
    n += e[a], a + 1 < e.length && (n += t);
  return n;
}, bs = function(t) {
  var n = this;
  if (typeof n != "function" || ms.apply(n) !== ys)
    throw new TypeError(fs + n);
  for (var a = vs(arguments, 1), s, i = function() {
    if (this instanceof s) {
      var u = n.apply(
        this,
        _n(a, arguments)
      );
      return Object(u) === u ? u : this;
    }
    return n.apply(
      t,
      _n(a, arguments)
    );
  }, r = hs(0, n.length - a.length), o = [], l = 0; l < r; l++)
    o[l] = "$" + l;
  if (s = Function("binder", "return function (" + gs(o, ",") + "){ return binder.apply(this,arguments); }")(i), n.prototype) {
    var c = function() {
    };
    c.prototype = n.prototype, s.prototype = new c(), c.prototype = null;
  }
  return s;
}, xs = bs, on = Function.prototype.bind || xs, ks = Function.prototype.call, $s = Object.prototype.hasOwnProperty, Ss = on, ws = Ss.call(ks, $s), T, js = rs, Ns = as, Ts = is, Os = os, qe = Dr, Re = Ge, Cs = ss, Jr = Function, Nt = function(e) {
  try {
    return Jr('"use strict"; return (' + e + ").constructor;")();
  } catch {
  }
}, Se = Object.getOwnPropertyDescriptor;
if (Se)
  try {
    Se({}, "");
  } catch {
    Se = null;
  }
var Tt = function() {
  throw new Re();
}, Ps = Se ? function() {
  try {
    return arguments.callee, Tt;
  } catch {
    try {
      return Se(arguments, "callee").get;
    } catch {
      return Tt;
    }
  }
}() : Tt, Ne = us(), Es = ps(), W = Object.getPrototypeOf || (Es ? function(e) {
  return e.__proto__;
} : null), Pe = {}, Rs = typeof Uint8Array > "u" || !W ? T : W(Uint8Array), we = {
  __proto__: null,
  "%AggregateError%": typeof AggregateError > "u" ? T : AggregateError,
  "%Array%": Array,
  "%ArrayBuffer%": typeof ArrayBuffer > "u" ? T : ArrayBuffer,
  "%ArrayIteratorPrototype%": Ne && W ? W([][Symbol.iterator]()) : T,
  "%AsyncFromSyncIteratorPrototype%": T,
  "%AsyncFunction%": Pe,
  "%AsyncGenerator%": Pe,
  "%AsyncGeneratorFunction%": Pe,
  "%AsyncIteratorPrototype%": Pe,
  "%Atomics%": typeof Atomics > "u" ? T : Atomics,
  "%BigInt%": typeof BigInt > "u" ? T : BigInt,
  "%BigInt64Array%": typeof BigInt64Array > "u" ? T : BigInt64Array,
  "%BigUint64Array%": typeof BigUint64Array > "u" ? T : BigUint64Array,
  "%Boolean%": Boolean,
  "%DataView%": typeof DataView > "u" ? T : DataView,
  "%Date%": Date,
  "%decodeURI%": decodeURI,
  "%decodeURIComponent%": decodeURIComponent,
  "%encodeURI%": encodeURI,
  "%encodeURIComponent%": encodeURIComponent,
  "%Error%": js,
  "%eval%": eval,
  // eslint-disable-line no-eval
  "%EvalError%": Ns,
  "%Float32Array%": typeof Float32Array > "u" ? T : Float32Array,
  "%Float64Array%": typeof Float64Array > "u" ? T : Float64Array,
  "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? T : FinalizationRegistry,
  "%Function%": Jr,
  "%GeneratorFunction%": Pe,
  "%Int8Array%": typeof Int8Array > "u" ? T : Int8Array,
  "%Int16Array%": typeof Int16Array > "u" ? T : Int16Array,
  "%Int32Array%": typeof Int32Array > "u" ? T : Int32Array,
  "%isFinite%": isFinite,
  "%isNaN%": isNaN,
  "%IteratorPrototype%": Ne && W ? W(W([][Symbol.iterator]())) : T,
  "%JSON%": typeof JSON == "object" ? JSON : T,
  "%Map%": typeof Map > "u" ? T : Map,
  "%MapIteratorPrototype%": typeof Map > "u" || !Ne || !W ? T : W((/* @__PURE__ */ new Map())[Symbol.iterator]()),
  "%Math%": Math,
  "%Number%": Number,
  "%Object%": Object,
  "%parseFloat%": parseFloat,
  "%parseInt%": parseInt,
  "%Promise%": typeof Promise > "u" ? T : Promise,
  "%Proxy%": typeof Proxy > "u" ? T : Proxy,
  "%RangeError%": Ts,
  "%ReferenceError%": Os,
  "%Reflect%": typeof Reflect > "u" ? T : Reflect,
  "%RegExp%": RegExp,
  "%Set%": typeof Set > "u" ? T : Set,
  "%SetIteratorPrototype%": typeof Set > "u" || !Ne || !W ? T : W((/* @__PURE__ */ new Set())[Symbol.iterator]()),
  "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? T : SharedArrayBuffer,
  "%String%": String,
  "%StringIteratorPrototype%": Ne && W ? W(""[Symbol.iterator]()) : T,
  "%Symbol%": Ne ? Symbol : T,
  "%SyntaxError%": qe,
  "%ThrowTypeError%": Ps,
  "%TypedArray%": Rs,
  "%TypeError%": Re,
  "%Uint8Array%": typeof Uint8Array > "u" ? T : Uint8Array,
  "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? T : Uint8ClampedArray,
  "%Uint16Array%": typeof Uint16Array > "u" ? T : Uint16Array,
  "%Uint32Array%": typeof Uint32Array > "u" ? T : Uint32Array,
  "%URIError%": Cs,
  "%WeakMap%": typeof WeakMap > "u" ? T : WeakMap,
  "%WeakRef%": typeof WeakRef > "u" ? T : WeakRef,
  "%WeakSet%": typeof WeakSet > "u" ? T : WeakSet
};
if (W)
  try {
    null.error;
  } catch (e) {
    var As = W(W(e));
    we["%Error.prototype%"] = As;
  }
var qs = function e(t) {
  var n;
  if (t === "%AsyncFunction%")
    n = Nt("async function () {}");
  else if (t === "%GeneratorFunction%")
    n = Nt("function* () {}");
  else if (t === "%AsyncGeneratorFunction%")
    n = Nt("async function* () {}");
  else if (t === "%AsyncGenerator%") {
    var a = e("%AsyncGeneratorFunction%");
    a && (n = a.prototype);
  } else if (t === "%AsyncIteratorPrototype%") {
    var s = e("%AsyncGenerator%");
    s && W && (n = W(s.prototype));
  }
  return we[t] = n, n;
}, Ln = {
  __proto__: null,
  "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
  "%ArrayPrototype%": ["Array", "prototype"],
  "%ArrayProto_entries%": ["Array", "prototype", "entries"],
  "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
  "%ArrayProto_keys%": ["Array", "prototype", "keys"],
  "%ArrayProto_values%": ["Array", "prototype", "values"],
  "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
  "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
  "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
  "%BooleanPrototype%": ["Boolean", "prototype"],
  "%DataViewPrototype%": ["DataView", "prototype"],
  "%DatePrototype%": ["Date", "prototype"],
  "%ErrorPrototype%": ["Error", "prototype"],
  "%EvalErrorPrototype%": ["EvalError", "prototype"],
  "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
  "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
  "%FunctionPrototype%": ["Function", "prototype"],
  "%Generator%": ["GeneratorFunction", "prototype"],
  "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
  "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
  "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
  "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
  "%JSONParse%": ["JSON", "parse"],
  "%JSONStringify%": ["JSON", "stringify"],
  "%MapPrototype%": ["Map", "prototype"],
  "%NumberPrototype%": ["Number", "prototype"],
  "%ObjectPrototype%": ["Object", "prototype"],
  "%ObjProto_toString%": ["Object", "prototype", "toString"],
  "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
  "%PromisePrototype%": ["Promise", "prototype"],
  "%PromiseProto_then%": ["Promise", "prototype", "then"],
  "%Promise_all%": ["Promise", "all"],
  "%Promise_reject%": ["Promise", "reject"],
  "%Promise_resolve%": ["Promise", "resolve"],
  "%RangeErrorPrototype%": ["RangeError", "prototype"],
  "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
  "%RegExpPrototype%": ["RegExp", "prototype"],
  "%SetPrototype%": ["Set", "prototype"],
  "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
  "%StringPrototype%": ["String", "prototype"],
  "%SymbolPrototype%": ["Symbol", "prototype"],
  "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
  "%TypedArrayPrototype%": ["TypedArray", "prototype"],
  "%TypeErrorPrototype%": ["TypeError", "prototype"],
  "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
  "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
  "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
  "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
  "%URIErrorPrototype%": ["URIError", "prototype"],
  "%WeakMapPrototype%": ["WeakMap", "prototype"],
  "%WeakSetPrototype%": ["WeakSet", "prototype"]
}, Qe = on, ct = ws, Fs = Qe.call(Function.call, Array.prototype.concat), Is = Qe.call(Function.apply, Array.prototype.splice), Un = Qe.call(Function.call, String.prototype.replace), ut = Qe.call(Function.call, String.prototype.slice), _s = Qe.call(Function.call, RegExp.prototype.exec), Ls = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, Us = /\\(\\)?/g, Ms = function(t) {
  var n = ut(t, 0, 1), a = ut(t, -1);
  if (n === "%" && a !== "%")
    throw new qe("invalid intrinsic syntax, expected closing `%`");
  if (a === "%" && n !== "%")
    throw new qe("invalid intrinsic syntax, expected opening `%`");
  var s = [];
  return Un(t, Ls, function(i, r, o, l) {
    s[s.length] = o ? Un(l, Us, "$1") : r || i;
  }), s;
}, Hs = function(t, n) {
  var a = t, s;
  if (ct(Ln, a) && (s = Ln[a], a = "%" + s[0] + "%"), ct(we, a)) {
    var i = we[a];
    if (i === Pe && (i = qs(a)), typeof i > "u" && !n)
      throw new Re("intrinsic " + t + " exists, but is not available. Please file an issue!");
    return {
      alias: s,
      name: a,
      value: i
    };
  }
  throw new qe("intrinsic " + t + " does not exist!");
}, _e = function(t, n) {
  if (typeof t != "string" || t.length === 0)
    throw new Re("intrinsic name must be a non-empty string");
  if (arguments.length > 1 && typeof n != "boolean")
    throw new Re('"allowMissing" argument must be a boolean');
  if (_s(/^%?[^%]*%?$/, t) === null)
    throw new qe("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
  var a = Ms(t), s = a.length > 0 ? a[0] : "", i = Hs("%" + s + "%", n), r = i.name, o = i.value, l = !1, c = i.alias;
  c && (s = c[0], Is(a, Fs([0, 1], c)));
  for (var u = 1, f = !0; u < a.length; u += 1) {
    var d = a[u], m = ut(d, 0, 1), h = ut(d, -1);
    if ((m === '"' || m === "'" || m === "`" || h === '"' || h === "'" || h === "`") && m !== h)
      throw new qe("property names with quotes must have matching quotes");
    if ((d === "constructor" || !f) && (l = !0), s += "." + d, r = "%" + s + "%", ct(we, r))
      o = we[r];
    else if (o != null) {
      if (!(d in o)) {
        if (!n)
          throw new Re("base intrinsic for " + t + " exists, but the property is not available.");
        return;
      }
      if (Se && u + 1 >= a.length) {
        var v = Se(o, d);
        f = !!v, f && "get" in v && !("originalValue" in v.get) ? o = v.get : o = o[d];
      } else
        f = ct(o, d), o = o[d];
      f && !l && (we[r] = o);
    }
  }
  return o;
}, Wr = { exports: {} }, Ot, Mn;
function sn() {
  if (Mn) return Ot;
  Mn = 1;
  var e = _e, t = e("%Object.defineProperty%", !0) || !1;
  if (t)
    try {
      t({}, "a", { value: 1 });
    } catch {
      t = !1;
    }
  return Ot = t, Ot;
}
var Bs = _e, nt = Bs("%Object.getOwnPropertyDescriptor%", !0);
if (nt)
  try {
    nt([], "length");
  } catch {
    nt = null;
  }
var Gr = nt, Hn = sn(), Vs = Dr, Te = Ge, Bn = Gr, zs = function(t, n, a) {
  if (!t || typeof t != "object" && typeof t != "function")
    throw new Te("`obj` must be an object or a function`");
  if (typeof n != "string" && typeof n != "symbol")
    throw new Te("`property` must be a string or a symbol`");
  if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
    throw new Te("`nonEnumerable`, if provided, must be a boolean or null");
  if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
    throw new Te("`nonWritable`, if provided, must be a boolean or null");
  if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
    throw new Te("`nonConfigurable`, if provided, must be a boolean or null");
  if (arguments.length > 6 && typeof arguments[6] != "boolean")
    throw new Te("`loose`, if provided, must be a boolean");
  var s = arguments.length > 3 ? arguments[3] : null, i = arguments.length > 4 ? arguments[4] : null, r = arguments.length > 5 ? arguments[5] : null, o = arguments.length > 6 ? arguments[6] : !1, l = !!Bn && Bn(t, n);
  if (Hn)
    Hn(t, n, {
      configurable: r === null && l ? l.configurable : !r,
      enumerable: s === null && l ? l.enumerable : !s,
      value: a,
      writable: i === null && l ? l.writable : !i
    });
  else if (o || !s && !i && !r)
    t[n] = a;
  else
    throw new Vs("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
}, Ht = sn(), Qr = function() {
  return !!Ht;
};
Qr.hasArrayLengthDefineBug = function() {
  if (!Ht)
    return null;
  try {
    return Ht([], "length", { value: 1 }).length !== 1;
  } catch {
    return !0;
  }
};
var Ds = Qr, Js = _e, Vn = zs, Ws = Ds(), zn = Gr, Dn = Ge, Gs = Js("%Math.floor%"), Qs = function(t, n) {
  if (typeof t != "function")
    throw new Dn("`fn` is not a function");
  if (typeof n != "number" || n < 0 || n > 4294967295 || Gs(n) !== n)
    throw new Dn("`length` must be a positive 32-bit integer");
  var a = arguments.length > 2 && !!arguments[2], s = !0, i = !0;
  if ("length" in t && zn) {
    var r = zn(t, "length");
    r && !r.configurable && (s = !1), r && !r.writable && (i = !1);
  }
  return (s || i || !a) && (Ws ? Vn(
    /** @type {Parameters<define>[0]} */
    t,
    "length",
    n,
    !0,
    !0
  ) : Vn(
    /** @type {Parameters<define>[0]} */
    t,
    "length",
    n
  )), t;
};
(function(e) {
  var t = on, n = _e, a = Qs, s = Ge, i = n("%Function.prototype.apply%"), r = n("%Function.prototype.call%"), o = n("%Reflect.apply%", !0) || t.call(r, i), l = sn(), c = n("%Math.max%");
  e.exports = function(d) {
    if (typeof d != "function")
      throw new s("a function is required");
    var m = o(t, r, arguments);
    return a(
      m,
      1 + c(0, d.length - (arguments.length - 1)),
      !0
    );
  };
  var u = function() {
    return o(t, i, arguments);
  };
  l ? l(e.exports, "apply", { value: u }) : e.exports.apply = u;
})(Wr);
var Ks = Wr.exports, Kr = _e, Yr = Ks, Ys = Yr(Kr("String.prototype.indexOf")), Xs = function(t, n) {
  var a = Kr(t, !!n);
  return typeof a == "function" && Ys(t, ".prototype.") > -1 ? Yr(a) : a;
};
const Zs = {}, el = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Zs
}, Symbol.toStringTag, { value: "Module" })), tl = /* @__PURE__ */ Ja(el);
var ln = typeof Map == "function" && Map.prototype, Ct = Object.getOwnPropertyDescriptor && ln ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, dt = ln && Ct && typeof Ct.get == "function" ? Ct.get : null, Jn = ln && Map.prototype.forEach, cn = typeof Set == "function" && Set.prototype, Pt = Object.getOwnPropertyDescriptor && cn ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, pt = cn && Pt && typeof Pt.get == "function" ? Pt.get : null, Wn = cn && Set.prototype.forEach, nl = typeof WeakMap == "function" && WeakMap.prototype, He = nl ? WeakMap.prototype.has : null, rl = typeof WeakSet == "function" && WeakSet.prototype, Be = rl ? WeakSet.prototype.has : null, al = typeof WeakRef == "function" && WeakRef.prototype, Gn = al ? WeakRef.prototype.deref : null, il = Boolean.prototype.valueOf, ol = Object.prototype.toString, sl = Function.prototype.toString, ll = String.prototype.match, un = String.prototype.slice, ge = String.prototype.replace, cl = String.prototype.toUpperCase, Qn = String.prototype.toLowerCase, Xr = RegExp.prototype.test, Kn = Array.prototype.concat, ue = Array.prototype.join, ul = Array.prototype.slice, Yn = Math.floor, Bt = typeof BigInt == "function" ? BigInt.prototype.valueOf : null, Et = Object.getOwnPropertySymbols, Vt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null, Fe = typeof Symbol == "function" && typeof Symbol.iterator == "object", ee = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === Fe || !0) ? Symbol.toStringTag : null, Zr = Object.prototype.propertyIsEnumerable, Xn = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(e) {
  return e.__proto__;
} : null);
function Zn(e, t) {
  if (e === 1 / 0 || e === -1 / 0 || e !== e || e && e > -1e3 && e < 1e3 || Xr.call(/e/, t))
    return t;
  var n = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
  if (typeof e == "number") {
    var a = e < 0 ? -Yn(-e) : Yn(e);
    if (a !== e) {
      var s = String(a), i = un.call(t, s.length + 1);
      return ge.call(s, n, "$&_") + "." + ge.call(ge.call(i, /([0-9]{3})/g, "$&_"), /_$/, "");
    }
  }
  return ge.call(t, n, "$&_");
}
var zt = tl, er = zt.custom, tr = ta(er) ? er : null, dl = function e(t, n, a, s) {
  var i = n || {};
  if (ve(i, "quoteStyle") && i.quoteStyle !== "single" && i.quoteStyle !== "double")
    throw new TypeError('option "quoteStyle" must be "single" or "double"');
  if (ve(i, "maxStringLength") && (typeof i.maxStringLength == "number" ? i.maxStringLength < 0 && i.maxStringLength !== 1 / 0 : i.maxStringLength !== null))
    throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
  var r = ve(i, "customInspect") ? i.customInspect : !0;
  if (typeof r != "boolean" && r !== "symbol")
    throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
  if (ve(i, "indent") && i.indent !== null && i.indent !== "	" && !(parseInt(i.indent, 10) === i.indent && i.indent > 0))
    throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
  if (ve(i, "numericSeparator") && typeof i.numericSeparator != "boolean")
    throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
  var o = i.numericSeparator;
  if (typeof t > "u")
    return "undefined";
  if (t === null)
    return "null";
  if (typeof t == "boolean")
    return t ? "true" : "false";
  if (typeof t == "string")
    return ra(t, i);
  if (typeof t == "number") {
    if (t === 0)
      return 1 / 0 / t > 0 ? "0" : "-0";
    var l = String(t);
    return o ? Zn(t, l) : l;
  }
  if (typeof t == "bigint") {
    var c = String(t) + "n";
    return o ? Zn(t, c) : c;
  }
  var u = typeof i.depth > "u" ? 5 : i.depth;
  if (typeof a > "u" && (a = 0), a >= u && u > 0 && typeof t == "object")
    return Dt(t) ? "[Array]" : "[Object]";
  var f = Cl(i, a);
  if (typeof s > "u")
    s = [];
  else if (na(s, t) >= 0)
    return "[Circular]";
  function d(I, z, B) {
    if (z && (s = ul.call(s), s.push(z)), B) {
      var D = {
        depth: i.depth
      };
      return ve(i, "quoteStyle") && (D.quoteStyle = i.quoteStyle), e(I, D, a + 1, s);
    }
    return e(I, i, a + 1, s);
  }
  if (typeof t == "function" && !nr(t)) {
    var m = xl(t), h = Ke(t, d);
    return "[Function" + (m ? ": " + m : " (anonymous)") + "]" + (h.length > 0 ? " { " + ue.call(h, ", ") + " }" : "");
  }
  if (ta(t)) {
    var v = Fe ? ge.call(String(t), /^(Symbol\(.*\))_[^)]*$/, "$1") : Vt.call(t);
    return typeof t == "object" && !Fe ? Ue(v) : v;
  }
  if (Nl(t)) {
    for (var g = "<" + Qn.call(String(t.nodeName)), b = t.attributes || [], y = 0; y < b.length; y++)
      g += " " + b[y].name + "=" + ea(pl(b[y].value), "double", i);
    return g += ">", t.childNodes && t.childNodes.length && (g += "..."), g += "</" + Qn.call(String(t.nodeName)) + ">", g;
  }
  if (Dt(t)) {
    if (t.length === 0)
      return "[]";
    var x = Ke(t, d);
    return f && !Ol(x) ? "[" + Jt(x, f) + "]" : "[ " + ue.call(x, ", ") + " ]";
  }
  if (ml(t)) {
    var k = Ke(t, d);
    return !("cause" in Error.prototype) && "cause" in t && !Zr.call(t, "cause") ? "{ [" + String(t) + "] " + ue.call(Kn.call("[cause]: " + d(t.cause), k), ", ") + " }" : k.length === 0 ? "[" + String(t) + "]" : "{ [" + String(t) + "] " + ue.call(k, ", ") + " }";
  }
  if (typeof t == "object" && r) {
    if (tr && typeof t[tr] == "function" && zt)
      return zt(t, { depth: u - a });
    if (r !== "symbol" && typeof t.inspect == "function")
      return t.inspect();
  }
  if (kl(t)) {
    var S = [];
    return Jn && Jn.call(t, function(I, z) {
      S.push(d(z, t, !0) + " => " + d(I, t));
    }), rr("Map", dt.call(t), S, f);
  }
  if (wl(t)) {
    var j = [];
    return Wn && Wn.call(t, function(I) {
      j.push(d(I, t));
    }), rr("Set", pt.call(t), j, f);
  }
  if ($l(t))
    return Rt("WeakMap");
  if (jl(t))
    return Rt("WeakSet");
  if (Sl(t))
    return Rt("WeakRef");
  if (yl(t))
    return Ue(d(Number(t)));
  if (gl(t))
    return Ue(d(Bt.call(t)));
  if (vl(t))
    return Ue(il.call(t));
  if (hl(t))
    return Ue(d(String(t)));
  if (typeof window < "u" && t === window)
    return "{ [object Window] }";
  if (typeof globalThis < "u" && t === globalThis || typeof Me < "u" && t === Me)
    return "{ [object globalThis] }";
  if (!fl(t) && !nr(t)) {
    var R = Ke(t, d), E = Xn ? Xn(t) === Object.prototype : t instanceof Object || t.constructor === Object, A = t instanceof Object ? "" : "null prototype", H = !E && ee && Object(t) === t && ee in t ? un.call(be(t), 8, -1) : A ? "Object" : "", $ = E || typeof t.constructor != "function" ? "" : t.constructor.name ? t.constructor.name + " " : "", L = $ + (H || A ? "[" + ue.call(Kn.call([], H || [], A || []), ": ") + "] " : "");
    return R.length === 0 ? L + "{}" : f ? L + "{" + Jt(R, f) + "}" : L + "{ " + ue.call(R, ", ") + " }";
  }
  return String(t);
};
function ea(e, t, n) {
  var a = (n.quoteStyle || t) === "double" ? '"' : "'";
  return a + e + a;
}
function pl(e) {
  return ge.call(String(e), /"/g, "&quot;");
}
function Dt(e) {
  return be(e) === "[object Array]" && (!ee || !(typeof e == "object" && ee in e));
}
function fl(e) {
  return be(e) === "[object Date]" && (!ee || !(typeof e == "object" && ee in e));
}
function nr(e) {
  return be(e) === "[object RegExp]" && (!ee || !(typeof e == "object" && ee in e));
}
function ml(e) {
  return be(e) === "[object Error]" && (!ee || !(typeof e == "object" && ee in e));
}
function hl(e) {
  return be(e) === "[object String]" && (!ee || !(typeof e == "object" && ee in e));
}
function yl(e) {
  return be(e) === "[object Number]" && (!ee || !(typeof e == "object" && ee in e));
}
function vl(e) {
  return be(e) === "[object Boolean]" && (!ee || !(typeof e == "object" && ee in e));
}
function ta(e) {
  if (Fe)
    return e && typeof e == "object" && e instanceof Symbol;
  if (typeof e == "symbol")
    return !0;
  if (!e || typeof e != "object" || !Vt)
    return !1;
  try {
    return Vt.call(e), !0;
  } catch {
  }
  return !1;
}
function gl(e) {
  if (!e || typeof e != "object" || !Bt)
    return !1;
  try {
    return Bt.call(e), !0;
  } catch {
  }
  return !1;
}
var bl = Object.prototype.hasOwnProperty || function(e) {
  return e in this;
};
function ve(e, t) {
  return bl.call(e, t);
}
function be(e) {
  return ol.call(e);
}
function xl(e) {
  if (e.name)
    return e.name;
  var t = ll.call(sl.call(e), /^function\s*([\w$]+)/);
  return t ? t[1] : null;
}
function na(e, t) {
  if (e.indexOf)
    return e.indexOf(t);
  for (var n = 0, a = e.length; n < a; n++)
    if (e[n] === t)
      return n;
  return -1;
}
function kl(e) {
  if (!dt || !e || typeof e != "object")
    return !1;
  try {
    dt.call(e);
    try {
      pt.call(e);
    } catch {
      return !0;
    }
    return e instanceof Map;
  } catch {
  }
  return !1;
}
function $l(e) {
  if (!He || !e || typeof e != "object")
    return !1;
  try {
    He.call(e, He);
    try {
      Be.call(e, Be);
    } catch {
      return !0;
    }
    return e instanceof WeakMap;
  } catch {
  }
  return !1;
}
function Sl(e) {
  if (!Gn || !e || typeof e != "object")
    return !1;
  try {
    return Gn.call(e), !0;
  } catch {
  }
  return !1;
}
function wl(e) {
  if (!pt || !e || typeof e != "object")
    return !1;
  try {
    pt.call(e);
    try {
      dt.call(e);
    } catch {
      return !0;
    }
    return e instanceof Set;
  } catch {
  }
  return !1;
}
function jl(e) {
  if (!Be || !e || typeof e != "object")
    return !1;
  try {
    Be.call(e, Be);
    try {
      He.call(e, He);
    } catch {
      return !0;
    }
    return e instanceof WeakSet;
  } catch {
  }
  return !1;
}
function Nl(e) {
  return !e || typeof e != "object" ? !1 : typeof HTMLElement < "u" && e instanceof HTMLElement ? !0 : typeof e.nodeName == "string" && typeof e.getAttribute == "function";
}
function ra(e, t) {
  if (e.length > t.maxStringLength) {
    var n = e.length - t.maxStringLength, a = "... " + n + " more character" + (n > 1 ? "s" : "");
    return ra(un.call(e, 0, t.maxStringLength), t) + a;
  }
  var s = ge.call(ge.call(e, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, Tl);
  return ea(s, "single", t);
}
function Tl(e) {
  var t = e.charCodeAt(0), n = {
    8: "b",
    9: "t",
    10: "n",
    12: "f",
    13: "r"
  }[t];
  return n ? "\\" + n : "\\x" + (t < 16 ? "0" : "") + cl.call(t.toString(16));
}
function Ue(e) {
  return "Object(" + e + ")";
}
function Rt(e) {
  return e + " { ? }";
}
function rr(e, t, n, a) {
  var s = a ? Jt(n, a) : ue.call(n, ", ");
  return e + " (" + t + ") {" + s + "}";
}
function Ol(e) {
  for (var t = 0; t < e.length; t++)
    if (na(e[t], `
`) >= 0)
      return !1;
  return !0;
}
function Cl(e, t) {
  var n;
  if (e.indent === "	")
    n = "	";
  else if (typeof e.indent == "number" && e.indent > 0)
    n = ue.call(Array(e.indent + 1), " ");
  else
    return null;
  return {
    base: n,
    prev: ue.call(Array(t + 1), n)
  };
}
function Jt(e, t) {
  if (e.length === 0)
    return "";
  var n = `
` + t.prev + t.base;
  return n + ue.call(e, "," + n) + `
` + t.prev;
}
function Ke(e, t) {
  var n = Dt(e), a = [];
  if (n) {
    a.length = e.length;
    for (var s = 0; s < e.length; s++)
      a[s] = ve(e, s) ? t(e[s], e) : "";
  }
  var i = typeof Et == "function" ? Et(e) : [], r;
  if (Fe) {
    r = {};
    for (var o = 0; o < i.length; o++)
      r["$" + i[o]] = i[o];
  }
  for (var l in e)
    ve(e, l) && (n && String(Number(l)) === l && l < e.length || Fe && r["$" + l] instanceof Symbol || (Xr.call(/[^\w$]/, l) ? a.push(t(l, e) + ": " + t(e[l], e)) : a.push(l + ": " + t(e[l], e))));
  if (typeof Et == "function")
    for (var c = 0; c < i.length; c++)
      Zr.call(e, i[c]) && a.push("[" + t(i[c]) + "]: " + t(e[i[c]], e));
  return a;
}
var aa = _e, Le = Xs, Pl = dl, El = Ge, Ye = aa("%WeakMap%", !0), Xe = aa("%Map%", !0), Rl = Le("WeakMap.prototype.get", !0), Al = Le("WeakMap.prototype.set", !0), ql = Le("WeakMap.prototype.has", !0), Fl = Le("Map.prototype.get", !0), Il = Le("Map.prototype.set", !0), _l = Le("Map.prototype.has", !0), dn = function(e, t) {
  for (var n = e, a; (a = n.next) !== null; n = a)
    if (a.key === t)
      return n.next = a.next, a.next = /** @type {NonNullable<typeof list.next>} */
      e.next, e.next = a, a;
}, Ll = function(e, t) {
  var n = dn(e, t);
  return n && n.value;
}, Ul = function(e, t, n) {
  var a = dn(e, t);
  a ? a.value = n : e.next = /** @type {import('.').ListNode<typeof value>} */
  {
    // eslint-disable-line no-param-reassign, no-extra-parens
    key: t,
    next: e.next,
    value: n
  };
}, Ml = function(e, t) {
  return !!dn(e, t);
}, Hl = function() {
  var t, n, a, s = {
    assert: function(i) {
      if (!s.has(i))
        throw new El("Side channel does not contain " + Pl(i));
    },
    get: function(i) {
      if (Ye && i && (typeof i == "object" || typeof i == "function")) {
        if (t)
          return Rl(t, i);
      } else if (Xe) {
        if (n)
          return Fl(n, i);
      } else if (a)
        return Ll(a, i);
    },
    has: function(i) {
      if (Ye && i && (typeof i == "object" || typeof i == "function")) {
        if (t)
          return ql(t, i);
      } else if (Xe) {
        if (n)
          return _l(n, i);
      } else if (a)
        return Ml(a, i);
      return !1;
    },
    set: function(i, r) {
      Ye && i && (typeof i == "object" || typeof i == "function") ? (t || (t = new Ye()), Al(t, i, r)) : Xe ? (n || (n = new Xe()), Il(n, i, r)) : (a || (a = { key: {}, next: null }), Ul(a, i, r));
    }
  };
  return s;
}, Bl = String.prototype.replace, Vl = /%20/g, At = {
  RFC1738: "RFC1738",
  RFC3986: "RFC3986"
}, pn = {
  default: At.RFC3986,
  formatters: {
    RFC1738: function(e) {
      return Bl.call(e, Vl, "+");
    },
    RFC3986: function(e) {
      return String(e);
    }
  },
  RFC1738: At.RFC1738,
  RFC3986: At.RFC3986
}, zl = pn, qt = Object.prototype.hasOwnProperty, ke = Array.isArray, le = function() {
  for (var e = [], t = 0; t < 256; ++t)
    e.push("%" + ((t < 16 ? "0" : "") + t.toString(16)).toUpperCase());
  return e;
}(), Dl = function(t) {
  for (; t.length > 1; ) {
    var n = t.pop(), a = n.obj[n.prop];
    if (ke(a)) {
      for (var s = [], i = 0; i < a.length; ++i)
        typeof a[i] < "u" && s.push(a[i]);
      n.obj[n.prop] = s;
    }
  }
}, ia = function(t, n) {
  for (var a = n && n.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, s = 0; s < t.length; ++s)
    typeof t[s] < "u" && (a[s] = t[s]);
  return a;
}, Jl = function e(t, n, a) {
  if (!n)
    return t;
  if (typeof n != "object") {
    if (ke(t))
      t.push(n);
    else if (t && typeof t == "object")
      (a && (a.plainObjects || a.allowPrototypes) || !qt.call(Object.prototype, n)) && (t[n] = !0);
    else
      return [t, n];
    return t;
  }
  if (!t || typeof t != "object")
    return [t].concat(n);
  var s = t;
  return ke(t) && !ke(n) && (s = ia(t, a)), ke(t) && ke(n) ? (n.forEach(function(i, r) {
    if (qt.call(t, r)) {
      var o = t[r];
      o && typeof o == "object" && i && typeof i == "object" ? t[r] = e(o, i, a) : t.push(i);
    } else
      t[r] = i;
  }), t) : Object.keys(n).reduce(function(i, r) {
    var o = n[r];
    return qt.call(i, r) ? i[r] = e(i[r], o, a) : i[r] = o, i;
  }, s);
}, Wl = function(t, n) {
  return Object.keys(n).reduce(function(a, s) {
    return a[s] = n[s], a;
  }, t);
}, Gl = function(e, t, n) {
  var a = e.replace(/\+/g, " ");
  if (n === "iso-8859-1")
    return a.replace(/%[0-9a-f]{2}/gi, unescape);
  try {
    return decodeURIComponent(a);
  } catch {
    return a;
  }
}, Ft = 1024, Ql = function(t, n, a, s, i) {
  if (t.length === 0)
    return t;
  var r = t;
  if (typeof t == "symbol" ? r = Symbol.prototype.toString.call(t) : typeof t != "string" && (r = String(t)), a === "iso-8859-1")
    return escape(r).replace(/%u[0-9a-f]{4}/gi, function(m) {
      return "%26%23" + parseInt(m.slice(2), 16) + "%3B";
    });
  for (var o = "", l = 0; l < r.length; l += Ft) {
    for (var c = r.length >= Ft ? r.slice(l, l + Ft) : r, u = [], f = 0; f < c.length; ++f) {
      var d = c.charCodeAt(f);
      if (d === 45 || d === 46 || d === 95 || d === 126 || d >= 48 && d <= 57 || d >= 65 && d <= 90 || d >= 97 && d <= 122 || i === zl.RFC1738 && (d === 40 || d === 41)) {
        u[u.length] = c.charAt(f);
        continue;
      }
      if (d < 128) {
        u[u.length] = le[d];
        continue;
      }
      if (d < 2048) {
        u[u.length] = le[192 | d >> 6] + le[128 | d & 63];
        continue;
      }
      if (d < 55296 || d >= 57344) {
        u[u.length] = le[224 | d >> 12] + le[128 | d >> 6 & 63] + le[128 | d & 63];
        continue;
      }
      f += 1, d = 65536 + ((d & 1023) << 10 | c.charCodeAt(f) & 1023), u[u.length] = le[240 | d >> 18] + le[128 | d >> 12 & 63] + le[128 | d >> 6 & 63] + le[128 | d & 63];
    }
    o += u.join("");
  }
  return o;
}, Kl = function(t) {
  for (var n = [{ obj: { o: t }, prop: "o" }], a = [], s = 0; s < n.length; ++s)
    for (var i = n[s], r = i.obj[i.prop], o = Object.keys(r), l = 0; l < o.length; ++l) {
      var c = o[l], u = r[c];
      typeof u == "object" && u !== null && a.indexOf(u) === -1 && (n.push({ obj: r, prop: c }), a.push(u));
    }
  return Dl(n), t;
}, Yl = function(t) {
  return Object.prototype.toString.call(t) === "[object RegExp]";
}, Xl = function(t) {
  return !t || typeof t != "object" ? !1 : !!(t.constructor && t.constructor.isBuffer && t.constructor.isBuffer(t));
}, Zl = function(t, n) {
  return [].concat(t, n);
}, ec = function(t, n) {
  if (ke(t)) {
    for (var a = [], s = 0; s < t.length; s += 1)
      a.push(n(t[s]));
    return a;
  }
  return n(t);
}, oa = {
  arrayToObject: ia,
  assign: Wl,
  combine: Zl,
  compact: Kl,
  decode: Gl,
  encode: Ql,
  isBuffer: Xl,
  isRegExp: Yl,
  maybeMap: ec,
  merge: Jl
}, sa = Hl, rt = oa, Ve = pn, tc = Object.prototype.hasOwnProperty, la = {
  brackets: function(t) {
    return t + "[]";
  },
  comma: "comma",
  indices: function(t, n) {
    return t + "[" + n + "]";
  },
  repeat: function(t) {
    return t;
  }
}, ce = Array.isArray, nc = Array.prototype.push, ca = function(e, t) {
  nc.apply(e, ce(t) ? t : [t]);
}, rc = Date.prototype.toISOString, ar = Ve.default, J = {
  addQueryPrefix: !1,
  allowDots: !1,
  allowEmptyArrays: !1,
  arrayFormat: "indices",
  charset: "utf-8",
  charsetSentinel: !1,
  delimiter: "&",
  encode: !0,
  encodeDotInKeys: !1,
  encoder: rt.encode,
  encodeValuesOnly: !1,
  format: ar,
  formatter: Ve.formatters[ar],
  // deprecated
  indices: !1,
  serializeDate: function(t) {
    return rc.call(t);
  },
  skipNulls: !1,
  strictNullHandling: !1
}, ac = function(t) {
  return typeof t == "string" || typeof t == "number" || typeof t == "boolean" || typeof t == "symbol" || typeof t == "bigint";
}, It = {}, ic = function e(t, n, a, s, i, r, o, l, c, u, f, d, m, h, v, g, b, y) {
  for (var x = t, k = y, S = 0, j = !1; (k = k.get(It)) !== void 0 && !j; ) {
    var R = k.get(t);
    if (S += 1, typeof R < "u") {
      if (R === S)
        throw new RangeError("Cyclic object value");
      j = !0;
    }
    typeof k.get(It) > "u" && (S = 0);
  }
  if (typeof u == "function" ? x = u(n, x) : x instanceof Date ? x = m(x) : a === "comma" && ce(x) && (x = rt.maybeMap(x, function(w) {
    return w instanceof Date ? m(w) : w;
  })), x === null) {
    if (r)
      return c && !g ? c(n, J.encoder, b, "key", h) : n;
    x = "";
  }
  if (ac(x) || rt.isBuffer(x)) {
    if (c) {
      var E = g ? n : c(n, J.encoder, b, "key", h);
      return [v(E) + "=" + v(c(x, J.encoder, b, "value", h))];
    }
    return [v(n) + "=" + v(String(x))];
  }
  var A = [];
  if (typeof x > "u")
    return A;
  var H;
  if (a === "comma" && ce(x))
    g && c && (x = rt.maybeMap(x, c)), H = [{ value: x.length > 0 ? x.join(",") || null : void 0 }];
  else if (ce(u))
    H = u;
  else {
    var $ = Object.keys(x);
    H = f ? $.sort(f) : $;
  }
  var L = l ? n.replace(/\./g, "%2E") : n, I = s && ce(x) && x.length === 1 ? L + "[]" : L;
  if (i && ce(x) && x.length === 0)
    return I + "[]";
  for (var z = 0; z < H.length; ++z) {
    var B = H[z], D = typeof B == "object" && typeof B.value < "u" ? B.value : x[B];
    if (!(o && D === null)) {
      var _ = d && l ? B.replace(/\./g, "%2E") : B, he = ce(x) ? typeof a == "function" ? a(I, _) : I : I + (d ? "." + _ : "[" + _ + "]");
      y.set(t, S);
      var pe = sa();
      pe.set(It, y), ca(A, e(
        D,
        he,
        a,
        s,
        i,
        r,
        o,
        l,
        a === "comma" && g && ce(x) ? null : c,
        u,
        f,
        d,
        m,
        h,
        v,
        g,
        b,
        pe
      ));
    }
  }
  return A;
}, oc = function(t) {
  if (!t)
    return J;
  if (typeof t.allowEmptyArrays < "u" && typeof t.allowEmptyArrays != "boolean")
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  if (typeof t.encodeDotInKeys < "u" && typeof t.encodeDotInKeys != "boolean")
    throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
  if (t.encoder !== null && typeof t.encoder < "u" && typeof t.encoder != "function")
    throw new TypeError("Encoder has to be a function.");
  var n = t.charset || J.charset;
  if (typeof t.charset < "u" && t.charset !== "utf-8" && t.charset !== "iso-8859-1")
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  var a = Ve.default;
  if (typeof t.format < "u") {
    if (!tc.call(Ve.formatters, t.format))
      throw new TypeError("Unknown format option provided.");
    a = t.format;
  }
  var s = Ve.formatters[a], i = J.filter;
  (typeof t.filter == "function" || ce(t.filter)) && (i = t.filter);
  var r;
  if (t.arrayFormat in la ? r = t.arrayFormat : "indices" in t ? r = t.indices ? "indices" : "repeat" : r = J.arrayFormat, "commaRoundTrip" in t && typeof t.commaRoundTrip != "boolean")
    throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
  var o = typeof t.allowDots > "u" ? t.encodeDotInKeys === !0 ? !0 : J.allowDots : !!t.allowDots;
  return {
    addQueryPrefix: typeof t.addQueryPrefix == "boolean" ? t.addQueryPrefix : J.addQueryPrefix,
    allowDots: o,
    allowEmptyArrays: typeof t.allowEmptyArrays == "boolean" ? !!t.allowEmptyArrays : J.allowEmptyArrays,
    arrayFormat: r,
    charset: n,
    charsetSentinel: typeof t.charsetSentinel == "boolean" ? t.charsetSentinel : J.charsetSentinel,
    commaRoundTrip: t.commaRoundTrip,
    delimiter: typeof t.delimiter > "u" ? J.delimiter : t.delimiter,
    encode: typeof t.encode == "boolean" ? t.encode : J.encode,
    encodeDotInKeys: typeof t.encodeDotInKeys == "boolean" ? t.encodeDotInKeys : J.encodeDotInKeys,
    encoder: typeof t.encoder == "function" ? t.encoder : J.encoder,
    encodeValuesOnly: typeof t.encodeValuesOnly == "boolean" ? t.encodeValuesOnly : J.encodeValuesOnly,
    filter: i,
    format: a,
    formatter: s,
    serializeDate: typeof t.serializeDate == "function" ? t.serializeDate : J.serializeDate,
    skipNulls: typeof t.skipNulls == "boolean" ? t.skipNulls : J.skipNulls,
    sort: typeof t.sort == "function" ? t.sort : null,
    strictNullHandling: typeof t.strictNullHandling == "boolean" ? t.strictNullHandling : J.strictNullHandling
  };
}, sc = function(e, t) {
  var n = e, a = oc(t), s, i;
  typeof a.filter == "function" ? (i = a.filter, n = i("", n)) : ce(a.filter) && (i = a.filter, s = i);
  var r = [];
  if (typeof n != "object" || n === null)
    return "";
  var o = la[a.arrayFormat], l = o === "comma" && a.commaRoundTrip;
  s || (s = Object.keys(n)), a.sort && s.sort(a.sort);
  for (var c = sa(), u = 0; u < s.length; ++u) {
    var f = s[u];
    a.skipNulls && n[f] === null || ca(r, ic(
      n[f],
      f,
      o,
      l,
      a.allowEmptyArrays,
      a.strictNullHandling,
      a.skipNulls,
      a.encodeDotInKeys,
      a.encode ? a.encoder : null,
      a.filter,
      a.sort,
      a.allowDots,
      a.serializeDate,
      a.format,
      a.formatter,
      a.encodeValuesOnly,
      a.charset,
      c
    ));
  }
  var d = r.join(a.delimiter), m = a.addQueryPrefix === !0 ? "?" : "";
  return a.charsetSentinel && (a.charset === "iso-8859-1" ? m += "utf8=%26%2310003%3B&" : m += "utf8=%E2%9C%93&"), d.length > 0 ? m + d : "";
}, Ie = oa, Wt = Object.prototype.hasOwnProperty, lc = Array.isArray, M = {
  allowDots: !1,
  allowEmptyArrays: !1,
  allowPrototypes: !1,
  allowSparse: !1,
  arrayLimit: 20,
  charset: "utf-8",
  charsetSentinel: !1,
  comma: !1,
  decodeDotInKeys: !1,
  decoder: Ie.decode,
  delimiter: "&",
  depth: 5,
  duplicates: "combine",
  ignoreQueryPrefix: !1,
  interpretNumericEntities: !1,
  parameterLimit: 1e3,
  parseArrays: !0,
  plainObjects: !1,
  strictDepth: !1,
  strictNullHandling: !1
}, cc = function(e) {
  return e.replace(/&#(\d+);/g, function(t, n) {
    return String.fromCharCode(parseInt(n, 10));
  });
}, ua = function(e, t) {
  return e && typeof e == "string" && t.comma && e.indexOf(",") > -1 ? e.split(",") : e;
}, uc = "utf8=%26%2310003%3B", dc = "utf8=%E2%9C%93", pc = function(t, n) {
  var a = { __proto__: null }, s = n.ignoreQueryPrefix ? t.replace(/^\?/, "") : t;
  s = s.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  var i = n.parameterLimit === 1 / 0 ? void 0 : n.parameterLimit, r = s.split(n.delimiter, i), o = -1, l, c = n.charset;
  if (n.charsetSentinel)
    for (l = 0; l < r.length; ++l)
      r[l].indexOf("utf8=") === 0 && (r[l] === dc ? c = "utf-8" : r[l] === uc && (c = "iso-8859-1"), o = l, l = r.length);
  for (l = 0; l < r.length; ++l)
    if (l !== o) {
      var u = r[l], f = u.indexOf("]="), d = f === -1 ? u.indexOf("=") : f + 1, m, h;
      d === -1 ? (m = n.decoder(u, M.decoder, c, "key"), h = n.strictNullHandling ? null : "") : (m = n.decoder(u.slice(0, d), M.decoder, c, "key"), h = Ie.maybeMap(
        ua(u.slice(d + 1), n),
        function(g) {
          return n.decoder(g, M.decoder, c, "value");
        }
      )), h && n.interpretNumericEntities && c === "iso-8859-1" && (h = cc(h)), u.indexOf("[]=") > -1 && (h = lc(h) ? [h] : h);
      var v = Wt.call(a, m);
      v && n.duplicates === "combine" ? a[m] = Ie.combine(a[m], h) : (!v || n.duplicates === "last") && (a[m] = h);
    }
  return a;
}, fc = function(e, t, n, a) {
  for (var s = a ? t : ua(t, n), i = e.length - 1; i >= 0; --i) {
    var r, o = e[i];
    if (o === "[]" && n.parseArrays)
      r = n.allowEmptyArrays && (s === "" || n.strictNullHandling && s === null) ? [] : [].concat(s);
    else {
      r = n.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var l = o.charAt(0) === "[" && o.charAt(o.length - 1) === "]" ? o.slice(1, -1) : o, c = n.decodeDotInKeys ? l.replace(/%2E/g, ".") : l, u = parseInt(c, 10);
      !n.parseArrays && c === "" ? r = { 0: s } : !isNaN(u) && o !== c && String(u) === c && u >= 0 && n.parseArrays && u <= n.arrayLimit ? (r = [], r[u] = s) : c !== "__proto__" && (r[c] = s);
    }
    s = r;
  }
  return s;
}, mc = function(t, n, a, s) {
  if (t) {
    var i = a.allowDots ? t.replace(/\.([^.[]+)/g, "[$1]") : t, r = /(\[[^[\]]*])/, o = /(\[[^[\]]*])/g, l = a.depth > 0 && r.exec(i), c = l ? i.slice(0, l.index) : i, u = [];
    if (c) {
      if (!a.plainObjects && Wt.call(Object.prototype, c) && !a.allowPrototypes)
        return;
      u.push(c);
    }
    for (var f = 0; a.depth > 0 && (l = o.exec(i)) !== null && f < a.depth; ) {
      if (f += 1, !a.plainObjects && Wt.call(Object.prototype, l[1].slice(1, -1)) && !a.allowPrototypes)
        return;
      u.push(l[1]);
    }
    if (l) {
      if (a.strictDepth === !0)
        throw new RangeError("Input depth exceeded depth option of " + a.depth + " and strictDepth is true");
      u.push("[" + i.slice(l.index) + "]");
    }
    return fc(u, n, a, s);
  }
}, hc = function(t) {
  if (!t)
    return M;
  if (typeof t.allowEmptyArrays < "u" && typeof t.allowEmptyArrays != "boolean")
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  if (typeof t.decodeDotInKeys < "u" && typeof t.decodeDotInKeys != "boolean")
    throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
  if (t.decoder !== null && typeof t.decoder < "u" && typeof t.decoder != "function")
    throw new TypeError("Decoder has to be a function.");
  if (typeof t.charset < "u" && t.charset !== "utf-8" && t.charset !== "iso-8859-1")
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  var n = typeof t.charset > "u" ? M.charset : t.charset, a = typeof t.duplicates > "u" ? M.duplicates : t.duplicates;
  if (a !== "combine" && a !== "first" && a !== "last")
    throw new TypeError("The duplicates option must be either combine, first, or last");
  var s = typeof t.allowDots > "u" ? t.decodeDotInKeys === !0 ? !0 : M.allowDots : !!t.allowDots;
  return {
    allowDots: s,
    allowEmptyArrays: typeof t.allowEmptyArrays == "boolean" ? !!t.allowEmptyArrays : M.allowEmptyArrays,
    allowPrototypes: typeof t.allowPrototypes == "boolean" ? t.allowPrototypes : M.allowPrototypes,
    allowSparse: typeof t.allowSparse == "boolean" ? t.allowSparse : M.allowSparse,
    arrayLimit: typeof t.arrayLimit == "number" ? t.arrayLimit : M.arrayLimit,
    charset: n,
    charsetSentinel: typeof t.charsetSentinel == "boolean" ? t.charsetSentinel : M.charsetSentinel,
    comma: typeof t.comma == "boolean" ? t.comma : M.comma,
    decodeDotInKeys: typeof t.decodeDotInKeys == "boolean" ? t.decodeDotInKeys : M.decodeDotInKeys,
    decoder: typeof t.decoder == "function" ? t.decoder : M.decoder,
    delimiter: typeof t.delimiter == "string" || Ie.isRegExp(t.delimiter) ? t.delimiter : M.delimiter,
    // eslint-disable-next-line no-implicit-coercion, no-extra-parens
    depth: typeof t.depth == "number" || t.depth === !1 ? +t.depth : M.depth,
    duplicates: a,
    ignoreQueryPrefix: t.ignoreQueryPrefix === !0,
    interpretNumericEntities: typeof t.interpretNumericEntities == "boolean" ? t.interpretNumericEntities : M.interpretNumericEntities,
    parameterLimit: typeof t.parameterLimit == "number" ? t.parameterLimit : M.parameterLimit,
    parseArrays: t.parseArrays !== !1,
    plainObjects: typeof t.plainObjects == "boolean" ? t.plainObjects : M.plainObjects,
    strictDepth: typeof t.strictDepth == "boolean" ? !!t.strictDepth : M.strictDepth,
    strictNullHandling: typeof t.strictNullHandling == "boolean" ? t.strictNullHandling : M.strictNullHandling
  };
}, yc = function(e, t) {
  var n = hc(t);
  if (e === "" || e === null || typeof e > "u")
    return n.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  for (var a = typeof e == "string" ? pc(e, n) : e, s = n.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, i = Object.keys(a), r = 0; r < i.length; ++r) {
    var o = i[r], l = mc(o, a[o], n, typeof e == "string");
    s = Ie.merge(s, l, n);
  }
  return n.allowSparse === !0 ? s : Ie.compact(s);
}, vc = sc, gc = yc, bc = pn, at = {
  formats: bc,
  parse: gc,
  stringify: vc
}, xc = ns;
function oe() {
  this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
}
var kc = /^([a-z0-9.+-]+:)/i, $c = /:[0-9]*$/, Sc = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/, wc = [
  "<",
  ">",
  '"',
  "`",
  " ",
  "\r",
  `
`,
  "	"
], jc = [
  "{",
  "}",
  "|",
  "\\",
  "^",
  "`"
].concat(wc), Gt = ["'"].concat(jc), ir = [
  "%",
  "/",
  "?",
  ";",
  "#"
].concat(Gt), or = [
  "/",
  "?",
  "#"
], Nc = 255, sr = /^[+a-z0-9A-Z_-]{0,63}$/, Tc = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, Oc = {
  javascript: !0,
  "javascript:": !0
}, Qt = {
  javascript: !0,
  "javascript:": !0
}, Ae = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
}, Kt = at;
function fn(e, t, n) {
  if (e && typeof e == "object" && e instanceof oe)
    return e;
  var a = new oe();
  return a.parse(e, t, n), a;
}
oe.prototype.parse = function(e, t, n) {
  if (typeof e != "string")
    throw new TypeError("Parameter 'url' must be a string, not " + typeof e);
  var a = e.indexOf("?"), s = a !== -1 && a < e.indexOf("#") ? "?" : "#", i = e.split(s), r = /\\/g;
  i[0] = i[0].replace(r, "/"), e = i.join(s);
  var o = e;
  if (o = o.trim(), !n && e.split("#").length === 1) {
    var l = Sc.exec(o);
    if (l)
      return this.path = o, this.href = o, this.pathname = l[1], l[2] ? (this.search = l[2], t ? this.query = Kt.parse(this.search.substr(1)) : this.query = this.search.substr(1)) : t && (this.search = "", this.query = {}), this;
  }
  var c = kc.exec(o);
  if (c) {
    c = c[0];
    var u = c.toLowerCase();
    this.protocol = u, o = o.substr(c.length);
  }
  if (n || c || o.match(/^\/\/[^@/]+@[^@/]+/)) {
    var f = o.substr(0, 2) === "//";
    f && !(c && Qt[c]) && (o = o.substr(2), this.slashes = !0);
  }
  if (!Qt[c] && (f || c && !Ae[c])) {
    for (var d = -1, m = 0; m < or.length; m++) {
      var h = o.indexOf(or[m]);
      h !== -1 && (d === -1 || h < d) && (d = h);
    }
    var v, g;
    d === -1 ? g = o.lastIndexOf("@") : g = o.lastIndexOf("@", d), g !== -1 && (v = o.slice(0, g), o = o.slice(g + 1), this.auth = decodeURIComponent(v)), d = -1;
    for (var m = 0; m < ir.length; m++) {
      var h = o.indexOf(ir[m]);
      h !== -1 && (d === -1 || h < d) && (d = h);
    }
    d === -1 && (d = o.length), this.host = o.slice(0, d), o = o.slice(d), this.parseHost(), this.hostname = this.hostname || "";
    var b = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!b)
      for (var y = this.hostname.split(/\./), m = 0, x = y.length; m < x; m++) {
        var k = y[m];
        if (k && !k.match(sr)) {
          for (var S = "", j = 0, R = k.length; j < R; j++)
            k.charCodeAt(j) > 127 ? S += "x" : S += k[j];
          if (!S.match(sr)) {
            var E = y.slice(0, m), A = y.slice(m + 1), H = k.match(Tc);
            H && (E.push(H[1]), A.unshift(H[2])), A.length && (o = "/" + A.join(".") + o), this.hostname = E.join(".");
            break;
          }
        }
      }
    this.hostname.length > Nc ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), b || (this.hostname = xc.toASCII(this.hostname));
    var $ = this.port ? ":" + this.port : "", L = this.hostname || "";
    this.host = L + $, this.href += this.host, b && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), o[0] !== "/" && (o = "/" + o));
  }
  if (!Oc[u])
    for (var m = 0, x = Gt.length; m < x; m++) {
      var I = Gt[m];
      if (o.indexOf(I) !== -1) {
        var z = encodeURIComponent(I);
        z === I && (z = escape(I)), o = o.split(I).join(z);
      }
    }
  var B = o.indexOf("#");
  B !== -1 && (this.hash = o.substr(B), o = o.slice(0, B));
  var D = o.indexOf("?");
  if (D !== -1 ? (this.search = o.substr(D), this.query = o.substr(D + 1), t && (this.query = Kt.parse(this.query)), o = o.slice(0, D)) : t && (this.search = "", this.query = {}), o && (this.pathname = o), Ae[u] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
    var $ = this.pathname || "", _ = this.search || "";
    this.path = $ + _;
  }
  return this.href = this.format(), this;
};
function Cc(e) {
  return typeof e == "string" && (e = fn(e)), e instanceof oe ? e.format() : oe.prototype.format.call(e);
}
oe.prototype.format = function() {
  var e = this.auth || "";
  e && (e = encodeURIComponent(e), e = e.replace(/%3A/i, ":"), e += "@");
  var t = this.protocol || "", n = this.pathname || "", a = this.hash || "", s = !1, i = "";
  this.host ? s = e + this.host : this.hostname && (s = e + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (s += ":" + this.port)), this.query && typeof this.query == "object" && Object.keys(this.query).length && (i = Kt.stringify(this.query, {
    arrayFormat: "repeat",
    addQueryPrefix: !1
  }));
  var r = this.search || i && "?" + i || "";
  return t && t.substr(-1) !== ":" && (t += ":"), this.slashes || (!t || Ae[t]) && s !== !1 ? (s = "//" + (s || ""), n && n.charAt(0) !== "/" && (n = "/" + n)) : s || (s = ""), a && a.charAt(0) !== "#" && (a = "#" + a), r && r.charAt(0) !== "?" && (r = "?" + r), n = n.replace(/[?#]/g, function(o) {
    return encodeURIComponent(o);
  }), r = r.replace("#", "%23"), t + s + n + r + a;
};
oe.prototype.resolve = function(e) {
  return this.resolveObject(fn(e, !1, !0)).format();
};
oe.prototype.resolveObject = function(e) {
  if (typeof e == "string") {
    var t = new oe();
    t.parse(e, !1, !0), e = t;
  }
  for (var n = new oe(), a = Object.keys(this), s = 0; s < a.length; s++) {
    var i = a[s];
    n[i] = this[i];
  }
  if (n.hash = e.hash, e.href === "")
    return n.href = n.format(), n;
  if (e.slashes && !e.protocol) {
    for (var r = Object.keys(e), o = 0; o < r.length; o++) {
      var l = r[o];
      l !== "protocol" && (n[l] = e[l]);
    }
    return Ae[n.protocol] && n.hostname && !n.pathname && (n.pathname = "/", n.path = n.pathname), n.href = n.format(), n;
  }
  if (e.protocol && e.protocol !== n.protocol) {
    if (!Ae[e.protocol]) {
      for (var c = Object.keys(e), u = 0; u < c.length; u++) {
        var f = c[u];
        n[f] = e[f];
      }
      return n.href = n.format(), n;
    }
    if (n.protocol = e.protocol, !e.host && !Qt[e.protocol]) {
      for (var x = (e.pathname || "").split("/"); x.length && !(e.host = x.shift()); )
        ;
      e.host || (e.host = ""), e.hostname || (e.hostname = ""), x[0] !== "" && x.unshift(""), x.length < 2 && x.unshift(""), n.pathname = x.join("/");
    } else
      n.pathname = e.pathname;
    if (n.search = e.search, n.query = e.query, n.host = e.host || "", n.auth = e.auth, n.hostname = e.hostname || e.host, n.port = e.port, n.pathname || n.search) {
      var d = n.pathname || "", m = n.search || "";
      n.path = d + m;
    }
    return n.slashes = n.slashes || e.slashes, n.href = n.format(), n;
  }
  var h = n.pathname && n.pathname.charAt(0) === "/", v = e.host || e.pathname && e.pathname.charAt(0) === "/", g = v || h || n.host && e.pathname, b = g, y = n.pathname && n.pathname.split("/") || [], x = e.pathname && e.pathname.split("/") || [], k = n.protocol && !Ae[n.protocol];
  if (k && (n.hostname = "", n.port = null, n.host && (y[0] === "" ? y[0] = n.host : y.unshift(n.host)), n.host = "", e.protocol && (e.hostname = null, e.port = null, e.host && (x[0] === "" ? x[0] = e.host : x.unshift(e.host)), e.host = null), g = g && (x[0] === "" || y[0] === "")), v)
    n.host = e.host || e.host === "" ? e.host : n.host, n.hostname = e.hostname || e.hostname === "" ? e.hostname : n.hostname, n.search = e.search, n.query = e.query, y = x;
  else if (x.length)
    y || (y = []), y.pop(), y = y.concat(x), n.search = e.search, n.query = e.query;
  else if (e.search != null) {
    if (k) {
      n.host = y.shift(), n.hostname = n.host;
      var S = n.host && n.host.indexOf("@") > 0 ? n.host.split("@") : !1;
      S && (n.auth = S.shift(), n.hostname = S.shift(), n.host = n.hostname);
    }
    return n.search = e.search, n.query = e.query, (n.pathname !== null || n.search !== null) && (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.href = n.format(), n;
  }
  if (!y.length)
    return n.pathname = null, n.search ? n.path = "/" + n.search : n.path = null, n.href = n.format(), n;
  for (var j = y.slice(-1)[0], R = (n.host || e.host || y.length > 1) && (j === "." || j === "..") || j === "", E = 0, A = y.length; A >= 0; A--)
    j = y[A], j === "." ? y.splice(A, 1) : j === ".." ? (y.splice(A, 1), E++) : E && (y.splice(A, 1), E--);
  if (!g && !b)
    for (; E--; E)
      y.unshift("..");
  g && y[0] !== "" && (!y[0] || y[0].charAt(0) !== "/") && y.unshift(""), R && y.join("/").substr(-1) !== "/" && y.push("");
  var H = y[0] === "" || y[0] && y[0].charAt(0) === "/";
  if (k) {
    n.hostname = H ? "" : y.length ? y.shift() : "", n.host = n.hostname;
    var S = n.host && n.host.indexOf("@") > 0 ? n.host.split("@") : !1;
    S && (n.auth = S.shift(), n.hostname = S.shift(), n.host = n.hostname);
  }
  return g = g || n.host && y.length, g && !H && y.unshift(""), y.length > 0 ? n.pathname = y.join("/") : (n.pathname = null, n.path = null), (n.pathname !== null || n.search !== null) && (n.path = (n.pathname ? n.pathname : "") + (n.search ? n.search : "")), n.auth = e.auth || n.auth, n.slashes = n.slashes || e.slashes, n.href = n.format(), n;
};
oe.prototype.parseHost = function() {
  var e = this.host, t = $c.exec(e);
  t && (t = t[0], t !== ":" && (this.port = t.substr(1)), e = e.substr(0, e.length - t.length)), e && (this.hostname = e);
};
var Pc = fn, lr = Cc, Ec = (e) => typeof e == "object" && "log" in e && typeof e.log == "object" && "entries" in e.log && Array.isArray(e.log.entries), Rc = class {
  constructor(e, t = {}) {
    this.initCalled = !1, this.entries = [], this.requests = [], this.options = {}, this.options = {
      harIsAlreadyEncoded: !1,
      ...t
    }, this.requests = [], Ec(e) ? this.entries = e.log.entries : this.entries = [
      {
        request: e
      }
    ];
  }
  init() {
    return this.initCalled = !0, this.requests = this.entries.map(({ request: e }) => {
      var n;
      const t = {
        bodySize: 0,
        headersSize: 0,
        headers: [],
        cookies: [],
        httpVersion: "HTTP/1.1",
        queryString: [],
        postData: {
          mimeType: ((n = e.postData) == null ? void 0 : n.mimeType) || "application/octet-stream"
        },
        ...e
      };
      return t.postData && !t.postData.mimeType && (t.postData.mimeType = "application/octet-stream"), this.prepare(t, this.options);
    }), this;
  }
  prepare(e, t) {
    var u, f, d;
    const n = {
      ...e,
      fullUrl: "",
      uriObj: {},
      queryObj: {},
      headersObj: {},
      cookiesObj: {},
      allHeaders: {}
    };
    if (n.queryString && n.queryString.length && (n.queryObj = n.queryString.reduce(jn, {})), n.headers && n.headers.length) {
      const m = /^HTTP\/2/;
      n.headersObj = n.headers.reduce((h, { name: v, value: g }) => {
        const b = m.exec(n.httpVersion) ? v.toLocaleLowerCase() : v;
        return {
          ...h,
          [b]: g
        };
      }, {});
    }
    n.cookies && n.cookies.length && (n.cookiesObj = n.cookies.reduceRight(
      (m, { name: h, value: v }) => ({
        ...m,
        [h]: v
      }),
      {}
    ));
    const a = (u = n.cookies) == null ? void 0 : u.map(({ name: m, value: h }) => t.harIsAlreadyEncoded ? `${m}=${h}` : `${encodeURIComponent(m)}=${encodeURIComponent(h)}`);
    switch (a != null && a.length && (n.allHeaders.cookie = a.join("; ")), n.postData.mimeType) {
      case "multipart/mixed":
      case "multipart/related":
      case "multipart/form-data":
      case "multipart/alternative":
        if (n.postData.text = "", n.postData.mimeType = "multipart/form-data", (f = n.postData) != null && f.params) {
          const m = "---011000010111000001101001", h = `${m}--`, v = `\r
`, g = (k) => k.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22"), b = (k) => k.replace(/\r?\n|\r/g, `\r
`), y = [`--${m}`];
          (d = n.postData) == null || d.params.forEach((k, S) => {
            const j = k.name, R = k.value || "", E = k.fileName || null, A = k.contentType || "application/octet-stream";
            E ? (y.push(
              `Content-Disposition: form-data; name="${g(b(j))}"; filename="${E}"`
            ), y.push(`Content-Type: ${A}`)) : y.push(`Content-Disposition: form-data; name="${g(b(j))}"`), y.push(""), y.push(b(R)), S !== n.postData.params.length - 1 && y.push(`--${m}`);
          }), y.push(`--${h}`), n.postData.boundary = m, n.postData.text = y.join(v);
          const x = Z(n.headersObj, "content-type") || "content-type";
          n.headersObj[x] = `multipart/form-data; boundary=${m}`;
        }
        break;
      case "application/x-www-form-urlencoded":
        n.postData.params ? (n.postData.paramsObj = n.postData.params.reduce(jn, {}), n.postData.text = at.stringify(n.postData.paramsObj)) : n.postData.text = "";
        break;
      case "text/json":
      case "text/x-json":
      case "application/json":
      case "application/x-json":
        if (n.postData.mimeType = "application/json", n.postData.text)
          try {
            n.postData.jsonObj = JSON.parse(n.postData.text);
          } catch {
            n.postData.mimeType = "text/plain";
          }
        break;
    }
    const s = {
      ...n.allHeaders,
      ...n.headersObj
    }, i = Pc(n.url, !0, !0);
    n.queryObj = {
      ...n.queryObj,
      ...i.query
    };
    let r;
    t.harIsAlreadyEncoded ? r = at.stringify(n.queryObj, {
      encode: !1,
      indices: !1
    }) : r = at.stringify(n.queryObj, {
      indices: !1
    });
    const o = {
      ...i,
      query: n.queryObj,
      search: r,
      path: r ? `${i.pathname}?${r}` : i.pathname
    }, l = lr({
      ...i,
      query: null,
      search: null
    }), c = lr({
      ...i,
      ...o
    });
    return {
      ...n,
      allHeaders: s,
      fullUrl: c,
      url: l,
      uriObj: o
    };
  }
  convert(e, t, n) {
    this.initCalled || this.init(), !n && t && (n = t);
    const a = ts[e];
    if (!a)
      return !1;
    const { convert: s } = a.clientsById[t || a.info.default];
    return this.requests.map((r) => s(r, n));
  }
};
const da = Ea(
  void 0
), uu = da.Provider, Ac = () => {
  const e = Ra(da);
  if (!e)
    throw new Error("useOasConfig must be used within a OasConfigProvider");
  return e.config;
}, qc = ({
  server: e,
  servers: t,
  operation: n
}) => {
  var r, o, l;
  const a = (r = n.parameters) == null ? void 0 : r.filter((c) => c.in === "header").map((c) => {
    var u, f;
    return {
      name: c.name,
      defaultValue: ((f = (u = c.examples) == null ? void 0 : u.find((d) => d.value)) == null ? void 0 : f.value) ?? ""
    };
  }), s = (o = n.parameters) == null ? void 0 : o.filter((c) => c.in === "query").sort((c, u) => c.required && !u.required ? -1 : 1).map((c) => ({
    name: c.name,
    defaultActive: c.required ?? !1,
    isRequired: c.required ?? !1
  })), i = (l = n.parameters) == null ? void 0 : l.filter((c) => c.in === "path").map((c) => ({ name: c.name }));
  return /* @__PURE__ */ p.jsx(
    Hr,
    {
      server: e,
      servers: t,
      method: n.method,
      url: n.path,
      headers: a,
      queryParams: s,
      pathParams: i
    }
  );
}, mn = ({ children: e, className: t }) => /* @__PURE__ */ p.jsx(
  "div",
  {
    className: F(
      "rounded-lg overflow-hidden border dark:border-transparent",
      t
    ),
    children: e
  }
), hn = ({ children: e, className: t }) => /* @__PURE__ */ p.jsx(
  "div",
  {
    className: F(
      "border-b dark:border-zinc-600 bg-zinc-100 dark:bg-zinc-700 p-2",
      t
    ),
    children: e
  }
), yn = ({ children: e, className: t }) => /* @__PURE__ */ p.jsx(
  "div",
  {
    className: F("bg-zinc-50 dark:bg-zinc-800 overflow-auto p-2", t),
    children: e
  }
), pa = ({ children: e, className: t }) => /* @__PURE__ */ p.jsx(
  "div",
  {
    className: F(
      "border-t dark:border-zinc-600 bg-zinc-100 dark:bg-zinc-700 p-2",
      t
    ),
    children: e
  }
), Fc = (e) => typeof e == "object" && e !== null && !Array.isArray(e), Je = (e, t) => e.example !== void 0 ? e.example : e.default !== void 0 ? e.default : e.examples && Fc(e.examples) ? Object.values(e.examples)[0] : Ic(e);
function Ic(e, t) {
  const n = Object.entries(e.properties ?? {}).concat(
    Object.entries(e.additionalProperties ?? {})
  );
  if (e.type === "object" && n.length > 0) {
    const a = {};
    return n.forEach(([s, i]) => {
      const r = Je(i);
      r !== void 0 && (a[s] = r);
    }), a;
  } else if (e.type === "array" && e.items) {
    const a = Je(e.items);
    return a !== void 0 ? [a] : [];
  }
}
const _c = ({ content: e }) => {
  var t;
  return e.length ? /* @__PURE__ */ p.jsx(p.Fragment, { children: /* @__PURE__ */ p.jsxs(mn, { children: [
    /* @__PURE__ */ p.jsx(hn, { className: "text-xs flex justify-between items-center", children: /* @__PURE__ */ p.jsx("span", { className: "font-mono", children: "Request Body Example" }) }),
    /* @__PURE__ */ p.jsx(yn, { className: "p-0", children: /* @__PURE__ */ p.jsx(
      We,
      {
        language: "json",
        noBackground: !0,
        copyable: !0,
        className: "text-xs max-h-[450px] p-2",
        code: JSON.stringify(
          (t = e.at(0)) != null && t.schema ? Je(e[0].schema) : "",
          null,
          2
        )
      }
    ) })
  ] }) }) : null;
}, Lc = ({
  responses: e,
  selectedResponse: t,
  onSelectResponse: n
}) => {
  var a;
  return /* @__PURE__ */ p.jsx(mn, { children: /* @__PURE__ */ p.jsxs(
    Ur,
    {
      defaultValue: (a = e[0]) == null ? void 0 : a.statusCode,
      value: t,
      onValueChange: (s) => n(s),
      children: [
        /* @__PURE__ */ p.jsxs(hn, { className: "text-xs flex flex-col gap-2 pb-0", children: [
          /* @__PURE__ */ p.jsx("span", { className: "font-mono", children: "Example Responses" }),
          /* @__PURE__ */ p.jsx(en, { className: "flex gap-2", children: e.map((s) => /* @__PURE__ */ p.jsx(
            tn,
            {
              value: s.statusCode,
              className: F(
                "text-xs font-mono px-1.5 py-1 pb-px translate-y-px border-b-2 border-transparent rounded-t cursor-pointer",
                "data-[state=active]:text-primary data-[state=active]:dark:text-inherit data-[state=active]:border-primary",
                "hover:border-accent-foreground/25"
              ),
              children: s.statusCode
            },
            s.statusCode
          )) })
        ] }),
        e.map((s) => {
          var r, o;
          const i = (o = (r = s.content) == null ? void 0 : r[0]) == null ? void 0 : o.schema;
          return /* @__PURE__ */ p.jsxs(nn, { value: s.statusCode, children: [
            /* @__PURE__ */ p.jsx(yn, { className: "p-0", children: i ? /* @__PURE__ */ p.jsx(
              We,
              {
                language: "json",
                noBackground: !0,
                className: "text-xs max-h-[450px] p-2",
                code: JSON.stringify(Je(i), null, 2)
              }
            ) : /* @__PURE__ */ p.jsx("span", { className: "text-muted-foreground font-mono italic text-xs", children: "Empty Response" }) }),
            /* @__PURE__ */ p.jsx(pa, { className: "flex justify-end text-xs", children: s.description })
          ] }, s.statusCode);
        })
      ]
    }
  ) });
}, Uc = (e, t) => {
  let n;
  switch (t) {
    case "shell":
      n = e.convert("shell", "curl");
      break;
    case "js":
      n = e.convert("javascript", "fetch");
      break;
    case "python":
      n = e.convert("python", "requests");
      break;
    case "java":
      n = e.convert("java", "okhttp");
      break;
    case "go":
      n = e.convert("go", "native");
      break;
    case "csharp":
      n = e.convert("csharp", "httpclient");
      break;
    case "kotlin":
      n = e.convert("kotlin", "okhttp");
      break;
    case "objc":
      n = e.convert("objc", "nsurlsession");
      break;
    case "php":
      n = e.convert("php", "http2");
      break;
    case "ruby":
      n = e.convert("ruby");
      break;
    case "swift":
      n = e.convert("swift");
      break;
    default:
      n = e.convert("shell");
      break;
  }
  return n ? n[0] : "";
}, fa = $r(
  /* GraphQL */
  `
  query getServerQuery($input: JSON!, $type: SchemaType!) {
    schema(input: $input, type: $type) {
      url
      servers {
        url
      }
    }
  }
`
), Mc = { suspense: !0 }, Hc = {
  get: me.green,
  post: me.blue,
  put: me.yellow,
  delete: me.red,
  patch: me.purple,
  options: me.indigo,
  head: me.gray,
  trace: me.gray
}, du = ({
  operation: e,
  selectedResponse: t,
  onSelectResponse: n
}) => {
  var h, v, g;
  const a = Ac(), [s] = ci({
    query: fa,
    variables: a,
    context: Mc
  }), i = Hc[e.method.toLocaleLowerCase()] ?? me.gray, [r, o] = Wa(), [, l] = mr(), c = r.get("lang") ?? "shell", u = (h = e.requestBody) == null ? void 0 : h.content, f = e.path.split("/").map((b, y, x) => {
    const S = b.startsWith("{") && b.endsWith("}") || b.startsWith(":") ? b.replace(/[:{}]/g, "") : void 0;
    return (
      // eslint-disable-next-line react/no-array-index-key
      /* @__PURE__ */ p.jsxs(Ze, { children: [
        S ? /* @__PURE__ */ p.jsx(
          rn,
          {
            name: S,
            backgroundOpacity: "0",
            slug: `${e.slug}-${S.toLocaleLowerCase()}`,
            children: b
          }
        ) : b,
        y < x.length - 1 ? "/" : null,
        /* @__PURE__ */ p.jsx("wbr", {})
      ] }, b + y)
    );
  }), { selectedServer: d } = xr(), m = Aa(() => {
    var x, k;
    const b = (x = u == null ? void 0 : u[0]) != null && x.schema ? Je(u[0].schema) : void 0, y = new Rc({
      method: e.method.toLocaleUpperCase(),
      url: (d ?? ((k = s.data) == null ? void 0 : k.schema.url) ?? "") + e.path.replaceAll("{", ":").replaceAll("}", ""),
      postData: b ? {
        text: JSON.stringify(b, null, 2),
        mimeType: "application/json"
      } : {},
      headers: [],
      queryString: [],
      httpVersion: "",
      cookies: [],
      headersSize: 0,
      bodySize: 0
    });
    return Uc(y, c);
  }, [
    d,
    c,
    e.method,
    e.path,
    u
  ]);
  return /* @__PURE__ */ p.jsxs("aside", { className: "flex flex-col overflow-hidden sticky top-[--scroll-padding] gap-4", children: [
    /* @__PURE__ */ p.jsxs(mn, { children: [
      /* @__PURE__ */ p.jsxs(hn, { className: "flex justify-between items-center flex-nowrap py-3 gap-2 text-xs", children: [
        /* @__PURE__ */ p.jsxs("span", { className: "font-mono break-words", children: [
          /* @__PURE__ */ p.jsx("span", { className: F("font-semibold", i), children: e.method.toLocaleUpperCase() }),
          " ",
          f
        ] }),
        /* @__PURE__ */ p.jsx(
          qc,
          {
            server: ((v = s.data) == null ? void 0 : v.schema.url) ?? "",
            servers: ((g = s.data) == null ? void 0 : g.schema.servers.map((b) => b.url)) ?? [],
            operation: e
          }
        )
      ] }),
      /* @__PURE__ */ p.jsx(yn, { className: "max-h-[480px] p-0", children: /* @__PURE__ */ p.jsx(
        We,
        {
          language: c,
          noBackground: !0,
          className: "text-xs p-2",
          code: m
        }
      ) }),
      /* @__PURE__ */ p.jsxs(pa, { className: "flex items-center text-xs gap-2 justify-end py-1", children: [
        /* @__PURE__ */ p.jsx("span", { children: "Show example in" }),
        /* @__PURE__ */ p.jsx(
          Mr,
          {
            className: "self-start max-w-[150px]",
            value: c,
            onChange: (b) => {
              l(() => {
                o((y) => (y.set("lang", b.target.value), y));
              });
            },
            options: [
              { value: "shell", label: "cURL" },
              { value: "js", label: "Javascript" },
              { value: "python", label: "Python" },
              { value: "java", label: "Java" },
              { value: "go", label: "Go" },
              { value: "csharp", label: "C#" },
              { value: "kotlin", label: "Kotlin" },
              { value: "objc", label: "Objective C" },
              { value: "php", label: "PHP" },
              { value: "ruby", label: "Ruby" },
              { value: "swift", label: "Swift" }
            ]
          }
        )
      ] })
    ] }),
    u && /* @__PURE__ */ p.jsx(_c, { content: u }),
    e.responses.length > 0 && /* @__PURE__ */ p.jsx(
      Lc,
      {
        selectedResponse: t,
        onSelectResponse: n,
        responses: e.responses
      }
    )
  ] });
}, Bc = $r(`
  query GetCategories($input: JSON!, $type: SchemaType!) {
    schema(input: $input, type: $type) {
      tags {
        __typename
        name
        operations {
          __typename
          slug
          deprecated
          method
          summary
          operationId
          path
        }
      }
    }
  }
`), Vc = () => {
  const e = Ga(), t = e instanceof Error ? /* @__PURE__ */ p.jsx(We, { code: e.message }) : "An unknown error occurred";
  return /* @__PURE__ */ p.jsx(Ta, { category: "Error", title: "An error occurred", message: t });
}, zc = {
  get: "green",
  post: "blue",
  put: "yellow",
  delete: "red",
  patch: "purple",
  options: "gray",
  head: "gray"
}, pu = (e) => {
  const t = Pa(e.navigationId ?? "/reference"), n = e.server ? new Xa({
    url: e.server,
    exchanges: [Za, ei]
  }) : ba({ useMemoryClient: e.inMemory ?? !1 });
  return {
    getHead: () => {
      if (e.type === "url" && !e.skipPreload)
        return /* @__PURE__ */ p.jsx(
          "link",
          {
            rel: "preload",
            href: e.input,
            as: "fetch",
            crossOrigin: "anonymous"
          }
        );
      if (e.server)
        return /* @__PURE__ */ p.jsx("link", { rel: "preconnect", href: e.server });
    },
    getMdxComponents: () => ({
      OpenPlaygroundButton: ({
        requireAuth: a,
        server: s,
        method: i,
        url: r,
        ...o
      }) => {
        var u;
        const l = Na(), c = ha({
          queryFn: async () => (await n.query(fa, {
            type: e.type,
            input: e.input
          })).data,
          enabled: !s,
          queryKey: ["playground-server"]
        });
        return a && !l.isAuthenticated ? /* @__PURE__ */ p.jsxs(
          je,
          {
            className: "gap-2 items-center",
            variant: "outline",
            onClick: l.login,
            children: [
              "Login to open in Playground ",
              /* @__PURE__ */ p.jsx(va, { size: 16 })
            ]
          }
        ) : /* @__PURE__ */ p.jsx(
          Hr,
          {
            url: r ?? "/",
            method: i ?? "get",
            server: s ?? ((u = c.data) == null ? void 0 : u.schema.url) ?? "https://example.com",
            ...o,
            children: /* @__PURE__ */ p.jsxs(je, { className: "gap-2 items-center", variant: "outline", children: [
              "Open in Playground ",
              /* @__PURE__ */ p.jsx(ga, { size: 16 })
            ] })
          }
        );
      }
    }),
    getSidebar: async (a) => {
      if (!ti({ path: t, end: !1 }, a))
        return [];
      const { data: s } = await n.query(Bc, {
        input: e.input,
        type: e.type
      });
      if (!s) return [];
      const i = s.schema.tags.filter((r) => r.operations.length > 0).map((r) => ({
        type: "category",
        label: r.name || "Other endpoints",
        collapsible: !0,
        collapsed: !1,
        items: r.operations.map((o) => ({
          type: "link",
          label: o.summary ?? o.path,
          href: `#${o.slug}`,
          badge: {
            label: o.method,
            color: zc[o.method.toLowerCase()]
          }
        }))
      }));
      return i.unshift({
        type: "link",
        label: "Overview",
        href: "#description"
      }), i;
    },
    getRoutes: () => [
      {
        async lazy() {
          const { OpenApiRoute: a } = await import("./Route-Dq6zv0Pi.js");
          return {
            element: /* @__PURE__ */ p.jsx(a, { client: n, config: e })
          };
        },
        errorElement: /* @__PURE__ */ p.jsx(Vc, {}),
        children: [
          {
            path: t,
            children: [
              {
                index: !0,
                async lazy() {
                  const { OperationList: a } = await import("./OperationList-BO-ES1C5.js");
                  return { element: /* @__PURE__ */ p.jsx(a, {}) };
                }
              }
            ]
          }
        ]
      }
    ]
  };
};
export {
  rn as C,
  uu as O,
  Mr as S,
  wn as T,
  Ac as a,
  ot as b,
  Nr as c,
  Tr as d,
  Or as e,
  lu as f,
  $r as g,
  Lt as h,
  Oe as i,
  Ce as j,
  du as k,
  pu as o,
  ci as u
};
//# sourceMappingURL=index-DNfiZTPV.js.map
