{"version":3,"file":"Markdown-CWI6lU11.js","sources":["../../../node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs","../../../node_modules/.pnpm/class-variance-authority@0.7.0/node_modules/class-variance-authority/dist/index.mjs","../../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../../../node_modules/.pnpm/tailwind-merge@2.5.4/node_modules/tailwind-merge/dist/bundle-mjs.mjs","../src/lib/util/cn.ts","../src/lib/ui/Callout.tsx","../src/lib/components/context/ViewportAnchorContext.tsx","../src/lib/components/Heading.tsx","../../../node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","../../../node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","../../../node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/schema.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/merge.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/normalize.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/info.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/types.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/defined-info.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/create.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xlink.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xml.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-sensitive-transform.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-insensitive-transform.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xmlns.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/aria.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/html.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/svg.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/hast-to-react.js","../../../node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js","../../../node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","../../../node_modules/.pnpm/inline-style-parser@0.2.3/node_modules/inline-style-parser/index.js","../../../node_modules/.pnpm/style-to-object@1.0.6/node_modules/style-to-object/cjs/index.js","../../../node_modules/.pnpm/style-to-object@1.0.6/node_modules/style-to-object/esm/index.mjs","../../../node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","../../../node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","../../../node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js","../../../node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.0/node_modules/hast-util-to-jsx-runtime/lib/index.js","../../../node_modules/.pnpm/html-url-attributes@3.0.0/node_modules/html-url-attributes/lib/index.js","../../../node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js","../../../node_modules/.pnpm/decode-named-character-reference@1.0.2_patch_hash=djcvjv2zk32xfqoxzwsbvomeg4/node_modules/decode-named-character-reference/index.dom.js","../../../node_modules/.pnpm/micromark-util-chunked@2.0.0/node_modules/micromark-util-chunked/index.js","../../../node_modules/.pnpm/micromark-util-combine-extensions@2.0.0/node_modules/micromark-util-combine-extensions/index.js","../../../node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.1/node_modules/micromark-util-decode-numeric-character-reference/index.js","../../../node_modules/.pnpm/micromark-util-normalize-identifier@2.0.0/node_modules/micromark-util-normalize-identifier/index.js","../../../node_modules/.pnpm/micromark-util-character@2.1.0/node_modules/micromark-util-character/index.js","../../../node_modules/.pnpm/micromark-util-sanitize-uri@2.0.0/node_modules/micromark-util-sanitize-uri/index.js","../../../node_modules/.pnpm/micromark-factory-space@2.0.0/node_modules/micromark-factory-space/index.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/content.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/document.js","../../../node_modules/.pnpm/micromark-util-classify-character@2.0.0/node_modules/micromark-util-classify-character/index.js","../../../node_modules/.pnpm/micromark-util-resolve-all@2.0.0/node_modules/micromark-util-resolve-all/index.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/attention.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/autolink.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/blank-line.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/block-quote.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/character-escape.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/character-reference.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/code-fenced.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/code-indented.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/code-text.js","../../../node_modules/.pnpm/micromark-util-subtokenize@2.0.0/node_modules/micromark-util-subtokenize/index.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/content.js","../../../node_modules/.pnpm/micromark-factory-destination@2.0.0/node_modules/micromark-factory-destination/index.js","../../../node_modules/.pnpm/micromark-factory-label@2.0.0/node_modules/micromark-factory-label/index.js","../../../node_modules/.pnpm/micromark-factory-title@2.0.0/node_modules/micromark-factory-title/index.js","../../../node_modules/.pnpm/micromark-factory-whitespace@2.0.0/node_modules/micromark-factory-whitespace/index.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/definition.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/heading-atx.js","../../../node_modules/.pnpm/micromark-util-html-tag-name@2.0.0/node_modules/micromark-util-html-tag-name/index.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/html-flow.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/html-text.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/label-end.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/label-start-image.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/label-start-link.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/line-ending.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/thematic-break.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/list.js","../../../node_modules/.pnpm/micromark-core-commonmark@2.0.0/node_modules/micromark-core-commonmark/lib/setext-underline.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/flow.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/text.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/create-tokenizer.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/constructs.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/parse.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/postprocess.js","../../../node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/preprocess.js","../../../node_modules/.pnpm/micromark-util-decode-string@2.0.0/node_modules/micromark-util-decode-string/index.js","../../../node_modules/.pnpm/mdast-util-from-markdown@2.0.0/node_modules/mdast-util-from-markdown/lib/index.js","../../../node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/revert.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../../node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","../../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/footer.js","../../../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","../../../node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","../../../node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/state.js","../../../node_modules/.pnpm/mdast-util-to-hast@13.1.0/node_modules/mdast-util-to-hast/lib/index.js","../../../node_modules/.pnpm/remark-rehype@11.1.0/node_modules/remark-rehype/lib/index.js","../../../node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","../../../node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","../../../node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","../../../node_modules/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","../../../node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/minpath.browser.js","../../../node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/minproc.browser.js","../../../node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/minurl.shared.js","../../../node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/minurl.browser.js","../../../node_modules/.pnpm/vfile@6.0.1/node_modules/vfile/lib/index.js","../../../node_modules/.pnpm/unified@11.0.4/node_modules/unified/lib/callable-instance.js","../../../node_modules/.pnpm/unified@11.0.4/node_modules/unified/lib/index.js","../../../node_modules/.pnpm/react-markdown@9.0.1_@types+react@18.3.11_react@18.3.1/node_modules/react-markdown/lib/index.js","../../../node_modules/.pnpm/hast-util-parse-selector@4.0.0/node_modules/hast-util-parse-selector/lib/index.js","../../../node_modules/.pnpm/hastscript@8.0.0/node_modules/hastscript/lib/create-h.js","../../../node_modules/.pnpm/hastscript@8.0.0/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../../node_modules/.pnpm/hastscript@8.0.0/node_modules/hastscript/lib/index.js","../../../node_modules/.pnpm/vfile-location@5.0.3/node_modules/vfile-location/lib/index.js","../../../node_modules/.pnpm/web-namespaces@2.0.1/node_modules/web-namespaces/index.js","../../../node_modules/.pnpm/hast-util-from-parse5@8.0.1/node_modules/hast-util-from-parse5/lib/index.js","../../../node_modules/.pnpm/zwitch@2.0.4/node_modules/zwitch/index.js","../../../node_modules/.pnpm/hast-util-to-parse5@8.0.0/node_modules/hast-util-to-parse5/lib/index.js","../../../node_modules/.pnpm/html-void-elements@3.0.0/node_modules/html-void-elements/index.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/unicode.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/error-codes.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/tokenizer/preprocessor.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/token.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js","../../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/html.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/tokenizer/index.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/parser/open-element-stack.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/parser/formatting-element-list.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/tree-adapters/default.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/doctype.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/foreign-content.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/parser/index.js","../../../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/serializer/index.js","../../../node_modules/.pnpm/hast-util-raw@9.0.4/node_modules/hast-util-raw/lib/index.js","../../../node_modules/.pnpm/rehype-raw@7.0.0/node_modules/rehype-raw/lib/index.js","../../../node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","../../../node_modules/.pnpm/mdast-util-find-and-replace@3.0.1/node_modules/mdast-util-find-and-replace/lib/index.js","../../../node_modules/.pnpm/mdast-util-gfm-autolink-literal@2.0.0/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../../node_modules/.pnpm/mdast-util-gfm-footnote@2.0.0/node_modules/mdast-util-gfm-footnote/lib/index.js","../../../node_modules/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../../node_modules/.pnpm/markdown-table@3.0.3/node_modules/markdown-table/index.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../../node_modules/.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../../node_modules/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../../node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../../node_modules/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","../../../node_modules/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../../node_modules/.pnpm/mdast-util-gfm@3.0.0/node_modules/mdast-util-gfm/lib/index.js","../../../node_modules/.pnpm/micromark-extension-gfm-autolink-literal@2.0.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../../node_modules/.pnpm/micromark-extension-gfm-footnote@2.0.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../../node_modules/.pnpm/micromark-extension-gfm-strikethrough@2.0.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../../node_modules/.pnpm/micromark-extension-gfm-table@2.0.0/node_modules/micromark-extension-gfm-table/lib/edit-map.js","../../../node_modules/.pnpm/micromark-extension-gfm-table@2.0.0/node_modules/micromark-extension-gfm-table/lib/infer.js","../../../node_modules/.pnpm/micromark-extension-gfm-table@2.0.0/node_modules/micromark-extension-gfm-table/lib/syntax.js","../../../node_modules/.pnpm/micromark-extension-gfm-task-list-item@2.0.1/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../../node_modules/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","../../../node_modules/.pnpm/remark-gfm@4.0.0/node_modules/remark-gfm/lib/index.js","../src/lib/components/InlineCode.tsx","../../../node_modules/.pnpm/prism-react-renderer@2.4.0_react@18.3.1/node_modules/prism-react-renderer/dist/index.mjs","../src/lib/components/context/ThemeContext.tsx","../src/lib/components/SyntaxHighlight.tsx","../src/lib/util/MdxComponents.tsx","../src/lib/components/Markdown.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\n * Exported for testing only\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    prefix\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  const prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(([classGroupId, classGroup]) => {\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\nconst getPrefixedClassGroupEntries = (classGroupEntries, prefix) => {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n  return classGroupEntries.map(([classGroupId, classGroup]) => {\n    const prefixedClassGroup = classGroup.map(classDefinition => {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value]));\n      }\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n};\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst createParseClassName = config => {\n  const {\n    separator,\n    experimentalParseClassName\n  } = config;\n  const isSeparatorSingleCharacter = separator.length === 1;\n  const firstSeparatorCharacter = separator[0];\n  const separatorLength = separator.length;\n  // parseClassName inspired by https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\n  const parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0) {\n        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index, index + separatorLength) === separator)) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + separatorLength;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    const baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (experimentalParseClassName) {\n    return className => experimentalParseClassName({\n      className,\n      parseClassName\n    });\n  }\n  return parseClassName;\n};\n/**\n * Sorts modifiers according to following schema:\n * - Predefined modifiers are sorted alphabetically\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\n */\nconst sortModifiers = modifiers => {\n  if (modifiers.length <= 1) {\n    return modifiers;\n  }\n  const sortedModifiers = [];\n  let unsortedModifiers = [];\n  modifiers.forEach(modifier => {\n    const isArbitraryVariant = modifier[0] === '[';\n    if (isArbitraryVariant) {\n      sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n      unsortedModifiers = [];\n    } else {\n      unsortedModifiers.push(modifier);\n    }\n  });\n  sortedModifiers.push(...unsortedModifiers.sort());\n  return sortedModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds\n  } = configUtils;\n  /**\n   * Set of classGroupIds in following format:\n   * `{importantModifier}{variantModifiers}{classGroupId}`\n   * @example 'float'\n   * @example 'hover:focus:bg-color'\n   * @example 'md:!pr'\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    let hasPostfixModifier = Boolean(maybePostfixModifierPosition);\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:([a-z-]+):)?(.+)\\]$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isLength = value => isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, 'length', isLengthOnly);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isArbitraryNumber = value => getIsArbitraryValue(value, 'number', isNumber);\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isArbitrarySize = value => getIsArbitraryValue(value, sizeLabels, isNever);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, 'position', isNever);\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isArbitraryImage = value => getIsArbitraryValue(value, imageLabels, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, '', isShadow);\nconst isAny = () => true;\nconst getIsArbitraryValue = (value, label, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return typeof label === 'string' ? result[1] === label : label.has(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isInteger,\n  isLength,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  const colors = fromTheme('colors');\n  const spacing = fromTheme('spacing');\n  const blur = fromTheme('blur');\n  const brightness = fromTheme('brightness');\n  const borderColor = fromTheme('borderColor');\n  const borderRadius = fromTheme('borderRadius');\n  const borderSpacing = fromTheme('borderSpacing');\n  const borderWidth = fromTheme('borderWidth');\n  const contrast = fromTheme('contrast');\n  const grayscale = fromTheme('grayscale');\n  const hueRotate = fromTheme('hueRotate');\n  const invert = fromTheme('invert');\n  const gap = fromTheme('gap');\n  const gradientColorStops = fromTheme('gradientColorStops');\n  const gradientColorStopPositions = fromTheme('gradientColorStopPositions');\n  const inset = fromTheme('inset');\n  const margin = fromTheme('margin');\n  const opacity = fromTheme('opacity');\n  const padding = fromTheme('padding');\n  const saturate = fromTheme('saturate');\n  const scale = fromTheme('scale');\n  const sepia = fromTheme('sepia');\n  const skew = fromTheme('skew');\n  const space = fromTheme('space');\n  const translate = fromTheme('translate');\n  const getOverscroll = () => ['auto', 'contain', 'none'];\n  const getOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const getSpacingWithAutoAndArbitrary = () => ['auto', isArbitraryValue, spacing];\n  const getSpacingWithArbitrary = () => [isArbitraryValue, spacing];\n  const getLengthWithEmptyAndArbitrary = () => ['', isLength, isArbitraryLength];\n  const getNumberWithAutoAndArbitrary = () => ['auto', isNumber, isArbitraryValue];\n  const getPositions = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const getLineStyles = () => ['solid', 'dashed', 'dotted', 'double', 'none'];\n  const getBlendModes = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const getAlign = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch'];\n  const getZeroAndEmpty = () => ['', '0', isArbitraryValue];\n  const getBreaks = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const getNumberAndArbitrary = () => [isNumber, isArbitraryValue];\n  return {\n    cacheSize: 500,\n    separator: ':',\n    theme: {\n      colors: [isAny],\n      spacing: [isLength, isArbitraryLength],\n      blur: ['none', '', isTshirtSize, isArbitraryValue],\n      brightness: getNumberAndArbitrary(),\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryValue],\n      borderSpacing: getSpacingWithArbitrary(),\n      borderWidth: getLengthWithEmptyAndArbitrary(),\n      contrast: getNumberAndArbitrary(),\n      grayscale: getZeroAndEmpty(),\n      hueRotate: getNumberAndArbitrary(),\n      invert: getZeroAndEmpty(),\n      gap: getSpacingWithArbitrary(),\n      gradientColorStops: [colors],\n      gradientColorStopPositions: [isPercent, isArbitraryLength],\n      inset: getSpacingWithAutoAndArbitrary(),\n      margin: getSpacingWithAutoAndArbitrary(),\n      opacity: getNumberAndArbitrary(),\n      padding: getSpacingWithArbitrary(),\n      saturate: getNumberAndArbitrary(),\n      scale: getNumberAndArbitrary(),\n      sepia: getZeroAndEmpty(),\n      skew: getNumberAndArbitrary(),\n      space: getSpacingWithArbitrary(),\n      translate: getSpacingWithArbitrary()\n    },\n    classGroups: {\n      // Layout\n      /**\n       * Aspect Ratio\n       * @see https://tailwindcss.com/docs/aspect-ratio\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n      /**\n       * Container\n       * @see https://tailwindcss.com/docs/container\n       */\n      container: ['container'],\n      /**\n       * Columns\n       * @see https://tailwindcss.com/docs/columns\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n      /**\n       * Break After\n       * @see https://tailwindcss.com/docs/break-after\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n      /**\n       * Break Before\n       * @see https://tailwindcss.com/docs/break-before\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n      /**\n       * Break Inside\n       * @see https://tailwindcss.com/docs/break-inside\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\n       * Box Decoration Break\n       * @see https://tailwindcss.com/docs/box-decoration-break\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\n       * Box Sizing\n       * @see https://tailwindcss.com/docs/box-sizing\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\n       * Display\n       * @see https://tailwindcss.com/docs/display\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\n       * Floats\n       * @see https://tailwindcss.com/docs/float\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\n       * Clear\n       * @see https://tailwindcss.com/docs/clear\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\n       * Isolation\n       * @see https://tailwindcss.com/docs/isolation\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\n       * Object Fit\n       * @see https://tailwindcss.com/docs/object-fit\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\n       * Object Position\n       * @see https://tailwindcss.com/docs/object-position\n       */\n      'object-position': [{\n        object: [...getPositions(), isArbitraryValue]\n      }],\n      /**\n       * Overflow\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n      /**\n       * Overflow X\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n      /**\n       * Overflow Y\n       * @see https://tailwindcss.com/docs/overflow\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n      /**\n       * Overscroll Behavior\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior X\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n      /**\n       * Overscroll Behavior Y\n       * @see https://tailwindcss.com/docs/overscroll-behavior\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n      /**\n       * Position\n       * @see https://tailwindcss.com/docs/position\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\n       * Top / Right / Bottom / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      inset: [{\n        inset: [inset]\n      }],\n      /**\n       * Right / Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n      /**\n       * Top / Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n      /**\n       * Start\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      start: [{\n        start: [inset]\n      }],\n      /**\n       * End\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      end: [{\n        end: [inset]\n      }],\n      /**\n       * Top\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      top: [{\n        top: [inset]\n      }],\n      /**\n       * Right\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      right: [{\n        right: [inset]\n      }],\n      /**\n       * Bottom\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n      /**\n       * Left\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\n       */\n      left: [{\n        left: [inset]\n      }],\n      /**\n       * Visibility\n       * @see https://tailwindcss.com/docs/visibility\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\n       * Z-Index\n       * @see https://tailwindcss.com/docs/z-index\n       */\n      z: [{\n        z: ['auto', isInteger, isArbitraryValue]\n      }],\n      // Flexbox and Grid\n      /**\n       * Flex Basis\n       * @see https://tailwindcss.com/docs/flex-basis\n       */\n      basis: [{\n        basis: getSpacingWithAutoAndArbitrary()\n      }],\n      /**\n       * Flex Direction\n       * @see https://tailwindcss.com/docs/flex-direction\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\n       * Flex Wrap\n       * @see https://tailwindcss.com/docs/flex-wrap\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n      /**\n       * Flex\n       * @see https://tailwindcss.com/docs/flex\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\n       * Flex Grow\n       * @see https://tailwindcss.com/docs/flex-grow\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n      /**\n       * Flex Shrink\n       * @see https://tailwindcss.com/docs/flex-shrink\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n      /**\n       * Order\n       * @see https://tailwindcss.com/docs/order\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger, isArbitraryValue]\n      }],\n      /**\n       * Grid Template Columns\n       * @see https://tailwindcss.com/docs/grid-template-columns\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n      /**\n       * Grid Column Start / End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: ['full', isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Column Start\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-start': [{\n        'col-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Column End\n       * @see https://tailwindcss.com/docs/grid-column\n       */\n      'col-end': [{\n        'col-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Template Rows\n       * @see https://tailwindcss.com/docs/grid-template-rows\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n      /**\n       * Grid Row Start / End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger, isArbitraryValue]\n        }, isArbitraryValue]\n      }],\n      /**\n       * Grid Row Start\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-start': [{\n        'row-start': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Row End\n       * @see https://tailwindcss.com/docs/grid-row\n       */\n      'row-end': [{\n        'row-end': getNumberWithAutoAndArbitrary()\n      }],\n      /**\n       * Grid Auto Flow\n       * @see https://tailwindcss.com/docs/grid-auto-flow\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\n       * Grid Auto Columns\n       * @see https://tailwindcss.com/docs/grid-auto-columns\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Grid Auto Rows\n       * @see https://tailwindcss.com/docs/grid-auto-rows\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n      /**\n       * Gap\n       * @see https://tailwindcss.com/docs/gap\n       */\n      gap: [{\n        gap: [gap]\n      }],\n      /**\n       * Gap X\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n      /**\n       * Gap Y\n       * @see https://tailwindcss.com/docs/gap\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n      /**\n       * Justify Content\n       * @see https://tailwindcss.com/docs/justify-content\n       */\n      'justify-content': [{\n        justify: ['normal', ...getAlign()]\n      }],\n      /**\n       * Justify Items\n       * @see https://tailwindcss.com/docs/justify-items\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Justify Self\n       * @see https://tailwindcss.com/docs/justify-self\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      /**\n       * Align Content\n       * @see https://tailwindcss.com/docs/align-content\n       */\n      'align-content': [{\n        content: ['normal', ...getAlign(), 'baseline']\n      }],\n      /**\n       * Align Items\n       * @see https://tailwindcss.com/docs/align-items\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Align Self\n       * @see https://tailwindcss.com/docs/align-self\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n      /**\n       * Place Content\n       * @see https://tailwindcss.com/docs/place-content\n       */\n      'place-content': [{\n        'place-content': [...getAlign(), 'baseline']\n      }],\n      /**\n       * Place Items\n       * @see https://tailwindcss.com/docs/place-items\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n      /**\n       * Place Self\n       * @see https://tailwindcss.com/docs/place-self\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n      /**\n       * Padding\n       * @see https://tailwindcss.com/docs/padding\n       */\n      p: [{\n        p: [padding]\n      }],\n      /**\n       * Padding X\n       * @see https://tailwindcss.com/docs/padding\n       */\n      px: [{\n        px: [padding]\n      }],\n      /**\n       * Padding Y\n       * @see https://tailwindcss.com/docs/padding\n       */\n      py: [{\n        py: [padding]\n      }],\n      /**\n       * Padding Start\n       * @see https://tailwindcss.com/docs/padding\n       */\n      ps: [{\n        ps: [padding]\n      }],\n      /**\n       * Padding End\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pe: [{\n        pe: [padding]\n      }],\n      /**\n       * Padding Top\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pt: [{\n        pt: [padding]\n      }],\n      /**\n       * Padding Right\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pr: [{\n        pr: [padding]\n      }],\n      /**\n       * Padding Bottom\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pb: [{\n        pb: [padding]\n      }],\n      /**\n       * Padding Left\n       * @see https://tailwindcss.com/docs/padding\n       */\n      pl: [{\n        pl: [padding]\n      }],\n      /**\n       * Margin\n       * @see https://tailwindcss.com/docs/margin\n       */\n      m: [{\n        m: [margin]\n      }],\n      /**\n       * Margin X\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mx: [{\n        mx: [margin]\n      }],\n      /**\n       * Margin Y\n       * @see https://tailwindcss.com/docs/margin\n       */\n      my: [{\n        my: [margin]\n      }],\n      /**\n       * Margin Start\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ms: [{\n        ms: [margin]\n      }],\n      /**\n       * Margin End\n       * @see https://tailwindcss.com/docs/margin\n       */\n      me: [{\n        me: [margin]\n      }],\n      /**\n       * Margin Top\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mt: [{\n        mt: [margin]\n      }],\n      /**\n       * Margin Right\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mr: [{\n        mr: [margin]\n      }],\n      /**\n       * Margin Bottom\n       * @see https://tailwindcss.com/docs/margin\n       */\n      mb: [{\n        mb: [margin]\n      }],\n      /**\n       * Margin Left\n       * @see https://tailwindcss.com/docs/margin\n       */\n      ml: [{\n        ml: [margin]\n      }],\n      /**\n       * Space Between X\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n      /**\n       * Space Between X Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\n       * Space Between Y\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n      /**\n       * Space Between Y Reverse\n       * @see https://tailwindcss.com/docs/space\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n      /**\n       * Width\n       * @see https://tailwindcss.com/docs/width\n       */\n      w: [{\n        w: ['auto', 'min', 'max', 'fit', 'svw', 'lvw', 'dvw', isArbitraryValue, spacing]\n      }],\n      /**\n       * Min-Width\n       * @see https://tailwindcss.com/docs/min-width\n       */\n      'min-w': [{\n        'min-w': [isArbitraryValue, spacing, 'min', 'max', 'fit']\n      }],\n      /**\n       * Max-Width\n       * @see https://tailwindcss.com/docs/max-width\n       */\n      'max-w': [{\n        'max-w': [isArbitraryValue, spacing, 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize]\n      }],\n      /**\n       * Height\n       * @see https://tailwindcss.com/docs/height\n       */\n      h: [{\n        h: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Min-Height\n       * @see https://tailwindcss.com/docs/min-height\n       */\n      'min-h': [{\n        'min-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Max-Height\n       * @see https://tailwindcss.com/docs/max-height\n       */\n      'max-h': [{\n        'max-h': [isArbitraryValue, spacing, 'min', 'max', 'fit', 'svh', 'lvh', 'dvh']\n      }],\n      /**\n       * Size\n       * @see https://tailwindcss.com/docs/size\n       */\n      size: [{\n        size: [isArbitraryValue, spacing, 'auto', 'min', 'max', 'fit']\n      }],\n      // Typography\n      /**\n       * Font Size\n       * @see https://tailwindcss.com/docs/font-size\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n      /**\n       * Font Smoothing\n       * @see https://tailwindcss.com/docs/font-smoothing\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\n       * Font Style\n       * @see https://tailwindcss.com/docs/font-style\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\n       * Font Weight\n       * @see https://tailwindcss.com/docs/font-weight\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryNumber]\n      }],\n      /**\n       * Font Family\n       * @see https://tailwindcss.com/docs/font-family\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\n       * Font Variant Numeric\n       * @see https://tailwindcss.com/docs/font-variant-numeric\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n      /**\n       * Letter Spacing\n       * @see https://tailwindcss.com/docs/letter-spacing\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryValue]\n      }],\n      /**\n       * Line Clamp\n       * @see https://tailwindcss.com/docs/line-clamp\n       */\n      'line-clamp': [{\n        'line-clamp': ['none', isNumber, isArbitraryNumber]\n      }],\n      /**\n       * Line Height\n       * @see https://tailwindcss.com/docs/line-height\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength, isArbitraryValue]\n      }],\n      /**\n       * List Style Image\n       * @see https://tailwindcss.com/docs/list-style-image\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryValue]\n      }],\n      /**\n       * List Style Type\n       * @see https://tailwindcss.com/docs/list-style-type\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n      /**\n       * List Style Position\n       * @see https://tailwindcss.com/docs/list-style-position\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\n       * Placeholder Color\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/placeholder-color\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n      /**\n       * Placeholder Opacity\n       * @see https://tailwindcss.com/docs/placeholder-opacity\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n      /**\n       * Text Alignment\n       * @see https://tailwindcss.com/docs/text-align\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\n       * Text Color\n       * @see https://tailwindcss.com/docs/text-color\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n      /**\n       * Text Opacity\n       * @see https://tailwindcss.com/docs/text-opacity\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n      /**\n       * Text Decoration\n       * @see https://tailwindcss.com/docs/text-decoration\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\n       * Text Decoration Style\n       * @see https://tailwindcss.com/docs/text-decoration-style\n       */\n      'text-decoration-style': [{\n        decoration: [...getLineStyles(), 'wavy']\n      }],\n      /**\n       * Text Decoration Thickness\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength, isArbitraryLength]\n      }],\n      /**\n       * Text Underline Offset\n       * @see https://tailwindcss.com/docs/text-underline-offset\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength, isArbitraryValue]\n      }],\n      /**\n       * Text Decoration Color\n       * @see https://tailwindcss.com/docs/text-decoration-color\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n      /**\n       * Text Transform\n       * @see https://tailwindcss.com/docs/text-transform\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\n       * Text Overflow\n       * @see https://tailwindcss.com/docs/text-overflow\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\n       * Text Wrap\n       * @see https://tailwindcss.com/docs/text-wrap\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\n       * Text Indent\n       * @see https://tailwindcss.com/docs/text-indent\n       */\n      indent: [{\n        indent: getSpacingWithArbitrary()\n      }],\n      /**\n       * Vertical Alignment\n       * @see https://tailwindcss.com/docs/vertical-align\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryValue]\n      }],\n      /**\n       * Whitespace\n       * @see https://tailwindcss.com/docs/whitespace\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\n       * Word Break\n       * @see https://tailwindcss.com/docs/word-break\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\n       * Hyphens\n       * @see https://tailwindcss.com/docs/hyphens\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\n       * Content\n       * @see https://tailwindcss.com/docs/content\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n      /**\n       * Background Attachment\n       * @see https://tailwindcss.com/docs/background-attachment\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\n       * Background Clip\n       * @see https://tailwindcss.com/docs/background-clip\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\n       * Background Opacity\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/background-opacity\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n      /**\n       * Background Origin\n       * @see https://tailwindcss.com/docs/background-origin\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\n       * Background Position\n       * @see https://tailwindcss.com/docs/background-position\n       */\n      'bg-position': [{\n        bg: [...getPositions(), isArbitraryPosition]\n      }],\n      /**\n       * Background Repeat\n       * @see https://tailwindcss.com/docs/background-repeat\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n      /**\n       * Background Size\n       * @see https://tailwindcss.com/docs/background-size\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n      /**\n       * Background Image\n       * @see https://tailwindcss.com/docs/background-image\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryImage]\n      }],\n      /**\n       * Background Color\n       * @see https://tailwindcss.com/docs/background-color\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n      /**\n       * Gradient Color Stops From Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from-pos': [{\n        from: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops Via Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via-pos': [{\n        via: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops To Position\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to-pos': [{\n        to: [gradientColorStopPositions]\n      }],\n      /**\n       * Gradient Color Stops From\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops Via\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n      /**\n       * Gradient Color Stops To\n       * @see https://tailwindcss.com/docs/gradient-color-stops\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n      /**\n       * Border Radius\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n      /**\n       * Border Radius Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-s': [{\n        'rounded-s': [borderRadius]\n      }],\n      /**\n       * Border Radius End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-e': [{\n        'rounded-e': [borderRadius]\n      }],\n      /**\n       * Border Radius Top\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n      /**\n       * Border Radius Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n      /**\n       * Border Radius Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n      /**\n       * Border Radius Start Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ss': [{\n        'rounded-ss': [borderRadius]\n      }],\n      /**\n       * Border Radius Start End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-se': [{\n        'rounded-se': [borderRadius]\n      }],\n      /**\n       * Border Radius End End\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-ee': [{\n        'rounded-ee': [borderRadius]\n      }],\n      /**\n       * Border Radius End Start\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-es': [{\n        'rounded-es': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n      /**\n       * Border Radius Top Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Right\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n      /**\n       * Border Radius Bottom Left\n       * @see https://tailwindcss.com/docs/border-radius\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n      /**\n       * Border Width\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n      /**\n       * Border Width X\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n      /**\n       * Border Width Y\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n      /**\n       * Border Width Start\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-s': [{\n        'border-s': [borderWidth]\n      }],\n      /**\n       * Border Width End\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-e': [{\n        'border-e': [borderWidth]\n      }],\n      /**\n       * Border Width Top\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n      /**\n       * Border Width Right\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n      /**\n       * Border Width Bottom\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n      /**\n       * Border Width Left\n       * @see https://tailwindcss.com/docs/border-width\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n      /**\n       * Border Opacity\n       * @see https://tailwindcss.com/docs/border-opacity\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n      /**\n       * Border Style\n       * @see https://tailwindcss.com/docs/border-style\n       */\n      'border-style': [{\n        border: [...getLineStyles(), 'hidden']\n      }],\n      /**\n       * Divide Width X\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n      /**\n       * Divide Width X Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\n       * Divide Width Y\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n      /**\n       * Divide Width Y Reverse\n       * @see https://tailwindcss.com/docs/divide-width\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\n       * Divide Opacity\n       * @see https://tailwindcss.com/docs/divide-opacity\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n      /**\n       * Divide Style\n       * @see https://tailwindcss.com/docs/divide-style\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n      /**\n       * Border Color\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n      /**\n       * Border Color X\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n      /**\n       * Border Color Y\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n      /**\n       * Border Color S\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-s': [{\n        'border-s': [borderColor]\n      }],\n      /**\n       * Border Color E\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-e': [{\n        'border-e': [borderColor]\n      }],\n      /**\n       * Border Color Top\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n      /**\n       * Border Color Right\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n      /**\n       * Border Color Bottom\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n      /**\n       * Border Color Left\n       * @see https://tailwindcss.com/docs/border-color\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n      /**\n       * Divide Color\n       * @see https://tailwindcss.com/docs/divide-color\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n      /**\n       * Outline Style\n       * @see https://tailwindcss.com/docs/outline-style\n       */\n      'outline-style': [{\n        outline: ['', ...getLineStyles()]\n      }],\n      /**\n       * Outline Offset\n       * @see https://tailwindcss.com/docs/outline-offset\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength, isArbitraryValue]\n      }],\n      /**\n       * Outline Width\n       * @see https://tailwindcss.com/docs/outline-width\n       */\n      'outline-w': [{\n        outline: [isLength, isArbitraryLength]\n      }],\n      /**\n       * Outline Color\n       * @see https://tailwindcss.com/docs/outline-color\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n      /**\n       * Ring Width\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w': [{\n        ring: getLengthWithEmptyAndArbitrary()\n      }],\n      /**\n       * Ring Width Inset\n       * @see https://tailwindcss.com/docs/ring-width\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\n       * Ring Color\n       * @see https://tailwindcss.com/docs/ring-color\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n      /**\n       * Ring Opacity\n       * @see https://tailwindcss.com/docs/ring-opacity\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n      /**\n       * Ring Offset Width\n       * @see https://tailwindcss.com/docs/ring-offset-width\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength, isArbitraryLength]\n      }],\n      /**\n       * Ring Offset Color\n       * @see https://tailwindcss.com/docs/ring-offset-color\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n      /**\n       * Box Shadow\n       * @see https://tailwindcss.com/docs/box-shadow\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n      /**\n       * Box Shadow Color\n       * @see https://tailwindcss.com/docs/box-shadow-color\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n      /**\n       * Opacity\n       * @see https://tailwindcss.com/docs/opacity\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n      /**\n       * Mix Blend Mode\n       * @see https://tailwindcss.com/docs/mix-blend-mode\n       */\n      'mix-blend': [{\n        'mix-blend': [...getBlendModes(), 'plus-lighter', 'plus-darker']\n      }],\n      /**\n       * Background Blend Mode\n       * @see https://tailwindcss.com/docs/background-blend-mode\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n      /**\n       * Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/filter\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n      /**\n       * Blur\n       * @see https://tailwindcss.com/docs/blur\n       */\n      blur: [{\n        blur: [blur]\n      }],\n      /**\n       * Brightness\n       * @see https://tailwindcss.com/docs/brightness\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n      /**\n       * Contrast\n       * @see https://tailwindcss.com/docs/contrast\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n      /**\n       * Drop Shadow\n       * @see https://tailwindcss.com/docs/drop-shadow\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n      /**\n       * Grayscale\n       * @see https://tailwindcss.com/docs/grayscale\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n      /**\n       * Hue Rotate\n       * @see https://tailwindcss.com/docs/hue-rotate\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n      /**\n       * Invert\n       * @see https://tailwindcss.com/docs/invert\n       */\n      invert: [{\n        invert: [invert]\n      }],\n      /**\n       * Saturate\n       * @see https://tailwindcss.com/docs/saturate\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n      /**\n       * Sepia\n       * @see https://tailwindcss.com/docs/sepia\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n      /**\n       * Backdrop Filter\n       * @deprecated since Tailwind CSS v3.0.0\n       * @see https://tailwindcss.com/docs/backdrop-filter\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n      /**\n       * Backdrop Blur\n       * @see https://tailwindcss.com/docs/backdrop-blur\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n      /**\n       * Backdrop Brightness\n       * @see https://tailwindcss.com/docs/backdrop-brightness\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n      /**\n       * Backdrop Contrast\n       * @see https://tailwindcss.com/docs/backdrop-contrast\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n      /**\n       * Backdrop Grayscale\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n      /**\n       * Backdrop Hue Rotate\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n      /**\n       * Backdrop Invert\n       * @see https://tailwindcss.com/docs/backdrop-invert\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n      /**\n       * Backdrop Opacity\n       * @see https://tailwindcss.com/docs/backdrop-opacity\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n      /**\n       * Backdrop Saturate\n       * @see https://tailwindcss.com/docs/backdrop-saturate\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n      /**\n       * Backdrop Sepia\n       * @see https://tailwindcss.com/docs/backdrop-sepia\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n      /**\n       * Border Collapse\n       * @see https://tailwindcss.com/docs/border-collapse\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\n       * Border Spacing\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing': [{\n        'border-spacing': [borderSpacing]\n      }],\n      /**\n       * Border Spacing X\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': [borderSpacing]\n      }],\n      /**\n       * Border Spacing Y\n       * @see https://tailwindcss.com/docs/border-spacing\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': [borderSpacing]\n      }],\n      /**\n       * Table Layout\n       * @see https://tailwindcss.com/docs/table-layout\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\n       * Caption Side\n       * @see https://tailwindcss.com/docs/caption-side\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // Transitions and Animation\n      /**\n       * Tranisition Property\n       * @see https://tailwindcss.com/docs/transition-property\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n      /**\n       * Transition Duration\n       * @see https://tailwindcss.com/docs/transition-duration\n       */\n      duration: [{\n        duration: getNumberAndArbitrary()\n      }],\n      /**\n       * Transition Timing Function\n       * @see https://tailwindcss.com/docs/transition-timing-function\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n      /**\n       * Transition Delay\n       * @see https://tailwindcss.com/docs/transition-delay\n       */\n      delay: [{\n        delay: getNumberAndArbitrary()\n      }],\n      /**\n       * Animation\n       * @see https://tailwindcss.com/docs/animation\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n      /**\n       * Transform\n       * @see https://tailwindcss.com/docs/transform\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n      /**\n       * Scale\n       * @see https://tailwindcss.com/docs/scale\n       */\n      scale: [{\n        scale: [scale]\n      }],\n      /**\n       * Scale X\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n      /**\n       * Scale Y\n       * @see https://tailwindcss.com/docs/scale\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n      /**\n       * Rotate\n       * @see https://tailwindcss.com/docs/rotate\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n      /**\n       * Translate X\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n      /**\n       * Translate Y\n       * @see https://tailwindcss.com/docs/translate\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n      /**\n       * Skew X\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n      /**\n       * Skew Y\n       * @see https://tailwindcss.com/docs/skew\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n      /**\n       * Transform Origin\n       * @see https://tailwindcss.com/docs/transform-origin\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n      /**\n       * Accent Color\n       * @see https://tailwindcss.com/docs/accent-color\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n      /**\n       * Appearance\n       * @see https://tailwindcss.com/docs/appearance\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\n       * Cursor\n       * @see https://tailwindcss.com/docs/cursor\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n      /**\n       * Caret Color\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n      /**\n       * Pointer Events\n       * @see https://tailwindcss.com/docs/pointer-events\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n      /**\n       * Resize\n       * @see https://tailwindcss.com/docs/resize\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n      /**\n       * Scroll Behavior\n       * @see https://tailwindcss.com/docs/scroll-behavior\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\n       * Scroll Margin\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-m': [{\n        'scroll-m': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin X\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mx': [{\n        'scroll-mx': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Y\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-my': [{\n        'scroll-my': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Start\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ms': [{\n        'scroll-ms': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin End\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-me': [{\n        'scroll-me': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Top\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mt': [{\n        'scroll-mt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Right\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mr': [{\n        'scroll-mr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Bottom\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-mb': [{\n        'scroll-mb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Margin Left\n       * @see https://tailwindcss.com/docs/scroll-margin\n       */\n      'scroll-ml': [{\n        'scroll-ml': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-p': [{\n        'scroll-p': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding X\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-px': [{\n        'scroll-px': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Y\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-py': [{\n        'scroll-py': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Start\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-ps': [{\n        'scroll-ps': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding End\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pe': [{\n        'scroll-pe': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Top\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pt': [{\n        'scroll-pt': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Right\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pr': [{\n        'scroll-pr': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Bottom\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pb': [{\n        'scroll-pb': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Padding Left\n       * @see https://tailwindcss.com/docs/scroll-padding\n       */\n      'scroll-pl': [{\n        'scroll-pl': getSpacingWithArbitrary()\n      }],\n      /**\n       * Scroll Snap Align\n       * @see https://tailwindcss.com/docs/scroll-snap-align\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\n       * Scroll Snap Stop\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\n       * Scroll Snap Type\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\n       * Scroll Snap Type Strictness\n       * @see https://tailwindcss.com/docs/scroll-snap-type\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\n       * Touch Action\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\n       * Touch Action X\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\n       * Touch Action Y\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\n       * Touch Action Pinch Zoom\n       * @see https://tailwindcss.com/docs/touch-action\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\n       * User Select\n       * @see https://tailwindcss.com/docs/user-select\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\n       * Will Change\n       * @see https://tailwindcss.com/docs/will-change\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n      /**\n       * Fill\n       * @see https://tailwindcss.com/docs/fill\n       */\n      fill: [{\n        fill: [colors, 'none']\n      }],\n      /**\n       * Stroke Width\n       * @see https://tailwindcss.com/docs/stroke-width\n       */\n      'stroke-w': [{\n        stroke: [isLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\n       * Stroke\n       * @see https://tailwindcss.com/docs/stroke\n       */\n      stroke: [{\n        stroke: [colors, 'none']\n      }],\n      // Accessibility\n      /**\n       * Screen Readers\n       * @see https://tailwindcss.com/docs/screen-readers\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\n       * Forced Color Adjust\n       * @see https://tailwindcss.com/docs/forced-color-adjust\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    }\n  };\n};\n\n/**\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\n * @param configExtension Partial config to merge into the `baseConfig`.\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  separator,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'separator', separator);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  for (const configKey in override) {\n    overrideConfigProperties(baseConfig[configKey], override[configKey]);\n  }\n  for (const key in extend) {\n    mergeConfigProperties(baseConfig[key], extend[key]);\n  }\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      const mergeValue = mergeObject[key];\n      if (mergeValue !== undefined) {\n        baseObject[key] = (baseObject[key] || []).concat(mergeValue);\n      }\n    }\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };\n//# sourceMappingURL=bundle-mjs.mjs.map\n","import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import {\n  AlertTriangleIcon,\n  InfoIcon,\n  LightbulbIcon,\n  type LucideIcon,\n  ShieldAlertIcon,\n} from \"lucide-react\";\nimport type { ReactNode } from \"react\";\nimport { cn } from \"../util/cn.js\";\n\nconst stylesMap = {\n  note: {\n    border: \"border-gray-300 dark:border-zinc-800\",\n    bg: \"bg-gray-100 dark:bg-zinc-800/50\",\n    iconColor: \"text-gray-600 dark:text-zinc-300\",\n    titleColor: \"text-gray-600 dark:text-zinc-300\",\n    textColor: \"text-gray-600 dark:text-zinc-300\",\n    Icon: InfoIcon as LucideIcon,\n  },\n  tip: {\n    border: \"border-green-500 dark:border-green-800\",\n    bg: \"bg-green-200/25 dark:bg-green-950/70\",\n    iconColor: \"text-green-600 dark:text-green-200\",\n    titleColor: \"text-green-700 dark:text-green-200\",\n    textColor: \"text-green-600 dark:text-green-50\",\n    Icon: LightbulbIcon as LucideIcon,\n  },\n  info: {\n    border: \"border-blue-400 dark:border-blue-900/60\",\n    bg: \"bg-blue-50 dark:bg-blue-950/40\",\n    iconColor: \"text-blue-400 dark:text-blue-200\",\n    titleColor: \"text-blue-700 dark:text-blue-200\",\n    textColor: \"text-blue-600 dark:text-blue-100\",\n    Icon: InfoIcon as LucideIcon,\n  },\n  caution: {\n    border: \"border-yellow-400 dark:border-yellow-400/25\",\n    bg: \"bg-yellow-100/60 dark:bg-yellow-400/10\",\n    iconColor: \"text-yellow-500 dark:text-yellow-300\",\n    titleColor: \"text-yellow-600 dark:text-yellow-300\",\n    textColor: \"text-yellow-700 dark:text-yellow-200\",\n    Icon: AlertTriangleIcon as LucideIcon,\n  },\n  danger: {\n    border: \"border-rose-400 dark:border-rose-800\",\n    bg: \"bg-rose-50 dark:bg-rose-950/40\",\n    iconColor: \"text-rose-400 dark:text-rose-300\",\n    titleColor: \"text-rose-800 dark:text-rose-300\",\n    textColor: \"text-rose-700 dark:text-rose-100\",\n    Icon: ShieldAlertIcon as LucideIcon,\n  },\n} as const;\n\ntype CalloutProps = {\n  type: keyof typeof stylesMap;\n  title?: string;\n  children: ReactNode;\n  className?: string;\n};\n\nexport const Callout = ({ type, children, title, className }: CalloutProps) => {\n  const { border, bg, iconColor, titleColor, textColor, Icon } =\n    stylesMap[type];\n\n  return (\n    <div\n      className={cn(\n        \"not-prose grid grid-cols-[min-content_1fr] grid-rows-[fit-content_1fr] gap-x-4 gap-y-2 text-md rounded-md border p-4\",\n        \"[&_a]:underline [&_a]:decoration-current [&_a]:decoration-from-font [&_a]:underline-offset-4 hover:[&_a]:decoration-1\",\n        \"[&_code]:!bg-gray-50 [&_code]:dark:!bg-gray-800 [&_code]:!border-none my-2\",\n        title && \"items-center\",\n        border,\n        bg,\n        className,\n      )}\n    >\n      <Icon\n        className={cn(!title && \"translate-y-px\", iconColor)}\n        size={20}\n        aria-hidden=\"true\"\n      />\n      {title && <h3 className={cn(\"font-medium\", titleColor)}>{title}</h3>}\n      <div className={cn(\"col-start-2\", !title && \"row-start-1\", textColor)}>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import {\n  type ReactNode,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\ntype AnchorContextType = {\n  activeAnchor?: string;\n  setActiveAnchor: (anchor: string) => void;\n  observe: (element: HTMLElement | null) => void;\n  unobserve: (element: HTMLElement | null) => void;\n};\n\nconst ViewportAnchorContext = createContext<AnchorContextType | undefined>(\n  undefined,\n);\n\nexport const useViewportAnchor = () => {\n  const context = useContext(ViewportAnchorContext);\n\n  if (!context) {\n    throw new Error(\n      \"useViewportAnchor must be used within a CurrentAnchorProvider\",\n    );\n  }\n\n  return context;\n};\n\nexport const useRegisterAnchorElement = () => {\n  const elementRef = useRef<HTMLElement | null>(null);\n\n  const { observe, unobserve } = useViewportAnchor();\n\n  useEffect(() => {\n    const element = elementRef.current;\n\n    if (!element) return;\n\n    observe(element);\n\n    return () => unobserve(element);\n  }, [observe, unobserve]);\n\n  const setRef = useCallback((el: HTMLElement | null) => {\n    if (!el) return;\n    elementRef.current = el;\n  }, []);\n\n  return { ref: setRef };\n};\n\nexport const ViewportAnchorProvider = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const [activeAnchor, setActiveAnchor] = useState(\"\");\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const registeredElements = useRef(new Set<HTMLElement>());\n\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        for (const entry of entries) {\n          if (entry.isIntersecting && entry.target.id) {\n            setActiveAnchor(entry.target.id);\n          }\n        }\n      },\n      {\n        // 115px is the height of the sticky header\n        // see --header-height in `main.css`\n        rootMargin: \"115px 0px -80% 0px\",\n        threshold: 0.75,\n      },\n    );\n\n    return () => observerRef.current?.disconnect();\n  }, []);\n\n  useEffect(() => {\n    const elements = registeredElements.current;\n    const handleScroll = () => {\n      const hasReachedTop = window.scrollY === 0;\n      const hasReachedBottom =\n        window.innerHeight + window.scrollY >= document.body.scrollHeight;\n\n      if (hasReachedTop) {\n        // reset the active anchor when we reach the top\n        setActiveAnchor(\"\");\n      } else if (hasReachedBottom) {\n        requestIdleCallback(() => {\n          // set the last anchor when we reach the bottom\n          const lastItem = Array.from(elements).pop();\n          setActiveAnchor(lastItem?.id ?? \"\");\n        });\n      }\n    };\n\n    document.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      elements.clear();\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  const observeFns = useMemo(() => {\n    return {\n      observe: (element: HTMLElement | null) => {\n        if (!element || !observerRef.current) return;\n        registeredElements.current.add(element);\n        observerRef.current.observe(element);\n      },\n      unobserve: (element: HTMLElement | null) => {\n        if (!element || !observerRef.current) return;\n        registeredElements.current.delete(element);\n        observerRef.current.unobserve(element);\n      },\n    };\n  }, []);\n\n  const value = useMemo(\n    () => ({ activeAnchor, setActiveAnchor, ...observeFns }),\n    [activeAnchor, setActiveAnchor, observeFns],\n  );\n\n  return (\n    <ViewportAnchorContext.Provider value={value}>\n      {children}\n    </ViewportAnchorContext.Provider>\n  );\n};\n","import React, { type ReactNode } from \"react\";\nimport { useRegisterAnchorElement } from \"./context/ViewportAnchorContext.js\";\n\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nconst heading = cva(\"group relative\", {\n  variants: {\n    level: {\n      6: \"text-md\",\n      5: \"text-lg\",\n      4: \"text-xl\",\n      3: \"text-xl font-semibold\",\n      2: \"text-2xl font-bold\",\n      1: \"text-4xl font-extrabold\",\n    },\n  },\n  defaultVariants: {\n    level: 1,\n  },\n});\n\nconst getComponent = (level: number) => {\n  switch (level) {\n    case 1:\n      return \"h1\";\n    case 2:\n      return \"h2\";\n    case 3:\n      return \"h3\";\n    case 4:\n      return \"h4\";\n    case 5:\n      return \"h5\";\n    case 6:\n      return \"h6\";\n    default:\n      return \"h1\";\n  }\n};\n\nexport interface HeadingProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof heading> {\n  children: ReactNode;\n  className?: string;\n  id?: string;\n  level?: 1 | 2 | 3 | 4 | 5 | 6;\n  registerSidebarAnchor?: boolean;\n}\n\nexport const Heading: React.FC<HeadingProps> = ({\n  level,\n  children,\n  id,\n  className,\n  registerSidebarAnchor,\n}) => {\n  const Component = getComponent(level ?? 1);\n  const { ref } = useRegisterAnchorElement();\n\n  return (\n    <Component\n      className={heading({ className, level })}\n      ref={registerSidebarAnchor ? ref : undefined}\n      id={id}\n    >\n      {id && (\n        <a\n          href={`#${id}`}\n          className=\"no-underline absolute text-primary -left-[0.8em] pr-2.5 opacity-0 group-hover:opacity-50 hover:!opacity-100 transition-opacity duration-200\"\n          aria-label={`Link to ${id}`}\n        >\n          #\n        </a>\n      )}\n      {children}\n    </Component>\n  );\n};\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\nexports.default = StyleToObject;\n//# sourceMappingURL=index.js.map","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = typeof document !== 'undefined' && document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('hast-util-raw').Options} Options\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","import type { ReactNode } from \"react\";\nimport { cn } from \"../util/cn.js\";\n\nexport const InlineCode = ({\n  className,\n  children,\n  selectOnClick,\n}: {\n  className?: string;\n  children: ReactNode;\n  selectOnClick?: boolean;\n}) => (\n  <code\n    onClick={(e) => {\n      if (!selectOnClick) return;\n      const selection = window.getSelection();\n      const range = document.createRange();\n      range.selectNodeContents(e.currentTarget);\n      selection?.removeAllRanges();\n      selection?.addRange(range);\n    }}\n    className={cn(\n      \"font-mono border p-1 py-0.5 rounded bg-border/50 dark:bg-border/70 whitespace-nowrap\",\n      className,\n    )}\n  >\n    {children}\n  </code>\n);\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// ../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js\nvar require_prism = __commonJS({\n  \"../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js\"(exports, module) {\n    var Prism2 = function() {\n      var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n      var uniqueId = 0;\n      var plainTextGrammar = {};\n      var _ = {\n        /**\n         * A namespace for utility methods.\n         *\n         * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n         * change or disappear at any time.\n         *\n         * @namespace\n         * @memberof Prism\n         */\n        util: {\n          encode: function encode(tokens) {\n            if (tokens instanceof Token) {\n              return new Token(tokens.type, encode(tokens.content), tokens.alias);\n            } else if (Array.isArray(tokens)) {\n              return tokens.map(encode);\n            } else {\n              return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n            }\n          },\n          /**\n           * Returns the name of the type of the given value.\n           *\n           * @param {any} o\n           * @returns {string}\n           * @example\n           * type(null)      === 'Null'\n           * type(undefined) === 'Undefined'\n           * type(123)       === 'Number'\n           * type('foo')     === 'String'\n           * type(true)      === 'Boolean'\n           * type([1, 2])    === 'Array'\n           * type({})        === 'Object'\n           * type(String)    === 'Function'\n           * type(/abc+/)    === 'RegExp'\n           */\n          type: function(o) {\n            return Object.prototype.toString.call(o).slice(8, -1);\n          },\n          /**\n           * Returns a unique number for the given object. Later calls will still return the same number.\n           *\n           * @param {Object} obj\n           * @returns {number}\n           */\n          objId: function(obj) {\n            if (!obj[\"__id\"]) {\n              Object.defineProperty(obj, \"__id\", { value: ++uniqueId });\n            }\n            return obj[\"__id\"];\n          },\n          /**\n           * Creates a deep clone of the given object.\n           *\n           * The main intended use of this function is to clone language definitions.\n           *\n           * @param {T} o\n           * @param {Record<number, any>} [visited]\n           * @returns {T}\n           * @template T\n           */\n          clone: function deepClone(o, visited) {\n            visited = visited || {};\n            var clone;\n            var id;\n            switch (_.util.type(o)) {\n              case \"Object\":\n                id = _.util.objId(o);\n                if (visited[id]) {\n                  return visited[id];\n                }\n                clone = /** @type {Record<string, any>} */\n                {};\n                visited[id] = clone;\n                for (var key in o) {\n                  if (o.hasOwnProperty(key)) {\n                    clone[key] = deepClone(o[key], visited);\n                  }\n                }\n                return (\n                  /** @type {any} */\n                  clone\n                );\n              case \"Array\":\n                id = _.util.objId(o);\n                if (visited[id]) {\n                  return visited[id];\n                }\n                clone = [];\n                visited[id] = clone;\n                /** @type {Array} */\n                /** @type {any} */\n                o.forEach(function(v, i) {\n                  clone[i] = deepClone(v, visited);\n                });\n                return (\n                  /** @type {any} */\n                  clone\n                );\n              default:\n                return o;\n            }\n          },\n          /**\n           * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n           *\n           * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n           *\n           * @param {Element} element\n           * @returns {string}\n           */\n          getLanguage: function(element) {\n            while (element) {\n              var m = lang.exec(element.className);\n              if (m) {\n                return m[1].toLowerCase();\n              }\n              element = element.parentElement;\n            }\n            return \"none\";\n          },\n          /**\n           * Sets the Prism `language-xxxx` class of the given element.\n           *\n           * @param {Element} element\n           * @param {string} language\n           * @returns {void}\n           */\n          setLanguage: function(element, language) {\n            element.className = element.className.replace(RegExp(lang, \"gi\"), \"\");\n            element.classList.add(\"language-\" + language);\n          },\n          /**\n           * Returns whether a given class is active for `element`.\n           *\n           * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n           * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n           * given class is just the given class with a `no-` prefix.\n           *\n           * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n           * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n           * ancestors have the given class or the negated version of it, then the default activation will be returned.\n           *\n           * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n           * version of it, the class is considered active.\n           *\n           * @param {Element} element\n           * @param {string} className\n           * @param {boolean} [defaultActivation=false]\n           * @returns {boolean}\n           */\n          isActive: function(element, className, defaultActivation) {\n            var no = \"no-\" + className;\n            while (element) {\n              var classList = element.classList;\n              if (classList.contains(className)) {\n                return true;\n              }\n              if (classList.contains(no)) {\n                return false;\n              }\n              element = element.parentElement;\n            }\n            return !!defaultActivation;\n          }\n        },\n        /**\n         * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n         *\n         * @namespace\n         * @memberof Prism\n         * @public\n         */\n        languages: {\n          /**\n           * The grammar for plain, unformatted text.\n           */\n          plain: plainTextGrammar,\n          plaintext: plainTextGrammar,\n          text: plainTextGrammar,\n          txt: plainTextGrammar,\n          /**\n           * Creates a deep copy of the language with the given id and appends the given tokens.\n           *\n           * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n           * will be overwritten at its original position.\n           *\n           * ## Best practices\n           *\n           * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n           * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n           * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n           *\n           * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n           * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n           *\n           * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n           * @param {Grammar} redef The new tokens to append.\n           * @returns {Grammar} The new language created.\n           * @public\n           * @example\n           * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n           *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n           *     // at its original position\n           *     'comment': { ... },\n           *     // CSS doesn't have a 'color' token, so this token will be appended\n           *     'color': /\\b(?:red|green|blue)\\b/\n           * });\n           */\n          extend: function(id, redef) {\n            var lang2 = _.util.clone(_.languages[id]);\n            for (var key in redef) {\n              lang2[key] = redef[key];\n            }\n            return lang2;\n          },\n          /**\n           * Inserts tokens _before_ another token in a language definition or any other grammar.\n           *\n           * ## Usage\n           *\n           * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n           * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n           * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n           * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n           * this:\n           *\n           * ```js\n           * Prism.languages.markup.style = {\n           *     // token\n           * };\n           * ```\n           *\n           * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n           * before existing tokens. For the CSS example above, you would use it like this:\n           *\n           * ```js\n           * Prism.languages.insertBefore('markup', 'cdata', {\n           *     'style': {\n           *         // token\n           *     }\n           * });\n           * ```\n           *\n           * ## Special cases\n           *\n           * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n           * will be ignored.\n           *\n           * This behavior can be used to insert tokens after `before`:\n           *\n           * ```js\n           * Prism.languages.insertBefore('markup', 'comment', {\n           *     'comment': Prism.languages.markup.comment,\n           *     // tokens after 'comment'\n           * });\n           * ```\n           *\n           * ## Limitations\n           *\n           * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n           * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n           * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n           * deleting properties which is necessary to insert at arbitrary positions.\n           *\n           * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n           * Instead, it will create a new object and replace all references to the target object with the new one. This\n           * can be done without temporarily deleting properties, so the iteration order is well-defined.\n           *\n           * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n           * you hold the target object in a variable, then the value of the variable will not change.\n           *\n           * ```js\n           * var oldMarkup = Prism.languages.markup;\n           * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n           *\n           * assert(oldMarkup !== Prism.languages.markup);\n           * assert(newMarkup === Prism.languages.markup);\n           * ```\n           *\n           * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n           * object to be modified.\n           * @param {string} before The key to insert before.\n           * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n           * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n           * object to be modified.\n           *\n           * Defaults to `Prism.languages`.\n           * @returns {Grammar} The new grammar object.\n           * @public\n           */\n          insertBefore: function(inside, before, insert, root) {\n            root = root || /** @type {any} */\n            _.languages;\n            var grammar = root[inside];\n            var ret = {};\n            for (var token in grammar) {\n              if (grammar.hasOwnProperty(token)) {\n                if (token == before) {\n                  for (var newToken in insert) {\n                    if (insert.hasOwnProperty(newToken)) {\n                      ret[newToken] = insert[newToken];\n                    }\n                  }\n                }\n                if (!insert.hasOwnProperty(token)) {\n                  ret[token] = grammar[token];\n                }\n              }\n            }\n            var old = root[inside];\n            root[inside] = ret;\n            _.languages.DFS(_.languages, function(key, value) {\n              if (value === old && key != inside) {\n                this[key] = ret;\n              }\n            });\n            return ret;\n          },\n          // Traverse a language definition with Depth First Search\n          DFS: function DFS(o, callback, type, visited) {\n            visited = visited || {};\n            var objId = _.util.objId;\n            for (var i in o) {\n              if (o.hasOwnProperty(i)) {\n                callback.call(o, i, o[i], type || i);\n                var property = o[i];\n                var propertyType = _.util.type(property);\n                if (propertyType === \"Object\" && !visited[objId(property)]) {\n                  visited[objId(property)] = true;\n                  DFS(property, callback, null, visited);\n                } else if (propertyType === \"Array\" && !visited[objId(property)]) {\n                  visited[objId(property)] = true;\n                  DFS(property, callback, i, visited);\n                }\n              }\n            }\n          }\n        },\n        plugins: {},\n        /**\n         * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n         * and the language definitions to use, and returns a string with the HTML produced.\n         *\n         * The following hooks will be run:\n         * 1. `before-tokenize`\n         * 2. `after-tokenize`\n         * 3. `wrap`: On each {@link Token}.\n         *\n         * @param {string} text A string with the code to be highlighted.\n         * @param {Grammar} grammar An object containing the tokens to use.\n         *\n         * Usually a language definition like `Prism.languages.markup`.\n         * @param {string} language The name of the language definition passed to `grammar`.\n         * @returns {string} The highlighted HTML.\n         * @memberof Prism\n         * @public\n         * @example\n         * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n         */\n        highlight: function(text, grammar, language) {\n          var env = {\n            code: text,\n            grammar,\n            language\n          };\n          _.hooks.run(\"before-tokenize\", env);\n          if (!env.grammar) {\n            throw new Error('The language \"' + env.language + '\" has no grammar.');\n          }\n          env.tokens = _.tokenize(env.code, env.grammar);\n          _.hooks.run(\"after-tokenize\", env);\n          return Token.stringify(_.util.encode(env.tokens), env.language);\n        },\n        /**\n         * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n         * and the language definitions to use, and returns an array with the tokenized code.\n         *\n         * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n         *\n         * This method could be useful in other contexts as well, as a very crude parser.\n         *\n         * @param {string} text A string with the code to be highlighted.\n         * @param {Grammar} grammar An object containing the tokens to use.\n         *\n         * Usually a language definition like `Prism.languages.markup`.\n         * @returns {TokenStream} An array of strings and tokens, a token stream.\n         * @memberof Prism\n         * @public\n         * @example\n         * let code = `var foo = 0;`;\n         * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n         * tokens.forEach(token => {\n         *     if (token instanceof Prism.Token && token.type === 'number') {\n         *         console.log(`Found numeric literal: ${token.content}`);\n         *     }\n         * });\n         */\n        tokenize: function(text, grammar) {\n          var rest = grammar.rest;\n          if (rest) {\n            for (var token in rest) {\n              grammar[token] = rest[token];\n            }\n            delete grammar.rest;\n          }\n          var tokenList = new LinkedList();\n          addAfter(tokenList, tokenList.head, text);\n          matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n          return toArray(tokenList);\n        },\n        /**\n         * @namespace\n         * @memberof Prism\n         * @public\n         */\n        hooks: {\n          all: {},\n          /**\n           * Adds the given callback to the list of callbacks for the given hook.\n           *\n           * The callback will be invoked when the hook it is registered for is run.\n           * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n           *\n           * One callback function can be registered to multiple hooks and the same hook multiple times.\n           *\n           * @param {string} name The name of the hook.\n           * @param {HookCallback} callback The callback function which is given environment variables.\n           * @public\n           */\n          add: function(name, callback) {\n            var hooks2 = _.hooks.all;\n            hooks2[name] = hooks2[name] || [];\n            hooks2[name].push(callback);\n          },\n          /**\n           * Runs a hook invoking all registered callbacks with the given environment variables.\n           *\n           * Callbacks will be invoked synchronously and in the order in which they were registered.\n           *\n           * @param {string} name The name of the hook.\n           * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n           * @public\n           */\n          run: function(name, env) {\n            var callbacks = _.hooks.all[name];\n            if (!callbacks || !callbacks.length) {\n              return;\n            }\n            for (var i = 0, callback; callback = callbacks[i++]; ) {\n              callback(env);\n            }\n          }\n        },\n        Token\n      };\n      function Token(type, content, alias, matchedStr) {\n        this.type = type;\n        this.content = content;\n        this.alias = alias;\n        this.length = (matchedStr || \"\").length | 0;\n      }\n      Token.stringify = function stringify(o, language) {\n        if (typeof o == \"string\") {\n          return o;\n        }\n        if (Array.isArray(o)) {\n          var s = \"\";\n          o.forEach(function(e) {\n            s += stringify(e, language);\n          });\n          return s;\n        }\n        var env = {\n          type: o.type,\n          content: stringify(o.content, language),\n          tag: \"span\",\n          classes: [\"token\", o.type],\n          attributes: {},\n          language\n        };\n        var aliases = o.alias;\n        if (aliases) {\n          if (Array.isArray(aliases)) {\n            Array.prototype.push.apply(env.classes, aliases);\n          } else {\n            env.classes.push(aliases);\n          }\n        }\n        _.hooks.run(\"wrap\", env);\n        var attributes = \"\";\n        for (var name in env.attributes) {\n          attributes += \" \" + name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n        }\n        return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + attributes + \">\" + env.content + \"</\" + env.tag + \">\";\n      };\n      function matchPattern(pattern, pos, text, lookbehind) {\n        pattern.lastIndex = pos;\n        var match = pattern.exec(text);\n        if (match && lookbehind && match[1]) {\n          var lookbehindLength = match[1].length;\n          match.index += lookbehindLength;\n          match[0] = match[0].slice(lookbehindLength);\n        }\n        return match;\n      }\n      function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n        for (var token in grammar) {\n          if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n            continue;\n          }\n          var patterns = grammar[token];\n          patterns = Array.isArray(patterns) ? patterns : [patterns];\n          for (var j = 0; j < patterns.length; ++j) {\n            if (rematch && rematch.cause == token + \",\" + j) {\n              return;\n            }\n            var patternObj = patterns[j];\n            var inside = patternObj.inside;\n            var lookbehind = !!patternObj.lookbehind;\n            var greedy = !!patternObj.greedy;\n            var alias = patternObj.alias;\n            if (greedy && !patternObj.pattern.global) {\n              var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n              patternObj.pattern = RegExp(patternObj.pattern.source, flags + \"g\");\n            }\n            var pattern = patternObj.pattern || patternObj;\n            for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n              if (rematch && pos >= rematch.reach) {\n                break;\n              }\n              var str = currentNode.value;\n              if (tokenList.length > text.length) {\n                return;\n              }\n              if (str instanceof Token) {\n                continue;\n              }\n              var removeCount = 1;\n              var match;\n              if (greedy) {\n                match = matchPattern(pattern, pos, text, lookbehind);\n                if (!match || match.index >= text.length) {\n                  break;\n                }\n                var from = match.index;\n                var to = match.index + match[0].length;\n                var p = pos;\n                p += currentNode.value.length;\n                while (from >= p) {\n                  currentNode = currentNode.next;\n                  p += currentNode.value.length;\n                }\n                p -= currentNode.value.length;\n                pos = p;\n                if (currentNode.value instanceof Token) {\n                  continue;\n                }\n                for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === \"string\"); k = k.next) {\n                  removeCount++;\n                  p += k.value.length;\n                }\n                removeCount--;\n                str = text.slice(pos, p);\n                match.index -= pos;\n              } else {\n                match = matchPattern(pattern, 0, str, lookbehind);\n                if (!match) {\n                  continue;\n                }\n              }\n              var from = match.index;\n              var matchStr = match[0];\n              var before = str.slice(0, from);\n              var after = str.slice(from + matchStr.length);\n              var reach = pos + str.length;\n              if (rematch && reach > rematch.reach) {\n                rematch.reach = reach;\n              }\n              var removeFrom = currentNode.prev;\n              if (before) {\n                removeFrom = addAfter(tokenList, removeFrom, before);\n                pos += before.length;\n              }\n              removeRange(tokenList, removeFrom, removeCount);\n              var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n              currentNode = addAfter(tokenList, removeFrom, wrapped);\n              if (after) {\n                addAfter(tokenList, currentNode, after);\n              }\n              if (removeCount > 1) {\n                var nestedRematch = {\n                  cause: token + \",\" + j,\n                  reach\n                };\n                matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                if (rematch && nestedRematch.reach > rematch.reach) {\n                  rematch.reach = nestedRematch.reach;\n                }\n              }\n            }\n          }\n        }\n      }\n      function LinkedList() {\n        var head = { value: null, prev: null, next: null };\n        var tail = { value: null, prev: head, next: null };\n        head.next = tail;\n        this.head = head;\n        this.tail = tail;\n        this.length = 0;\n      }\n      function addAfter(list, node, value) {\n        var next = node.next;\n        var newNode = { value, prev: node, next };\n        node.next = newNode;\n        next.prev = newNode;\n        list.length++;\n        return newNode;\n      }\n      function removeRange(list, node, count) {\n        var next = node.next;\n        for (var i = 0; i < count && next !== list.tail; i++) {\n          next = next.next;\n        }\n        node.next = next;\n        next.prev = node;\n        list.length -= i;\n      }\n      function toArray(list) {\n        var array = [];\n        var node = list.head.next;\n        while (node !== list.tail) {\n          array.push(node.value);\n          node = node.next;\n        }\n        return array;\n      }\n      return _;\n    }();\n    module.exports = Prism2;\n    Prism2.default = Prism2;\n  }\n});\n\n// src/prism-langs.ts\nvar Prism = __toESM(require_prism());\nPrism.languages.markup = { comment: { pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/, greedy: true }, prolog: { pattern: /<\\?[\\s\\S]+?\\?>/, greedy: true }, doctype: { pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i, greedy: true, inside: { \"internal-subset\": { pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/, lookbehind: true, greedy: true, inside: null }, string: { pattern: /\"[^\"]*\"|'[^']*'/, greedy: true }, punctuation: /^<!|>$|[[\\]]/, \"doctype-tag\": /^DOCTYPE/i, name: /[^\\s<>'\"]+/ } }, cdata: { pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i, greedy: true }, tag: { pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/, greedy: true, inside: { tag: { pattern: /^<\\/?[^\\s>\\/]+/, inside: { punctuation: /^<\\/?/, namespace: /^[^\\s>\\/:]+:/ } }, \"special-attr\": [], \"attr-value\": { pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/, inside: { punctuation: [{ pattern: /^=/, alias: \"attr-equals\" }, { pattern: /^(\\s*)[\"']|[\"']$/, lookbehind: true }] } }, punctuation: /\\/?>/, \"attr-name\": { pattern: /[^\\s>\\/]+/, inside: { namespace: /^[^\\s>\\/:]+:/ } } } }, entity: [{ pattern: /&[\\da-z]{1,8};/i, alias: \"named-entity\" }, /&#x?[\\da-f]{1,8};/i] }, Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity = Prism.languages.markup.entity, Prism.languages.markup.doctype.inside[\"internal-subset\"].inside = Prism.languages.markup, Prism.hooks.add(\"wrap\", function(e) {\n  \"entity\" === e.type && (e.attributes.title = e.content.replace(/&amp;/, \"&\"));\n}), Object.defineProperty(Prism.languages.markup.tag, \"addInlined\", { value: function(e, n) {\n  var t = {}, t = (t[\"language-\" + n] = { pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i, lookbehind: true, inside: Prism.languages[n] }, t.cdata = /^<!\\[CDATA\\[|\\]\\]>$/i, { \"included-cdata\": { pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i, inside: t } }), n = (t[\"language-\" + n] = { pattern: /[\\s\\S]+/, inside: Prism.languages[n] }, {});\n  n[e] = { pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function() {\n    return e;\n  }), \"i\"), lookbehind: true, greedy: true, inside: t }, Prism.languages.insertBefore(\"markup\", \"cdata\", n);\n} }), Object.defineProperty(Prism.languages.markup.tag, \"addAttribute\", { value: function(e, n) {\n  Prism.languages.markup.tag.inside[\"special-attr\"].push({ pattern: RegExp(/(^|[\"'\\s])/.source + \"(?:\" + e + \")\" + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, \"i\"), lookbehind: true, inside: { \"attr-name\": /^[^\\s=]+/, \"attr-value\": { pattern: /=[\\s\\S]+/, inside: { value: { pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/, lookbehind: true, alias: [n, \"language-\" + n], inside: Prism.languages[n] }, punctuation: [{ pattern: /^=/, alias: \"attr-equals\" }, /\"|'/] } } } });\n} }), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup, Prism.languages.xml = Prism.languages.extend(\"markup\", {}), Prism.languages.ssml = Prism.languages.xml, Prism.languages.atom = Prism.languages.xml, Prism.languages.rss = Prism.languages.xml, function(e) {\n  var n = { pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/, alias: \"escape\" }, t = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/, a = \"(?:[^\\\\\\\\-]|\" + t.source + \")\", a = RegExp(a + \"-\" + a), r = { pattern: /(<|')[^<>']+(?=[>']$)/, lookbehind: true, alias: \"variable\" };\n  e.languages.regex = { \"char-class\": { pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/, lookbehind: true, inside: { \"char-class-negation\": { pattern: /(^\\[)\\^/, lookbehind: true, alias: \"operator\" }, \"char-class-punctuation\": { pattern: /^\\[|\\]$/, alias: \"punctuation\" }, range: { pattern: a, inside: { escape: t, \"range-punctuation\": { pattern: /-/, alias: \"operator\" } } }, \"special-escape\": n, \"char-set\": { pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i, alias: \"class-name\" }, escape: t } }, \"special-escape\": n, \"char-set\": { pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i, alias: \"class-name\" }, backreference: [{ pattern: /\\\\(?![123][0-7]{2})[1-9]/, alias: \"keyword\" }, { pattern: /\\\\k<[^<>']+>/, alias: \"keyword\", inside: { \"group-name\": r } }], anchor: { pattern: /[$^]|\\\\[ABbGZz]/, alias: \"function\" }, escape: t, group: [{ pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/, alias: \"punctuation\", inside: { \"group-name\": r } }, { pattern: /\\)/, alias: \"punctuation\" }], quantifier: { pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/, alias: \"number\" }, alternation: { pattern: /\\|/, alias: \"keyword\" } };\n}(Prism), Prism.languages.clike = { comment: [{ pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, lookbehind: true, greedy: true }, { pattern: /(^|[^\\\\:])\\/\\/.*/, lookbehind: true, greedy: true }], string: { pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, greedy: true }, \"class-name\": { pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i, lookbehind: true, inside: { punctuation: /[.\\\\]/ } }, keyword: /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/, boolean: /\\b(?:false|true)\\b/, function: /\\b\\w+(?=\\()/, number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i, operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/, punctuation: /[{}[\\];(),.:]/ }, Prism.languages.javascript = Prism.languages.extend(\"clike\", { \"class-name\": [Prism.languages.clike[\"class-name\"], { pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/, lookbehind: true }], keyword: [{ pattern: /((?:^|\\})\\s*)catch\\b/, lookbehind: true }, { pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/, lookbehind: true }], function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/, number: { pattern: RegExp(/(^|[^\\w$])/.source + \"(?:\" + /NaN|Infinity/.source + \"|\" + /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + /\\d+(?:_\\d+)*n/.source + \"|\" + /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source + \")\" + /(?![\\w$])/.source), lookbehind: true }, operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/ }), Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/, Prism.languages.insertBefore(\"javascript\", \"keyword\", { regex: { pattern: RegExp(/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + /\\//.source + \"(?:\" + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + \"|\" + /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + \")\" + /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source), lookbehind: true, greedy: true, inside: { \"regex-source\": { pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/, lookbehind: true, alias: \"language-regex\", inside: Prism.languages.regex }, \"regex-delimiter\": /^\\/|\\/$/, \"regex-flags\": /^[a-z]+$/ } }, \"function-variable\": { pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/, alias: \"function\" }, parameter: [{ pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/, lookbehind: true, inside: Prism.languages.javascript }, { pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i, lookbehind: true, inside: Prism.languages.javascript }, { pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/, lookbehind: true, inside: Prism.languages.javascript }, { pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/, lookbehind: true, inside: Prism.languages.javascript }], constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/ }), Prism.languages.insertBefore(\"javascript\", \"string\", { hashbang: { pattern: /^#!.*/, greedy: true, alias: \"comment\" }, \"template-string\": { pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/, greedy: true, inside: { \"template-punctuation\": { pattern: /^`|`$/, alias: \"string\" }, interpolation: { pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/, lookbehind: true, inside: { \"interpolation-punctuation\": { pattern: /^\\$\\{|\\}$/, alias: \"punctuation\" }, rest: Prism.languages.javascript } }, string: /[\\s\\S]+/ } }, \"string-property\": { pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m, lookbehind: true, greedy: true, alias: \"property\" } }), Prism.languages.insertBefore(\"javascript\", \"operator\", { \"literal-property\": { pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m, lookbehind: true, alias: \"property\" } }), Prism.languages.markup && (Prism.languages.markup.tag.addInlined(\"script\", \"javascript\"), Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, \"javascript\")), Prism.languages.js = Prism.languages.javascript, Prism.languages.actionscript = Prism.languages.extend(\"javascript\", { keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/, operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/ }), Prism.languages.actionscript[\"class-name\"].alias = \"function\", delete Prism.languages.actionscript.parameter, delete Prism.languages.actionscript[\"literal-property\"], Prism.languages.markup && Prism.languages.insertBefore(\"actionscript\", \"string\", { xml: { pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/, lookbehind: true, inside: Prism.languages.markup } }), function(e) {\n  var n = /#(?!\\{).+/, t = { pattern: /#\\{[^}]+\\}/, alias: \"variable\" };\n  e.languages.coffeescript = e.languages.extend(\"javascript\", { comment: n, string: [{ pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/, greedy: true }, { pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/, greedy: true, inside: { interpolation: t } }], keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/, \"class-member\": { pattern: /@(?!\\d)\\w+/, alias: \"variable\" } }), e.languages.insertBefore(\"coffeescript\", \"comment\", { \"multiline-comment\": { pattern: /###[\\s\\S]+?###/, alias: \"comment\" }, \"block-regex\": { pattern: /\\/{3}[\\s\\S]*?\\/{3}/, alias: \"regex\", inside: { comment: n, interpolation: t } } }), e.languages.insertBefore(\"coffeescript\", \"string\", { \"inline-javascript\": { pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/, inside: { delimiter: { pattern: /^`|`$/, alias: \"punctuation\" }, script: { pattern: /[\\s\\S]+/, alias: \"language-javascript\", inside: e.languages.javascript } } }, \"multiline-string\": [{ pattern: /'''[\\s\\S]*?'''/, greedy: true, alias: \"string\" }, { pattern: /\"\"\"[\\s\\S]*?\"\"\"/, greedy: true, alias: \"string\", inside: { interpolation: t } }] }), e.languages.insertBefore(\"coffeescript\", \"keyword\", { property: /(?!\\d)\\w+(?=\\s*:(?!:))/ }), delete e.languages.coffeescript[\"template-string\"], e.languages.coffee = e.languages.coffeescript;\n}(Prism), function(l) {\n  var e = l.languages.javadoclike = { parameter: { pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m, lookbehind: true }, keyword: { pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m, lookbehind: true }, punctuation: /[{}]/ };\n  Object.defineProperty(e, \"addSupport\", { value: function(e2, o) {\n    (e2 = \"string\" == typeof e2 ? [e2] : e2).forEach(function(e3) {\n      var n = function(e4) {\n        e4.inside || (e4.inside = {}), e4.inside.rest = o;\n      }, t = \"doc-comment\";\n      if (a = l.languages[e3]) {\n        var a, r = a[t];\n        if ((r = r ? r : (a = l.languages.insertBefore(e3, \"comment\", { \"doc-comment\": { pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/, lookbehind: true, alias: \"comment\" } }))[t]) instanceof RegExp && (r = a[t] = { pattern: r }), Array.isArray(r))\n          for (var s = 0, i = r.length; s < i; s++)\n            r[s] instanceof RegExp && (r[s] = { pattern: r[s] }), n(r[s]);\n        else\n          n(r);\n      }\n    });\n  } }), e.addSupport([\"java\", \"javascript\", \"php\"], e);\n}(Prism), function(e) {\n  var n = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/, n = (e.languages.css = { comment: /\\/\\*[\\s\\S]*?\\*\\//, atrule: { pattern: RegExp(\"@[\\\\w-](?:\" + /[^;{\\s\"']|\\s+(?!\\s)/.source + \"|\" + n.source + \")*?\" + /(?:;|(?=\\s*\\{))/.source), inside: { rule: /^@[\\w-]+/, \"selector-function-argument\": { pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/, lookbehind: true, alias: \"selector\" }, keyword: { pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/, lookbehind: true } } }, url: { pattern: RegExp(\"\\\\burl\\\\((?:\" + n.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"), greedy: true, inside: { function: /^url/i, punctuation: /^\\(|\\)$/, string: { pattern: RegExp(\"^\" + n.source + \"$\"), alias: \"url\" } } }, selector: { pattern: RegExp(`(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"'\\\\s]|\\\\s+(?![\\\\s{])|` + n.source + \")*(?=\\\\s*\\\\{)\"), lookbehind: true }, string: { pattern: n, greedy: true }, property: { pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i, lookbehind: true }, important: /!important\\b/i, function: { pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i, lookbehind: true }, punctuation: /[(){};:,]/ }, e.languages.css.atrule.inside.rest = e.languages.css, e.languages.markup);\n  n && (n.tag.addInlined(\"style\", \"css\"), n.tag.addAttribute(\"style\", \"css\"));\n}(Prism), function(e) {\n  var n = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, n = (e.languages.css.selector = { pattern: e.languages.css.selector.pattern, lookbehind: true, inside: n = { \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/, \"pseudo-class\": /:[-\\w]+/, class: /\\.[-\\w]+/, id: /#[-\\w]+/, attribute: { pattern: RegExp(`\\\\[(?:[^[\\\\]\"']|` + n.source + \")*\\\\]\"), greedy: true, inside: { punctuation: /^\\[|\\]$/, \"case-sensitivity\": { pattern: /(\\s)[si]$/i, lookbehind: true, alias: \"keyword\" }, namespace: { pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/, lookbehind: true, inside: { punctuation: /\\|$/ } }, \"attr-name\": { pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/, lookbehind: true }, \"attr-value\": [n, { pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/, lookbehind: true }], operator: /[|~*^$]?=/ } }, \"n-th\": [{ pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/, lookbehind: true, inside: { number: /[\\dn]+/, operator: /[+-]/ } }, { pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i, lookbehind: true }], combinator: />|\\+|~|\\|\\|/, punctuation: /[(),]/ } }, e.languages.css.atrule.inside[\"selector-function-argument\"].inside = n, e.languages.insertBefore(\"css\", \"property\", { variable: { pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i, lookbehind: true } }), { pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/, lookbehind: true }), t = { pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/, lookbehind: true };\n  e.languages.insertBefore(\"css\", \"function\", { operator: { pattern: /(\\s)[+\\-*\\/](?=\\s)/, lookbehind: true }, hexcode: { pattern: /\\B#[\\da-f]{3,8}\\b/i, alias: \"color\" }, color: [{ pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i, lookbehind: true }, { pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i, inside: { unit: n, number: t, function: /[\\w-]+(?=\\()/, punctuation: /[(),]/ } }], entity: /\\\\[\\da-f]{1,8}/i, unit: n, number: t });\n}(Prism), function(e) {\n  var n = /[*&][^\\s[\\]{},]+/, t = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/, a = \"(?:\" + t.source + \"(?:[ \t]+\" + n.source + \")?|\" + n.source + \"(?:[ \t]+\" + t.source + \")?)\", r = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  }), s = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  function i(e2, n2) {\n    n2 = (n2 || \"\").replace(/m/g, \"\") + \"m\";\n    var t2 = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function() {\n      return a;\n    }).replace(/<<value>>/g, function() {\n      return e2;\n    });\n    return RegExp(t2, n2);\n  }\n  e.languages.yaml = { scalar: { pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function() {\n    return a;\n  })), lookbehind: true, alias: \"string\" }, comment: /#.*/, key: { pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function() {\n    return a;\n  }).replace(/<<key>>/g, function() {\n    return \"(?:\" + r + \"|\" + s + \")\";\n  })), lookbehind: true, greedy: true, alias: \"atrule\" }, directive: { pattern: /(^[ \\t]*)%.+/m, lookbehind: true, alias: \"important\" }, datetime: { pattern: i(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source), lookbehind: true, alias: \"number\" }, boolean: { pattern: i(/false|true/.source, \"i\"), lookbehind: true, alias: \"important\" }, null: { pattern: i(/null|~/.source, \"i\"), lookbehind: true, alias: \"important\" }, string: { pattern: i(s), lookbehind: true, greedy: true }, number: { pattern: i(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, \"i\"), lookbehind: true }, tag: t, important: n, punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./ }, e.languages.yml = e.languages.yaml;\n}(Prism), function(o) {\n  var n = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  function e(e2) {\n    return e2 = e2.replace(/<inner>/g, function() {\n      return n;\n    }), RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + \"(?:\" + e2 + \")\");\n  }\n  var t = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source, a = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function() {\n    return t;\n  }), r = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source, l = (o.languages.markdown = o.languages.extend(\"markup\", {}), o.languages.insertBefore(\"markdown\", \"prolog\", { \"front-matter-block\": { pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/, lookbehind: true, greedy: true, inside: { punctuation: /^---|---$/, \"front-matter\": { pattern: /\\S+(?:\\s+\\S+)*/, alias: [\"yaml\", \"language-yaml\"], inside: o.languages.yaml } } }, blockquote: { pattern: /^>(?:[\\t ]*>)*/m, alias: \"punctuation\" }, table: { pattern: RegExp(\"^\" + a + r + \"(?:\" + a + \")*\", \"m\"), inside: { \"table-data-rows\": { pattern: RegExp(\"^(\" + a + r + \")(?:\" + a + \")*$\"), lookbehind: true, inside: { \"table-data\": { pattern: RegExp(t), inside: o.languages.markdown }, punctuation: /\\|/ } }, \"table-line\": { pattern: RegExp(\"^(\" + a + \")\" + r + \"$\"), lookbehind: true, inside: { punctuation: /\\||:?-{3,}:?/ } }, \"table-header-row\": { pattern: RegExp(\"^\" + a + \"$\"), inside: { \"table-header\": { pattern: RegExp(t), alias: \"important\", inside: o.languages.markdown }, punctuation: /\\|/ } } } }, code: [{ pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/, lookbehind: true, alias: \"keyword\" }, { pattern: /^```[\\s\\S]*?^```$/m, greedy: true, inside: { \"code-block\": { pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m, lookbehind: true }, \"code-language\": { pattern: /^(```).+/, lookbehind: true }, punctuation: /```/ } }], title: [{ pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m, alias: \"important\", inside: { punctuation: /==+$|--+$/ } }, { pattern: /(^\\s*)#.+/m, lookbehind: true, alias: \"important\", inside: { punctuation: /^#+|#+$/ } }], hr: { pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m, lookbehind: true, alias: \"punctuation\" }, list: { pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m, lookbehind: true, alias: \"punctuation\" }, \"url-reference\": { pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/, inside: { variable: { pattern: /^(!?\\[)[^\\]]+/, lookbehind: true }, string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/, punctuation: /^[\\[\\]!:]|[<>]/ }, alias: \"url\" }, bold: { pattern: e(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^..)[\\s\\S]+(?=..$)/, lookbehind: true, inside: {} }, punctuation: /\\*\\*|__/ } }, italic: { pattern: e(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^.)[\\s\\S]+(?=.$)/, lookbehind: true, inside: {} }, punctuation: /[*_]/ } }, strike: { pattern: e(/(~~?)(?:(?!~)<inner>)+\\2/.source), lookbehind: true, greedy: true, inside: { content: { pattern: /(^~~?)[\\s\\S]+(?=\\1$)/, lookbehind: true, inside: {} }, punctuation: /~~?/ } }, \"code-snippet\": { pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/, lookbehind: true, greedy: true, alias: [\"code\", \"keyword\"] }, url: { pattern: e(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source), lookbehind: true, greedy: true, inside: { operator: /^!/, content: { pattern: /(^\\[)[^\\]]+(?=\\])/, lookbehind: true, inside: {} }, variable: { pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/, lookbehind: true }, url: { pattern: /(^\\]\\()[^\\s)]+/, lookbehind: true }, string: { pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/, lookbehind: true } } } }), [\"url\", \"bold\", \"italic\", \"strike\"].forEach(function(n2) {\n    [\"url\", \"bold\", \"italic\", \"strike\", \"code-snippet\"].forEach(function(e2) {\n      n2 !== e2 && (o.languages.markdown[n2].inside.content.inside[e2] = o.languages.markdown[e2]);\n    });\n  }), o.hooks.add(\"after-tokenize\", function(e2) {\n    \"markdown\" !== e2.language && \"md\" !== e2.language || !function e3(n2) {\n      if (n2 && \"string\" != typeof n2)\n        for (var t2 = 0, a2 = n2.length; t2 < a2; t2++) {\n          var r2, s = n2[t2];\n          \"code\" !== s.type ? e3(s.content) : (r2 = s.content[1], s = s.content[3], r2 && s && \"code-language\" === r2.type && \"code-block\" === s.type && \"string\" == typeof r2.content && (r2 = r2.content.replace(/\\b#/g, \"sharp\").replace(/\\b\\+\\+/g, \"pp\"), r2 = \"language-\" + (r2 = (/[a-z][\\w-]*/i.exec(r2) || [\"\"])[0].toLowerCase()), s.alias ? \"string\" == typeof s.alias ? s.alias = [s.alias, r2] : s.alias.push(r2) : s.alias = [r2]));\n        }\n    }(e2.tokens);\n  }), o.hooks.add(\"wrap\", function(e2) {\n    if (\"code-block\" === e2.type) {\n      for (var n2 = \"\", t2 = 0, a2 = e2.classes.length; t2 < a2; t2++) {\n        var r2 = e2.classes[t2], r2 = /language-(.+)/.exec(r2);\n        if (r2) {\n          n2 = r2[1];\n          break;\n        }\n      }\n      var s, i = o.languages[n2];\n      i ? e2.content = o.highlight(function(e3) {\n        e3 = e3.replace(l, \"\");\n        return e3 = e3.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function(e4, n3) {\n          var t3;\n          return \"#\" === (n3 = n3.toLowerCase())[0] ? (t3 = \"x\" === n3[1] ? parseInt(n3.slice(2), 16) : Number(n3.slice(1)), c(t3)) : u[n3] || e4;\n        });\n      }(e2.content), i, n2) : n2 && \"none\" !== n2 && o.plugins.autoloader && (s = \"md-\" + (/* @__PURE__ */ new Date()).valueOf() + \"-\" + Math.floor(1e16 * Math.random()), e2.attributes.id = s, o.plugins.autoloader.loadLanguages(n2, function() {\n        var e3 = document.getElementById(s);\n        e3 && (e3.innerHTML = o.highlight(e3.textContent, o.languages[n2], n2));\n      }));\n    }\n  }), RegExp(o.languages.markup.tag.pattern.source, \"gi\")), u = { amp: \"&\", lt: \"<\", gt: \">\", quot: '\"' }, c = String.fromCodePoint || String.fromCharCode;\n  o.languages.md = o.languages.markdown;\n}(Prism), Prism.languages.graphql = { comment: /#.*/, description: { pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i, greedy: true, alias: \"string\", inside: { \"language-markdown\": { pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/, lookbehind: true, inside: Prism.languages.markdown } } }, string: { pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/, greedy: true }, number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i, boolean: /\\b(?:false|true)\\b/, variable: /\\$[a-z_]\\w*/i, directive: { pattern: /@[a-z_]\\w*/i, alias: \"function\" }, \"attr-name\": { pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i, greedy: true }, \"atom-input\": { pattern: /\\b[A-Z]\\w*Input\\b/, alias: \"class-name\" }, scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/, constant: /\\b[A-Z][A-Z_\\d]*\\b/, \"class-name\": { pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/, lookbehind: true }, fragment: { pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/, lookbehind: true, alias: \"function\" }, \"definition-mutation\": { pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/, lookbehind: true, alias: \"function\" }, \"definition-query\": { pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/, lookbehind: true, alias: \"function\" }, keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/, operator: /[!=|&]|\\.{3}/, \"property-query\": /\\w+(?=\\s*\\()/, object: /\\w+(?=\\s*\\{)/, punctuation: /[!(){}\\[\\]:=,]/, property: /\\w+/ }, Prism.hooks.add(\"after-tokenize\", function(e) {\n  if (\"graphql\" === e.language)\n    for (var i = e.tokens.filter(function(e2) {\n      return \"string\" != typeof e2 && \"comment\" !== e2.type && \"scalar\" !== e2.type;\n    }), o = 0; o < i.length; ) {\n      var n = i[o++];\n      if (\"keyword\" === n.type && \"mutation\" === n.content) {\n        var t = [];\n        if (p([\"definition-mutation\", \"punctuation\"]) && \"(\" === c(1).content) {\n          o += 2;\n          var a = d(/^\\($/, /^\\)$/);\n          if (-1 === a)\n            continue;\n          for (; o < a; o++) {\n            var r = c(0);\n            \"variable\" === r.type && (g(r, \"variable-input\"), t.push(r.content));\n          }\n          o = a + 1;\n        }\n        if (p([\"punctuation\", \"property-query\"]) && \"{\" === c(0).content && (o++, g(c(0), \"property-mutation\"), 0 < t.length)) {\n          var s = d(/^\\{$/, /^\\}$/);\n          if (-1 !== s)\n            for (var l = o; l < s; l++) {\n              var u = i[l];\n              \"variable\" === u.type && 0 <= t.indexOf(u.content) && g(u, \"variable-input\");\n            }\n        }\n      }\n    }\n  function c(e2) {\n    return i[o + e2];\n  }\n  function p(e2, n2) {\n    n2 = n2 || 0;\n    for (var t2 = 0; t2 < e2.length; t2++) {\n      var a2 = c(t2 + n2);\n      if (!a2 || a2.type !== e2[t2])\n        return;\n    }\n    return 1;\n  }\n  function d(e2, n2) {\n    for (var t2 = 1, a2 = o; a2 < i.length; a2++) {\n      var r2 = i[a2], s2 = r2.content;\n      if (\"punctuation\" === r2.type && \"string\" == typeof s2) {\n        if (e2.test(s2))\n          t2++;\n        else if (n2.test(s2) && 0 === --t2)\n          return a2;\n      }\n    }\n    return -1;\n  }\n  function g(e2, n2) {\n    var t2 = e2.alias;\n    t2 ? Array.isArray(t2) || (e2.alias = t2 = [t2]) : e2.alias = t2 = [], t2.push(n2);\n  }\n}), Prism.languages.sql = { comment: { pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/, lookbehind: true }, variable: [{ pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/, greedy: true }, /@[\\w.$]+/], string: { pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/, greedy: true, lookbehind: true }, identifier: { pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/, greedy: true, lookbehind: true, inside: { punctuation: /^`|`$/ } }, function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i, keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i, boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i, number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i, operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i, punctuation: /[;[\\]()`,.]/ }, function(b) {\n  var e = b.languages.javascript[\"template-string\"], t = e.pattern.source, m = e.inside.interpolation, f = m.inside[\"interpolation-punctuation\"], s = m.pattern.source;\n  function n(e2, n2) {\n    if (b.languages[e2])\n      return { pattern: RegExp(\"((?:\" + n2 + \")\\\\s*)\" + t), lookbehind: true, greedy: true, inside: { \"template-punctuation\": { pattern: /^`|`$/, alias: \"string\" }, \"embedded-code\": { pattern: /[\\s\\S]+/, alias: e2 } } };\n  }\n  function h(e2, n2, t2) {\n    e2 = { code: e2, grammar: n2, language: t2 };\n    return b.hooks.run(\"before-tokenize\", e2), e2.tokens = b.tokenize(e2.code, e2.grammar), b.hooks.run(\"after-tokenize\", e2), e2.tokens;\n  }\n  function l(a2, e2, r) {\n    var n2 = b.tokenize(a2, { interpolation: { pattern: RegExp(s), lookbehind: true } }), p = 0, d = {}, n2 = h(n2.map(function(e3) {\n      if (\"string\" == typeof e3)\n        return e3;\n      for (var n3, t2, e3 = e3.content; -1 !== a2.indexOf((t2 = p++, n3 = \"___\" + r.toUpperCase() + \"_\" + t2 + \"___\")); )\n        ;\n      return d[n3] = e3, n3;\n    }).join(\"\"), e2, r), g = Object.keys(d);\n    return p = 0, function e3(n3) {\n      for (var t2 = 0; t2 < n3.length; t2++) {\n        if (p >= g.length)\n          return;\n        var a3, r2, s2, i, o, l2, u2, c = n3[t2];\n        \"string\" == typeof c || \"string\" == typeof c.content ? (a3 = g[p], -1 !== (u2 = (l2 = \"string\" == typeof c ? c : c.content).indexOf(a3)) && (++p, r2 = l2.substring(0, u2), o = d[a3], s2 = void 0, (i = {})[\"interpolation-punctuation\"] = f, 3 === (i = b.tokenize(o, i)).length && ((s2 = [1, 1]).push.apply(s2, h(i[1], b.languages.javascript, \"javascript\")), i.splice.apply(i, s2)), s2 = new b.Token(\"interpolation\", i, m.alias, o), i = l2.substring(u2 + a3.length), o = [], r2 && o.push(r2), o.push(s2), i && (e3(l2 = [i]), o.push.apply(o, l2)), \"string\" == typeof c ? (n3.splice.apply(n3, [t2, 1].concat(o)), t2 += o.length - 1) : c.content = o)) : (u2 = c.content, Array.isArray(u2) ? e3(u2) : e3([u2]));\n      }\n    }(n2), new b.Token(r, n2, \"language-\" + r, a2);\n  }\n  b.languages.javascript[\"template-string\"] = [n(\"css\", /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), n(\"html\", /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), n(\"svg\", /\\bsvg/.source), n(\"markdown\", /\\b(?:markdown|md)/.source), n(\"graphql\", /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), n(\"sql\", /\\bsql/.source), e].filter(Boolean);\n  var a = { javascript: true, js: true, typescript: true, ts: true, jsx: true, tsx: true };\n  function u(e2) {\n    return \"string\" == typeof e2 ? e2 : Array.isArray(e2) ? e2.map(u).join(\"\") : u(e2.content);\n  }\n  b.hooks.add(\"after-tokenize\", function(e2) {\n    e2.language in a && !function e3(n2) {\n      for (var t2 = 0, a2 = n2.length; t2 < a2; t2++) {\n        var r, s2, i, o = n2[t2];\n        \"string\" != typeof o && (r = o.content, Array.isArray(r) ? \"template-string\" === o.type ? (o = r[1], 3 === r.length && \"string\" != typeof o && \"embedded-code\" === o.type && (s2 = u(o), o = o.alias, o = Array.isArray(o) ? o[0] : o, i = b.languages[o]) && (r[1] = l(s2, i, o))) : e3(r) : \"string\" != typeof r && e3([r]));\n      }\n    }(e2.tokens);\n  });\n}(Prism), function(e) {\n  e.languages.typescript = e.languages.extend(\"javascript\", { \"class-name\": { pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/, lookbehind: true, greedy: true, inside: null }, builtin: /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/ }), e.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, /\\btype\\b(?=\\s*(?:[\\{*]|$))/), delete e.languages.typescript.parameter, delete e.languages.typescript[\"literal-property\"];\n  var n = e.languages.extend(\"typescript\", {});\n  delete n[\"class-name\"], e.languages.typescript[\"class-name\"].inside = n, e.languages.insertBefore(\"typescript\", \"function\", { decorator: { pattern: /@[$\\w\\xA0-\\uFFFF]+/, inside: { at: { pattern: /^@/, alias: \"operator\" }, function: /^[\\s\\S]+/ } }, \"generic-function\": { pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/, greedy: true, inside: { function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/, generic: { pattern: /<[\\s\\S]+/, alias: \"class-name\", inside: n } } } }), e.languages.ts = e.languages.typescript;\n}(Prism), function(e) {\n  var n = e.languages.javascript, t = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source, a = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + t + \"\\\\s+)?)\";\n  e.languages.jsdoc = e.languages.extend(\"javadoclike\", { parameter: { pattern: RegExp(a + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source), lookbehind: true, inside: { punctuation: /\\./ } } }), e.languages.insertBefore(\"jsdoc\", \"keyword\", { \"optional-parameter\": { pattern: RegExp(a + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source), lookbehind: true, inside: { parameter: { pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/, lookbehind: true, inside: { punctuation: /\\./ } }, code: { pattern: /(=)[\\s\\S]*(?=\\]$)/, lookbehind: true, inside: n, alias: \"language-javascript\" }, punctuation: /[=[\\]]/ } }, \"class-name\": [{ pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function() {\n    return t;\n  })), lookbehind: true, inside: { punctuation: /\\./ } }, { pattern: RegExp(\"(@[a-z]+\\\\s+)\" + t), lookbehind: true, inside: { string: n.string, number: n.number, boolean: n.boolean, keyword: e.languages.typescript.keyword, operator: /=>|\\.\\.\\.|[&|?:*]/, punctuation: /[.,;=<>{}()[\\]]/ } }], example: { pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/, lookbehind: true, inside: { code: { pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m, lookbehind: true, inside: n, alias: \"language-javascript\" } } } }), e.languages.javadoclike.addSupport(\"javascript\", e.languages.jsdoc);\n}(Prism), function(e) {\n  e.languages.flow = e.languages.extend(\"javascript\", {}), e.languages.insertBefore(\"flow\", \"keyword\", { type: [{ pattern: /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/, alias: \"class-name\" }] }), e.languages.flow[\"function-variable\"].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i, delete e.languages.flow.parameter, e.languages.insertBefore(\"flow\", \"operator\", { \"flow-punctuation\": { pattern: /\\{\\||\\|\\}/, alias: \"punctuation\" } }), Array.isArray(e.languages.flow.keyword) || (e.languages.flow.keyword = [e.languages.flow.keyword]), e.languages.flow.keyword.unshift({ pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/, lookbehind: true }, { pattern: /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/, lookbehind: true });\n}(Prism), Prism.languages.n4js = Prism.languages.extend(\"javascript\", { keyword: /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/ }), Prism.languages.insertBefore(\"n4js\", \"constant\", { annotation: { pattern: /@+\\w+/, alias: \"operator\" } }), Prism.languages.n4jsd = Prism.languages.n4js, function(e) {\n  function n(e2, n2) {\n    return RegExp(e2.replace(/<ID>/g, function() {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), n2);\n  }\n  e.languages.insertBefore(\"javascript\", \"function-variable\", { \"method-variable\": { pattern: RegExp(\"(\\\\.\\\\s*)\" + e.languages.javascript[\"function-variable\"].pattern.source), lookbehind: true, alias: [\"function-variable\", \"method\", \"function\", \"property-access\"] } }), e.languages.insertBefore(\"javascript\", \"function\", { method: { pattern: RegExp(\"(\\\\.\\\\s*)\" + e.languages.javascript.function.source), lookbehind: true, alias: [\"function\", \"property-access\"] } }), e.languages.insertBefore(\"javascript\", \"constant\", { \"known-class-name\": [{ pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/, alias: \"class-name\" }, { pattern: /\\b(?:[A-Z]\\w*)Error\\b/, alias: \"class-name\" }] }), e.languages.insertBefore(\"javascript\", \"keyword\", { imports: { pattern: n(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source), lookbehind: true, inside: e.languages.javascript }, exports: { pattern: n(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source), lookbehind: true, inside: e.languages.javascript } }), e.languages.javascript.keyword.unshift({ pattern: /\\b(?:as|default|export|from|import)\\b/, alias: \"module\" }, { pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/, alias: \"control-flow\" }, { pattern: /\\bnull\\b/, alias: [\"null\", \"nil\"] }, { pattern: /\\bundefined\\b/, alias: \"nil\" }), e.languages.insertBefore(\"javascript\", \"operator\", { spread: { pattern: /\\.{3}/, alias: \"operator\" }, arrow: { pattern: /=>/, alias: \"operator\" } }), e.languages.insertBefore(\"javascript\", \"punctuation\", { \"property-access\": { pattern: n(/(\\.\\s*)#?<ID>/.source), lookbehind: true }, \"maybe-class-name\": { pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/, lookbehind: true }, dom: { pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/, alias: \"variable\" }, console: { pattern: /\\bconsole(?=\\s*\\.)/, alias: \"class-name\" } });\n  for (var t = [\"function\", \"function-variable\", \"method\", \"method-variable\", \"property-access\"], a = 0; a < t.length; a++) {\n    var r = t[a], s = e.languages.javascript[r], r = (s = \"RegExp\" === e.util.type(s) ? e.languages.javascript[r] = { pattern: s } : s).inside || {};\n    (s.inside = r)[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n  }\n}(Prism), function(s) {\n  var e = s.util.clone(s.languages.javascript), t = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source, a = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source, r = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  function n(e2, n2) {\n    return e2 = e2.replace(/<S>/g, function() {\n      return t;\n    }).replace(/<BRACES>/g, function() {\n      return a;\n    }).replace(/<SPREAD>/g, function() {\n      return r;\n    }), RegExp(e2, n2);\n  }\n  r = n(r).source, s.languages.jsx = s.languages.extend(\"markup\", e), s.languages.jsx.tag.pattern = n(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source), s.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/, s.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/, s.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, s.languages.jsx.tag.inside.comment = e.comment, s.languages.insertBefore(\"inside\", \"attr-name\", { spread: { pattern: n(/<SPREAD>/.source), inside: s.languages.jsx } }, s.languages.jsx.tag), s.languages.insertBefore(\"inside\", \"special-attr\", { script: { pattern: n(/=<BRACES>/.source), alias: \"language-javascript\", inside: { \"script-punctuation\": { pattern: /^=(?=\\{)/, alias: \"punctuation\" }, rest: s.languages.jsx } } }, s.languages.jsx.tag);\n  function i(e2) {\n    for (var n2 = [], t2 = 0; t2 < e2.length; t2++) {\n      var a2 = e2[t2], r2 = false;\n      \"string\" != typeof a2 && (\"tag\" === a2.type && a2.content[0] && \"tag\" === a2.content[0].type ? \"</\" === a2.content[0].content[0].content ? 0 < n2.length && n2[n2.length - 1].tagName === o(a2.content[0].content[1]) && n2.pop() : \"/>\" !== a2.content[a2.content.length - 1].content && n2.push({ tagName: o(a2.content[0].content[1]), openedBraces: 0 }) : 0 < n2.length && \"punctuation\" === a2.type && \"{\" === a2.content ? n2[n2.length - 1].openedBraces++ : 0 < n2.length && 0 < n2[n2.length - 1].openedBraces && \"punctuation\" === a2.type && \"}\" === a2.content ? n2[n2.length - 1].openedBraces-- : r2 = true), (r2 || \"string\" == typeof a2) && 0 < n2.length && 0 === n2[n2.length - 1].openedBraces && (r2 = o(a2), t2 < e2.length - 1 && (\"string\" == typeof e2[t2 + 1] || \"plain-text\" === e2[t2 + 1].type) && (r2 += o(e2[t2 + 1]), e2.splice(t2 + 1, 1)), 0 < t2 && (\"string\" == typeof e2[t2 - 1] || \"plain-text\" === e2[t2 - 1].type) && (r2 = o(e2[t2 - 1]) + r2, e2.splice(t2 - 1, 1), t2--), e2[t2] = new s.Token(\"plain-text\", r2, null, r2)), a2.content && \"string\" != typeof a2.content && i(a2.content);\n    }\n  }\n  var o = function(e2) {\n    return e2 ? \"string\" == typeof e2 ? e2 : \"string\" == typeof e2.content ? e2.content : e2.content.map(o).join(\"\") : \"\";\n  };\n  s.hooks.add(\"after-tokenize\", function(e2) {\n    \"jsx\" !== e2.language && \"tsx\" !== e2.language || i(e2.tokens);\n  });\n}(Prism), function(e) {\n  var n = e.util.clone(e.languages.typescript), n = (e.languages.tsx = e.languages.extend(\"jsx\", n), delete e.languages.tsx.parameter, delete e.languages.tsx[\"literal-property\"], e.languages.tsx.tag);\n  n.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + \"(?:\" + n.pattern.source + \")\", n.pattern.flags), n.lookbehind = true;\n}(Prism), Prism.languages.swift = { comment: { pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/, lookbehind: true, greedy: true }, \"string-literal\": [{ pattern: RegExp(/(^|[^\"#])/.source + \"(?:\" + /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + \"|\" + /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + \")\" + /(?![\"#])/.source), lookbehind: true, greedy: true, inside: { interpolation: { pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/, lookbehind: true, inside: null }, \"interpolation-punctuation\": { pattern: /^\\)|\\\\\\($/, alias: \"punctuation\" }, punctuation: /\\\\(?=[\\r\\n])/, string: /[\\s\\S]+/ } }, { pattern: RegExp(/(^|[^\"#])(#+)/.source + \"(?:\" + /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + \"|\" + /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + \")\\\\2\"), lookbehind: true, greedy: true, inside: { interpolation: { pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/, lookbehind: true, inside: null }, \"interpolation-punctuation\": { pattern: /^\\)|\\\\#+\\($/, alias: \"punctuation\" }, string: /[\\s\\S]+/ } }], directive: { pattern: RegExp(/#/.source + \"(?:\" + /(?:elseif|if)\\b/.source + \"(?:[ \t]*\" + /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + \")+|\" + /(?:else|endif)\\b/.source + \")\"), alias: \"property\", inside: { \"directive-name\": /^#\\w+/, boolean: /\\b(?:false|true)\\b/, number: /\\b\\d+(?:\\.\\d+)*\\b/, operator: /!|&&|\\|\\||[<>]=?/, punctuation: /[(),]/ } }, literal: { pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/, alias: \"constant\" }, \"other-directive\": { pattern: /#\\w+\\b/, alias: \"property\" }, attribute: { pattern: /@\\w+/, alias: \"atrule\" }, \"function-definition\": { pattern: /(\\bfunc\\s+)\\w+/, lookbehind: true, alias: \"function\" }, label: { pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/, lookbehind: true, alias: \"important\" }, keyword: /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/, boolean: /\\b(?:false|true)\\b/, nil: { pattern: /\\bnil\\b/, alias: \"constant\" }, \"short-argument\": /\\$\\d+\\b/, omit: { pattern: /\\b_\\b/, alias: \"keyword\" }, number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i, \"class-name\": /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/, function: /\\b[a-z_]\\w*(?=\\s*\\()/i, constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/, operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/, punctuation: /[{}[\\]();,.:\\\\]/ }, Prism.languages.swift[\"string-literal\"].forEach(function(e) {\n  e.inside.interpolation.inside = Prism.languages.swift;\n}), function(e) {\n  e.languages.kotlin = e.languages.extend(\"clike\", { keyword: { pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/, lookbehind: true }, function: [{ pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/, greedy: true }, { pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/, lookbehind: true, greedy: true }], number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/, operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/ }), delete e.languages.kotlin[\"class-name\"];\n  var n = { \"interpolation-punctuation\": { pattern: /^\\$\\{?|\\}$/, alias: \"punctuation\" }, expression: { pattern: /[\\s\\S]+/, inside: e.languages.kotlin } };\n  e.languages.insertBefore(\"kotlin\", \"string\", { \"string-literal\": [{ pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/, alias: \"multiline\", inside: { interpolation: { pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i, inside: n }, string: /[\\s\\S]+/ } }, { pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/, alias: \"singleline\", inside: { interpolation: { pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i, lookbehind: true, inside: n }, string: /[\\s\\S]+/ } }], char: { pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/, greedy: true } }), delete e.languages.kotlin.string, e.languages.insertBefore(\"kotlin\", \"keyword\", { annotation: { pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/, alias: \"builtin\" } }), e.languages.insertBefore(\"kotlin\", \"function\", { label: { pattern: /\\b\\w+@|@\\w+\\b/, alias: \"symbol\" } }), e.languages.kt = e.languages.kotlin, e.languages.kts = e.languages.kotlin;\n}(Prism), Prism.languages.c = Prism.languages.extend(\"clike\", { comment: { pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, greedy: true }, string: { pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/, greedy: true }, \"class-name\": { pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/, lookbehind: true }, keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/, function: /\\b[a-z_]\\w*(?=\\s*\\()/i, number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i, operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/ }), Prism.languages.insertBefore(\"c\", \"string\", { char: { pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/, greedy: true } }), Prism.languages.insertBefore(\"c\", \"string\", { macro: { pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im, lookbehind: true, greedy: true, alias: \"property\", inside: { string: [{ pattern: /^(#\\s*include\\s*)<[^>]+>/, lookbehind: true }, Prism.languages.c.string], char: Prism.languages.c.char, comment: Prism.languages.c.comment, \"macro-name\": [{ pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i, lookbehind: true }, { pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i, lookbehind: true, alias: \"function\" }], directive: { pattern: /^(#\\s*)[a-z]+/, lookbehind: true, alias: \"keyword\" }, \"directive-hash\": /^#/, punctuation: /##|\\\\(?=[\\r\\n])/, expression: { pattern: /\\S[\\s\\S]*/, inside: Prism.languages.c } } } }), Prism.languages.insertBefore(\"c\", \"function\", { constant: /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/ }), delete Prism.languages.c.boolean, Prism.languages.objectivec = Prism.languages.extend(\"c\", { string: { pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/, greedy: true }, keyword: /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/, operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/ }), delete Prism.languages.objectivec[\"class-name\"], Prism.languages.objc = Prism.languages.objectivec, Prism.languages.reason = Prism.languages.extend(\"clike\", { string: { pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/, greedy: true }, \"class-name\": /\\b[A-Z]\\w*/, keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/, operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/ }), Prism.languages.insertBefore(\"reason\", \"class-name\", { char: { pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/, greedy: true }, constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/, label: { pattern: /\\b[a-z]\\w*(?=::)/, alias: \"symbol\" } }), delete Prism.languages.reason.function, function(e) {\n  for (var n = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source, t = 0; t < 2; t++)\n    n = n.replace(/<self>/g, function() {\n      return n;\n    });\n  n = n.replace(/<self>/g, function() {\n    return /[^\\s\\S]/.source;\n  }), e.languages.rust = { comment: [{ pattern: RegExp(/(^|[^\\\\])/.source + n), lookbehind: true, greedy: true }, { pattern: /(^|[^\\\\:])\\/\\/.*/, lookbehind: true, greedy: true }], string: { pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/, greedy: true }, char: { pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/, greedy: true }, attribute: { pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/, greedy: true, alias: \"attr-name\", inside: { string: null } }, \"closure-params\": { pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/, lookbehind: true, greedy: true, inside: { \"closure-punctuation\": { pattern: /^\\||\\|$/, alias: \"punctuation\" }, rest: null } }, \"lifetime-annotation\": { pattern: /'\\w+/, alias: \"symbol\" }, \"fragment-specifier\": { pattern: /(\\$\\w+:)[a-z]+/, lookbehind: true, alias: \"punctuation\" }, variable: /\\$\\w+/, \"function-definition\": { pattern: /(\\bfn\\s+)\\w+/, lookbehind: true, alias: \"function\" }, \"type-definition\": { pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/, lookbehind: true, alias: \"class-name\" }, \"module-declaration\": [{ pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/, lookbehind: true, alias: \"namespace\" }, { pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/, lookbehind: true, alias: \"namespace\", inside: { punctuation: /::/ } }], keyword: [/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/], function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/, macro: { pattern: /\\b\\w+!/, alias: \"property\" }, constant: /\\b[A-Z_][A-Z_\\d]+\\b/, \"class-name\": /\\b[A-Z]\\w*\\b/, namespace: { pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/, inside: { punctuation: /::/ } }, number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/, boolean: /\\b(?:false|true)\\b/, punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/, operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/ }, e.languages.rust[\"closure-params\"].inside.rest = e.languages.rust, e.languages.rust.attribute.inside.string = e.languages.rust.string;\n}(Prism), Prism.languages.go = Prism.languages.extend(\"clike\", { string: { pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/, lookbehind: true, greedy: true }, keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/, boolean: /\\b(?:_|false|iota|nil|true)\\b/, number: [/\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i], operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./, builtin: /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/ }), Prism.languages.insertBefore(\"go\", \"string\", { char: { pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/, greedy: true } }), delete Prism.languages.go[\"class-name\"], function(e) {\n  var n = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/, t = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function() {\n    return n.source;\n  });\n  e.languages.cpp = e.languages.extend(\"c\", { \"class-name\": [{ pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function() {\n    return n.source;\n  })), lookbehind: true }, /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/], keyword: n, number: { pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i, greedy: true }, operator: />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/, boolean: /\\b(?:false|true)\\b/ }), e.languages.insertBefore(\"cpp\", \"string\", { module: { pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + \"(?:\" + /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + \"|\" + /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function() {\n    return t;\n  }) + \")\"), lookbehind: true, greedy: true, inside: { string: /^[<\"][\\s\\S]+/, operator: /:/, punctuation: /\\./ } }, \"raw-string\": { pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/, alias: \"string\", greedy: true } }), e.languages.insertBefore(\"cpp\", \"keyword\", { \"generic-function\": { pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i, inside: { function: /^\\w+/, generic: { pattern: /<[\\s\\S]+/, alias: \"class-name\", inside: e.languages.cpp } } } }), e.languages.insertBefore(\"cpp\", \"operator\", { \"double-colon\": { pattern: /::/, alias: \"punctuation\" } }), e.languages.insertBefore(\"cpp\", \"class-name\", { \"base-clause\": { pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/, lookbehind: true, greedy: true, inside: e.languages.extend(\"cpp\", {}) } }), e.languages.insertBefore(\"inside\", \"double-colon\", { \"class-name\": /\\b[a-z_]\\w*\\b(?!\\s*::)/i }, e.languages.cpp[\"base-clause\"]);\n}(Prism), Prism.languages.python = { comment: { pattern: /(^|[^\\\\])#.*/, lookbehind: true, greedy: true }, \"string-interpolation\": { pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i, greedy: true, inside: { interpolation: { pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/, lookbehind: true, inside: { \"format-spec\": { pattern: /(:)[^:(){}]+(?=\\}$)/, lookbehind: true }, \"conversion-option\": { pattern: /![sra](?=[:}]$)/, alias: \"punctuation\" }, rest: null } }, string: /[\\s\\S]+/ } }, \"triple-quoted-string\": { pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i, greedy: true, alias: \"string\" }, string: { pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i, greedy: true }, function: { pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g, lookbehind: true }, \"class-name\": { pattern: /(\\bclass\\s+)\\w+/i, lookbehind: true }, decorator: { pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m, lookbehind: true, alias: [\"annotation\", \"punctuation\"], inside: { punctuation: /\\./ } }, keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/, builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/, boolean: /\\b(?:False|None|True)\\b/, number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i, operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/, punctuation: /[{}[\\];(),.:]/ }, Prism.languages.python[\"string-interpolation\"].inside.interpolation.inside.rest = Prism.languages.python, Prism.languages.py = Prism.languages.python, Prism.languages.json = { property: { pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/, lookbehind: true, greedy: true }, string: { pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/, lookbehind: true, greedy: true }, comment: { pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/, greedy: true }, number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i, punctuation: /[{}[\\],]/, operator: /:/, boolean: /\\b(?:false|true)\\b/, null: { pattern: /\\bnull\\b/, alias: \"keyword\" } }, Prism.languages.webmanifest = Prism.languages.json;\n\n// src/themes/index.ts\nvar themes_exports = {};\n__export(themes_exports, {\n  dracula: () => dracula_default,\n  duotoneDark: () => duotoneDark_default,\n  duotoneLight: () => duotoneLight_default,\n  github: () => github_default,\n  gruvboxMaterialDark: () => gruvboxMaterialDark_default,\n  gruvboxMaterialLight: () => gruvboxMaterialLight_default,\n  jettwaveDark: () => jettwaveDark_default,\n  jettwaveLight: () => jettwaveLight_default,\n  nightOwl: () => nightOwl_default,\n  nightOwlLight: () => nightOwlLight_default,\n  oceanicNext: () => oceanicNext_default,\n  okaidia: () => okaidia_default,\n  oneDark: () => oneDark_default,\n  oneLight: () => oneLight_default,\n  palenight: () => palenight_default,\n  shadesOfPurple: () => shadesOfPurple_default,\n  synthwave84: () => synthwave84_default,\n  ultramin: () => ultramin_default,\n  vsDark: () => vsDark_default,\n  vsLight: () => vsLight_default\n});\n\n// src/themes/dracula.ts\nvar theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\"\n  },\n  styles: [\n    {\n      types: [\"prolog\", \"constant\", \"builtin\"],\n      style: {\n        color: \"rgb(189, 147, 249)\"\n      }\n    },\n    {\n      types: [\"inserted\", \"function\"],\n      style: {\n        color: \"rgb(80, 250, 123)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgb(255, 85, 85)\"\n      }\n    },\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(255, 184, 108)\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"symbol\"],\n      style: {\n        color: \"rgb(248, 248, 242)\"\n      }\n    },\n    {\n      types: [\"string\", \"char\", \"tag\", \"selector\"],\n      style: {\n        color: \"rgb(255, 121, 198)\"\n      }\n    },\n    {\n      types: [\"keyword\", \"variable\"],\n      style: {\n        color: \"rgb(189, 147, 249)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(98, 114, 164)\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(241, 250, 140)\"\n      }\n    }\n  ]\n};\nvar dracula_default = theme;\n\n// src/themes/duotoneDark.ts\nvar theme2 = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"#6c6783\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#e09142\"\n      }\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#9a86fd\"\n      }\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#eeebff\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#c4b9fe\"\n      }\n    },\n    {\n      types: [\n        \"boolean\",\n        \"string\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"atrule\",\n        \"placeholder\",\n        \"variable\"\n      ],\n      style: {\n        color: \"#ffcc99\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#c4b9fe\"\n      }\n    }\n  ]\n};\nvar duotoneDark_default = theme2;\n\n// src/themes/duotoneLight.ts\nvar theme3 = {\n  plain: {\n    backgroundColor: \"#faf8f5\",\n    color: \"#728fcb\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"#b6ad9a\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#063289\"\n      }\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#b29762\"\n      }\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#2d2006\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#896724\"\n      }\n    },\n    {\n      types: [\n        \"boolean\",\n        \"string\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"atrule\"\n      ],\n      style: {\n        color: \"#728fcb\"\n      }\n    },\n    {\n      types: [\"placeholder\", \"variable\"],\n      style: {\n        color: \"#93abdc\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#896724\"\n      }\n    }\n  ]\n};\nvar duotoneLight_default = theme3;\n\n// src/themes/github.ts\nvar theme4 = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n      style: {\n        color: \"#999988\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"string\", \"attr-value\"],\n      style: {\n        color: \"#e3116c\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#393A34\"\n      }\n    },\n    {\n      types: [\n        \"entity\",\n        \"url\",\n        \"symbol\",\n        \"number\",\n        \"boolean\",\n        \"variable\",\n        \"constant\",\n        \"property\",\n        \"regex\",\n        \"inserted\"\n      ],\n      style: {\n        color: \"#36acaa\"\n      }\n    },\n    {\n      types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n      style: {\n        color: \"#00a4db\"\n      }\n    },\n    {\n      types: [\"function\", \"deleted\", \"tag\"],\n      style: {\n        color: \"#d73a49\"\n      }\n    },\n    {\n      types: [\"function-variable\"],\n      style: {\n        color: \"#6f42c1\"\n      }\n    },\n    {\n      types: [\"tag\", \"selector\", \"keyword\"],\n      style: {\n        color: \"#00009f\"\n      }\n    }\n  ]\n};\nvar github_default = theme4;\n\n// src/themes/nightOwl.ts\nvar theme5 = {\n  plain: {\n    color: \"#d6deeb\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(99, 119, 119)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(173, 219, 103)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(214, 222, 235)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\"\n      }\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(199, 146, 234)\"\n      }\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(255, 203, 139)\"\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"rgb(127, 219, 202)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\"\n      }\n    },\n    {\n      types: [\"property\"],\n      style: {\n        color: \"rgb(128, 203, 196)\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\"\n      }\n    }\n  ]\n};\nvar nightOwl_default = theme5;\n\n// src/themes/nightOwlLight.ts\nvar theme6 = {\n  plain: {\n    color: \"#403f53\",\n    backgroundColor: \"#FBFBFB\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(72, 118, 214)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(152, 159, 177)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"builtin\", \"char\", \"constant\", \"url\"],\n      style: {\n        color: \"rgb(72, 118, 214)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(201, 103, 101)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(170, 9, 130)\"\n      }\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(153, 76, 195)\"\n      }\n    },\n    {\n      types: [\"function\", \"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(153, 76, 195)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(17, 17, 17)\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(153, 76, 195)\"\n      }\n    },\n    {\n      types: [\"operator\", \"property\", \"keyword\", \"namespace\"],\n      style: {\n        color: \"rgb(12, 150, 155)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(188, 84, 84)\"\n      }\n    }\n  ]\n};\nvar nightOwlLight_default = theme6;\n\n// src/themes/oceanicNext.ts\nvar colors = {\n  char: \"#D8DEE9\",\n  comment: \"#999999\",\n  keyword: \"#c5a5c5\",\n  primitive: \"#5a9bcf\",\n  string: \"#8dc891\",\n  variable: \"#d7deea\",\n  boolean: \"#ff8b50\",\n  punctuation: \"#5FB3B3\",\n  tag: \"#fc929e\",\n  function: \"#79b6f2\",\n  className: \"#FAC863\",\n  method: \"#6699CC\",\n  operator: \"#fc929e\"\n};\nvar theme7 = {\n  plain: {\n    backgroundColor: \"#282c34\",\n    color: \"#ffffff\"\n  },\n  styles: [\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: colors.keyword\n      }\n    },\n    {\n      types: [\"attr-value\"],\n      style: {\n        color: colors.string\n      }\n    },\n    {\n      types: [\n        \"comment\",\n        \"block-comment\",\n        \"prolog\",\n        \"doctype\",\n        \"cdata\",\n        \"shebang\"\n      ],\n      style: {\n        color: colors.comment\n      }\n    },\n    {\n      types: [\n        \"property\",\n        \"number\",\n        \"function-name\",\n        \"constant\",\n        \"symbol\",\n        \"deleted\"\n      ],\n      style: {\n        color: colors.primitive\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: colors.boolean\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: colors.tag\n      }\n    },\n    {\n      types: [\"string\"],\n      style: {\n        color: colors.string\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: colors.string\n      }\n    },\n    {\n      types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n      style: {\n        color: colors.char\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: colors.function\n      }\n    },\n    {\n      types: [\"operator\", \"entity\", \"url\", \"variable\"],\n      style: {\n        color: colors.variable\n      }\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        color: colors.keyword\n      }\n    },\n    {\n      types: [\"atrule\", \"class-name\"],\n      style: {\n        color: colors.className\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        fontWeight: \"400\"\n      }\n    },\n    {\n      types: [\"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7\n      }\n    }\n  ]\n};\nvar oceanicNext_default = theme7;\n\n// src/themes/okaidia.ts\nvar theme8 = {\n  plain: {\n    color: \"#f8f8f2\",\n    backgroundColor: \"#272822\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"#f92672\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#8292a2\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"#a6e22e\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"#f8f8f2\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"#ae81ff\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n      style: {\n        color: \"#e6db74\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"#f8f8f2\"\n      }\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"#a6e22e\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"#66d9ef\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"#ae81ff\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\",\n        opacity: 0.7\n      }\n    },\n    {\n      types: [\"tag\", \"property\"],\n      style: {\n        color: \"#f92672\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#a6e22e !important\"\n      }\n    },\n    {\n      types: [\"doctype\"],\n      style: {\n        color: \"#8292a2\"\n      }\n    },\n    {\n      types: [\"rule\"],\n      style: {\n        color: \"#e6db74\"\n      }\n    }\n  ]\n};\nvar okaidia_default = theme8;\n\n// src/themes/palenight.ts\nvar theme9 = {\n  plain: {\n    color: \"#bfc7d5\",\n    backgroundColor: \"#292d3e\"\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(105, 112, 152)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"string\", \"inserted\"],\n      style: {\n        color: \"rgb(195, 232, 141)\"\n      }\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"selector\"],\n      style: {\n        color: \"rgb(199, 146, 234)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(191, 199, 213)\"\n      }\n    },\n    {\n      types: [\"class-name\", \"attr-name\"],\n      style: {\n        color: \"rgb(255, 203, 107)\"\n      }\n    },\n    {\n      types: [\"tag\", \"deleted\"],\n      style: {\n        color: \"rgb(255, 85, 114)\"\n      }\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"rgb(137, 221, 255)\"\n      }\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\"\n      }\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\"\n      }\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"rgb(221, 221, 221)\"\n      }\n    }\n  ]\n};\nvar palenight_default = theme9;\n\n// src/themes/shadesOfPurple.ts\nvar theme10 = {\n  plain: {\n    color: \"#9EFEFF\",\n    backgroundColor: \"#2D2A55\"\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(255, 238, 128)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"rgb(173, 219, 103)\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(179, 98, 255)\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(255, 255, 255)\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"rgb(255, 98, 140)\"\n      }\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(165, 255, 144)\"\n      }\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(255, 238, 128)\"\n      }\n    },\n    {\n      types: [\"number\", \"boolean\"],\n      style: {\n        color: \"rgb(255, 98, 140)\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(255, 180, 84)\"\n      }\n    },\n    {\n      types: [\n        \"keyword\",\n        \"operator\",\n        \"property\",\n        \"namespace\",\n        \"tag\",\n        \"selector\",\n        \"doctype\"\n      ],\n      style: {\n        color: \"rgb(255, 157, 0)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n      style: {\n        color: \"rgb(250, 208, 0)\"\n      }\n    }\n  ]\n};\nvar shadesOfPurple_default = theme10;\n\n// src/themes/synthwave84.ts\nvar theme11 = {\n  plain: {\n    backgroundColor: \"linear-gradient(to bottom, #2a2139 75%, #34294f)\",\n    backgroundImage: \"#34294f\",\n    color: \"#f92aad\",\n    textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\"],\n      style: {\n        color: \"#495495\",\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"#ccc\"\n      }\n    },\n    {\n      types: [\n        \"tag\",\n        \"attr-name\",\n        \"namespace\",\n        \"number\",\n        \"unit\",\n        \"hexcode\",\n        \"deleted\"\n      ],\n      style: {\n        color: \"#e2777a\"\n      }\n    },\n    {\n      types: [\"property\", \"selector\"],\n      style: {\n        color: \"#72f1b8\",\n        textShadow: \"0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475\"\n      }\n    },\n    {\n      types: [\"function-name\"],\n      style: {\n        color: \"#6196cc\"\n      }\n    },\n    {\n      types: [\"boolean\", \"selector-id\", \"function\"],\n      style: {\n        color: \"#fdfdfd\",\n        textShadow: \"0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975\"\n      }\n    },\n    {\n      types: [\"class-name\", \"maybe-class-name\", \"builtin\"],\n      style: {\n        color: \"#fff5f6\",\n        textShadow: \"0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75\"\n      }\n    },\n    {\n      types: [\"constant\", \"symbol\"],\n      style: {\n        color: \"#f92aad\",\n        textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\"\n      }\n    },\n    {\n      types: [\"important\", \"atrule\", \"keyword\", \"selector-class\"],\n      style: {\n        color: \"#f4eee4\",\n        textShadow: \"0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575\"\n      }\n    },\n    {\n      types: [\"string\", \"char\", \"attr-value\", \"regex\", \"variable\"],\n      style: {\n        color: \"#f87c32\"\n      }\n    },\n    {\n      types: [\"parameter\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"entity\", \"url\"],\n      style: {\n        color: \"#67cdcc\"\n      }\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"ffffffee\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"entity\"],\n      style: {\n        cursor: \"help\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"green\"\n      }\n    }\n  ]\n};\nvar synthwave84_default = theme11;\n\n// src/themes/ultramin.ts\nvar theme12 = {\n  plain: {\n    color: \"#282a2e\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(197, 200, 198)\"\n      }\n    },\n    {\n      types: [\"string\", \"number\", \"builtin\", \"variable\"],\n      style: {\n        color: \"rgb(150, 152, 150)\"\n      }\n    },\n    {\n      types: [\"class-name\", \"function\", \"tag\", \"attr-name\"],\n      style: {\n        color: \"rgb(40, 42, 46)\"\n      }\n    }\n  ]\n};\nvar ultramin_default = theme12;\n\n// src/themes/vsDark.ts\nvar theme13 = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"rgb(0, 0, 128)\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(106, 153, 85)\"\n      }\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"rgb(86, 156, 214)\"\n      }\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"rgb(181, 206, 168)\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"rgb(100, 102, 149)\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"rgb(156, 220, 254)\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"rgb(206, 145, 120)\"\n      }\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"rgb(215, 186, 125)\"\n      }\n    },\n    {\n      // Fix tag color\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(78, 201, 176)\"\n      }\n    },\n    {\n      // Fix tag color for HTML\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"rgb(86, 156, 214)\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"rgb(212, 212, 212)\"\n      }\n    },\n    {\n      // Fix punctuation color for HTML\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\"\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"rgb(220, 220, 170)\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(78, 201, 176)\"\n      }\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"rgb(209, 105, 105)\"\n      }\n    }\n  ]\n};\nvar vsDark_default = theme13;\n\n// src/themes/vsLight.ts\nvar theme14 = {\n  plain: {\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(0, 128, 0)\"\n      }\n    },\n    {\n      types: [\"builtin\"],\n      style: {\n        color: \"rgb(0, 112, 193)\"\n      }\n    },\n    {\n      types: [\"number\", \"variable\", \"inserted\"],\n      style: {\n        color: \"rgb(9, 134, 88)\"\n      }\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"rgb(0, 0, 0)\"\n      }\n    },\n    {\n      types: [\"constant\", \"char\"],\n      style: {\n        color: \"rgb(129, 31, 63)\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(128, 0, 0)\"\n      }\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(255, 0, 0)\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\"],\n      style: {\n        color: \"rgb(163, 21, 21)\"\n      }\n    },\n    {\n      types: [\"changed\", \"punctuation\"],\n      style: {\n        color: \"rgb(4, 81, 165)\"\n      }\n    },\n    {\n      types: [\"function\", \"keyword\"],\n      style: {\n        color: \"rgb(0, 0, 255)\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(38, 127, 153)\"\n      }\n    }\n  ]\n};\nvar vsLight_default = theme14;\n\n// src/themes/jettwaveDark.ts\nvar theme15 = {\n  plain: {\n    color: \"#f8fafc\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"#000080\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#6A9955\"\n      }\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"#569CD6\"\n      }\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"#B5CEA8\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"#f8fafc\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"#9CDCFE\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"#cbd5e1\"\n      }\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"#D7BA7D\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#D4D4D4\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\"\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"#7dd3fc\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"#D16969\"\n      }\n    }\n  ]\n};\nvar jettwaveDark_default = theme15;\n\n// src/themes/jettwaveLight.ts\nvar theme16 = {\n  plain: {\n    color: \"#0f172a\",\n    backgroundColor: \"#f1f5f9\"\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"#000080\"\n      }\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#6A9955\"\n      }\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"#0c4a6e\"\n      }\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"#B5CEA8\"\n      }\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"#0f172a\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"#0c4a6e\"\n      }\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"#64748b\"\n      }\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"#D7BA7D\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#475569\"\n      }\n    },\n    {\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\"\n      }\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"#0e7490\"\n      }\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"#0ea5e9\"\n      }\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"#D16969\"\n      }\n    }\n  ]\n};\nvar jettwaveLight_default = theme16;\n\n// src/themes/oneDark.ts\nvar theme17 = {\n  plain: {\n    backgroundColor: \"hsl(220, 13%, 18%)\",\n    color: \"hsl(220, 14%, 71%)\",\n    textShadow: \"0 1px rgba(0, 0, 0, 0.3)\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"cdata\"],\n      style: {\n        color: \"hsl(220, 10%, 40%)\"\n      }\n    },\n    {\n      types: [\"doctype\", \"punctuation\", \"entity\"],\n      style: {\n        color: \"hsl(220, 14%, 71%)\"\n      }\n    },\n    {\n      types: [\n        \"attr-name\",\n        \"class-name\",\n        \"maybe-class-name\",\n        \"boolean\",\n        \"constant\",\n        \"number\",\n        \"atrule\"\n      ],\n      style: { color: \"hsl(29, 54%, 61%)\" }\n    },\n    {\n      types: [\"keyword\"],\n      style: { color: \"hsl(286, 60%, 67%)\" }\n    },\n    {\n      types: [\"property\", \"tag\", \"symbol\", \"deleted\", \"important\"],\n      style: {\n        color: \"hsl(355, 65%, 65%)\"\n      }\n    },\n    {\n      types: [\n        \"selector\",\n        \"string\",\n        \"char\",\n        \"builtin\",\n        \"inserted\",\n        \"regex\",\n        \"attr-value\"\n      ],\n      style: {\n        color: \"hsl(95, 38%, 62%)\"\n      }\n    },\n    {\n      types: [\"variable\", \"operator\", \"function\"],\n      style: {\n        color: \"hsl(207, 82%, 66%)\"\n      }\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"hsl(187, 47%, 55%)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"hsl(220, 14%, 71%)\"\n      }\n    }\n  ]\n};\nvar oneDark_default = theme17;\n\n// src/themes/oneLight.ts\nvar theme18 = {\n  plain: {\n    backgroundColor: \"hsl(230, 1%, 98%)\",\n    color: \"hsl(230, 8%, 24%)\"\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"cdata\"],\n      style: {\n        color: \"hsl(230, 4%, 64%)\"\n      }\n    },\n    {\n      types: [\"doctype\", \"punctuation\", \"entity\"],\n      style: {\n        color: \"hsl(230, 8%, 24%)\"\n      }\n    },\n    {\n      types: [\n        \"attr-name\",\n        \"class-name\",\n        \"boolean\",\n        \"constant\",\n        \"number\",\n        \"atrule\"\n      ],\n      style: {\n        color: \"hsl(35, 99%, 36%)\"\n      }\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        color: \"hsl(301, 63%, 40%)\"\n      }\n    },\n    {\n      types: [\"property\", \"tag\", \"symbol\", \"deleted\", \"important\"],\n      style: {\n        color: \"hsl(5, 74%, 59%)\"\n      }\n    },\n    {\n      types: [\n        \"selector\",\n        \"string\",\n        \"char\",\n        \"builtin\",\n        \"inserted\",\n        \"regex\",\n        \"attr-value\",\n        \"punctuation\"\n      ],\n      style: {\n        color: \"hsl(119, 34%, 47%)\"\n      }\n    },\n    {\n      types: [\"variable\", \"operator\", \"function\"],\n      style: {\n        color: \"hsl(221, 87%, 60%)\"\n      }\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"hsl(198, 99%, 37%)\"\n      }\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\"\n      }\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\"\n      }\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\"\n      }\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\"\n      }\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"hsl(230, 8%, 24%)\"\n      }\n    }\n  ]\n};\nvar oneLight_default = theme18;\n\n// src/themes/gruvboxMaterialDark.ts\nvar theme19 = {\n  plain: {\n    color: \"#ebdbb2\",\n    backgroundColor: \"#292828\"\n  },\n  styles: [\n    {\n      types: [\n        \"imports\",\n        \"class-name\",\n        \"maybe-class-name\",\n        \"constant\",\n        \"doctype\",\n        \"builtin\",\n        \"function\"\n      ],\n      style: {\n        color: \"#d8a657\"\n      }\n    },\n    {\n      types: [\"property-access\"],\n      style: {\n        color: \"#7daea3\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#e78a4e\"\n      }\n    },\n    {\n      types: [\"attr-name\", \"char\", \"url\", \"regex\"],\n      style: {\n        color: \"#a9b665\"\n      }\n    },\n    {\n      types: [\"attr-value\", \"string\"],\n      style: {\n        color: \"#89b482\"\n      }\n    },\n    {\n      types: [\"comment\", \"prolog\", \"cdata\", \"operator\", \"inserted\"],\n      style: {\n        color: \"#a89984\"\n      }\n    },\n    {\n      types: [\n        \"delimiter\",\n        \"boolean\",\n        \"keyword\",\n        \"selector\",\n        \"important\",\n        \"atrule\",\n        \"property\",\n        \"variable\",\n        \"deleted\"\n      ],\n      style: {\n        color: \"#ea6962\"\n      }\n    },\n    {\n      types: [\"entity\", \"number\", \"symbol\"],\n      style: {\n        color: \"#d3869b\"\n      }\n    }\n  ]\n};\nvar gruvboxMaterialDark_default = theme19;\n\n// src/themes/gruvboxMaterialLight.ts\nvar theme20 = {\n  plain: {\n    color: \"#654735\",\n    backgroundColor: \"#f9f5d7\"\n  },\n  styles: [\n    {\n      types: [\n        \"delimiter\",\n        \"boolean\",\n        \"keyword\",\n        \"selector\",\n        \"important\",\n        \"atrule\",\n        \"property\",\n        \"variable\",\n        \"deleted\"\n      ],\n      style: {\n        color: \"#af2528\"\n      }\n    },\n    {\n      types: [\n        \"imports\",\n        \"class-name\",\n        \"maybe-class-name\",\n        \"constant\",\n        \"doctype\",\n        \"builtin\"\n      ],\n      style: {\n        color: \"#b4730e\"\n      }\n    },\n    {\n      types: [\"string\", \"attr-value\"],\n      style: {\n        color: \"#477a5b\"\n      }\n    },\n    {\n      types: [\"property-access\"],\n      style: {\n        color: \"#266b79\"\n      }\n    },\n    {\n      types: [\"function\", \"attr-name\", \"char\", \"url\"],\n      style: {\n        color: \"#72761e\"\n      }\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#b94c07\"\n      }\n    },\n    {\n      types: [\"comment\", \"prolog\", \"cdata\", \"operator\", \"inserted\"],\n      style: {\n        color: \"#a89984\"\n      }\n    },\n    {\n      types: [\"entity\", \"number\", \"symbol\"],\n      style: {\n        color: \"#924f79\"\n      }\n    }\n  ]\n};\nvar gruvboxMaterialLight_default = theme20;\n\n// src/index.ts\nimport { createElement } from \"react\";\n\n// src/components/useThemeDictionary.ts\nimport { useEffect, useRef, useState } from \"react\";\n\n// src/utils/themeToDict.ts\nvar themeToDict = (theme21, language) => {\n  const { plain } = theme21;\n  const themeDict = theme21.styles.reduce((acc, themeEntry) => {\n    const { languages: languages2, style } = themeEntry;\n    if (languages2 && !languages2.includes(language)) {\n      return acc;\n    }\n    themeEntry.types.forEach((type) => {\n      const accStyle = __spreadValues(__spreadValues({}, acc[type]), style);\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, {});\n  themeDict.root = plain;\n  themeDict.plain = __spreadProps(__spreadValues({}, plain), { backgroundColor: void 0 });\n  return themeDict;\n};\nvar themeToDict_default = themeToDict;\n\n// src/components/useThemeDictionary.ts\nvar useThemeDictionary = (language, theme21) => {\n  const [themeDictionary, setThemeDictionary] = useState(\n    themeToDict_default(theme21, language)\n  );\n  const previousTheme = useRef();\n  const previousLanguage = useRef();\n  useEffect(() => {\n    if (theme21 !== previousTheme.current || language !== previousLanguage.current) {\n      previousTheme.current = theme21;\n      previousLanguage.current = language;\n      setThemeDictionary(themeToDict_default(theme21, language));\n    }\n  }, [language, theme21]);\n  return themeDictionary;\n};\n\n// src/components/useGetLineProps.ts\nimport { useCallback } from \"react\";\nimport clsx from \"clsx\";\nvar useGetLineProps = (themeDictionary) => useCallback(\n  (_a) => {\n    var _b = _a, { className, style, line } = _b, rest = __objRest(_b, [\"className\", \"style\", \"line\"]);\n    const output = __spreadProps(__spreadValues({}, rest), {\n      className: clsx(\"token-line\", className)\n    });\n    if (typeof themeDictionary === \"object\" && \"plain\" in themeDictionary)\n      output.style = themeDictionary.plain;\n    if (typeof style === \"object\")\n      output.style = __spreadValues(__spreadValues({}, output.style || {}), style);\n    return output;\n  },\n  [themeDictionary]\n);\n\n// src/components/useGetTokenProps.ts\nimport { useCallback as useCallback2 } from \"react\";\nimport clsx2 from \"clsx\";\nvar useGetTokenProps = (themeDictionary) => {\n  const styleForToken = useCallback2(\n    ({ types, empty }) => {\n      if (themeDictionary == null)\n        return void 0;\n      else if (types.length === 1 && types[0] === \"plain\") {\n        return empty != null ? { display: \"inline-block\" } : void 0;\n      } else if (types.length === 1 && empty != null) {\n        return themeDictionary[types[0]];\n      }\n      return Object.assign(\n        empty != null ? { display: \"inline-block\" } : {},\n        ...types.map((type) => themeDictionary[type])\n      );\n    },\n    [themeDictionary]\n  );\n  return useCallback2(\n    (_a) => {\n      var _b = _a, { token, className, style } = _b, rest = __objRest(_b, [\"token\", \"className\", \"style\"]);\n      const output = __spreadProps(__spreadValues({}, rest), {\n        className: clsx2(\"token\", ...token.types, className),\n        children: token.content,\n        style: styleForToken(token)\n      });\n      if (style != null) {\n        output.style = __spreadValues(__spreadValues({}, output.style || {}), style);\n      }\n      return output;\n    },\n    [styleForToken]\n  );\n};\n\n// src/utils/normalizeTokens.ts\nvar newlineRe = /\\r\\n|\\r|\\n/;\nvar normalizeEmptyLines = (line) => {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\nvar appendTypes = (types, add) => {\n  const typesSize = types.length;\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n  return types.concat(add);\n};\nvar normalizeTokens = (tokens) => {\n  const typeArrStack = [[]];\n  const tokenArrStack = [tokens];\n  const tokenArrIndexStack = [0];\n  const tokenArrSizeStack = [tokens.length];\n  let i = 0;\n  let stackIndex = 0;\n  let currentLine = [];\n  const acc = [currentLine];\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      let content;\n      let types = typeArrStack[stackIndex];\n      const tokenArr = tokenArrStack[stackIndex];\n      const token = tokenArr[i];\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n        content = token.content;\n      }\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      }\n      const splitByNewlines = content.split(newlineRe);\n      const newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types,\n        content: splitByNewlines[0]\n      });\n      for (let i2 = 1; i2 < newlineCount; i2++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types,\n          content: splitByNewlines[i2]\n        });\n      }\n    }\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\nvar normalizeTokens_default = normalizeTokens;\n\n// src/components/useTokenize.ts\nimport { useMemo, useRef as useRef2 } from \"react\";\nvar useTokenize = ({ prism, code, grammar, language }) => {\n  const prismRef = useRef2(prism);\n  return useMemo(() => {\n    if (grammar == null)\n      return normalizeTokens_default([code]);\n    const prismConfig = {\n      code,\n      grammar,\n      language,\n      tokens: []\n    };\n    prismRef.current.hooks.run(\"before-tokenize\", prismConfig);\n    prismConfig.tokens = prismRef.current.tokenize(code, grammar);\n    prismRef.current.hooks.run(\"after-tokenize\", prismConfig);\n    return normalizeTokens_default(prismConfig.tokens);\n  }, [code, grammar, language]);\n};\n\n// src/components/highlight.ts\nvar Highlight = ({\n  children,\n  language: _language,\n  code,\n  theme: theme21,\n  prism\n}) => {\n  const language = _language.toLowerCase();\n  const themeDictionary = useThemeDictionary(language, theme21);\n  const getLineProps = useGetLineProps(themeDictionary);\n  const getTokenProps = useGetTokenProps(themeDictionary);\n  const grammar = prism.languages[language];\n  const tokens = useTokenize({ prism, language, code, grammar });\n  return children({\n    tokens,\n    className: `prism-code language-${language}`,\n    style: themeDictionary != null ? themeDictionary.root : {},\n    getLineProps,\n    getTokenProps\n  });\n};\n\n// src/index.ts\nvar Highlight2 = (props) => createElement(Highlight, __spreadProps(__spreadValues({}, props), {\n  prism: props.prism || Prism,\n  theme: props.theme || vsDark_default,\n  code: props.code,\n  language: props.language\n}));\nexport {\n  Highlight2 as Highlight,\n  Prism,\n  normalizeTokens_default as normalizeTokens,\n  themes_exports as themes,\n  useTokenize\n};\n/*! Bundled license information:\n\nprismjs/prism.js:\n  (**\n   * Prism: Lightweight, robust, elegant syntax highlighting\n   *\n   * @license MIT <https://opensource.org/licenses/MIT>\n   * @author Lea Verou <https://lea.verou.me>\n   * @namespace\n   * @public\n   *)\n*/\n//# sourceMappingURL=index.mjs.map","import { createContext, useContext } from \"react\";\n\nexport const ThemeContext = createContext<readonly [boolean, () => void]>([\n  false,\n  () => {},\n]);\n\nexport const useTheme = () => useContext(ThemeContext);\n","import {\n  Highlight,\n  Prism,\n  themes,\n  type HighlightProps,\n} from \"prism-react-renderer\";\n\nimport { CheckIcon, CopyIcon } from \"lucide-react\";\n\nglobalThis.Prism = Prism;\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-bash.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-ruby.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-markup-templating.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-markup.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-php.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-json.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-java.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-csharp.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-objectivec.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-markdown.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-javascript.min.js\");\n// @ts-expect-error This is untyped\nvoid import(\"prismjs/components/prism-typescript.min.js\");\n\nimport { useState } from \"react\";\nimport { cn } from \"../util/cn.js\";\nimport { useTheme } from \"./context/ThemeContext.js\";\n\ntype SyntaxHighlightProps = {\n  className?: string;\n  noBackground?: boolean;\n  wrapLines?: boolean;\n  copyable?: boolean;\n  showLanguageIndicator?: boolean;\n  language?: string;\n} & Omit<HighlightProps, \"children\" | \"language\">;\n\nexport const SyntaxHighlight = ({\n  copyable = true,\n  language = \"plain\",\n  ...props\n}: SyntaxHighlightProps) => {\n  const [isDark] = useTheme();\n  const [isCopied, setIsCopied] = useState(false);\n\n  if (!props.code) {\n    return null;\n  }\n\n  return (\n    <Highlight\n      theme={isDark ? themes.vsDark : themes.github}\n      language={language}\n      {...props}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <div className=\"relative group\">\n          <pre\n            className={cn(\n              \"relative scrollbar overflow-x-auto\",\n              className,\n              props.className,\n              props.noBackground && \"!bg-transparent\",\n              props.wrapLines && \"whitespace-pre-wrap break-words\",\n            )}\n            style={style}\n          >\n            {tokens.map((line, i) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <div key={i} {...getLineProps({ line })}>\n                {line.map((token, key) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <span key={key} {...getTokenProps({ token })} />\n                ))}\n              </div>\n            ))}\n          </pre>\n          {props.showLanguageIndicator && (\n            <span className=\"absolute top-1.5 right-3 text-[11px] font-mono text-muted-foreground transition group-hover:opacity-0\">\n              {language}\n            </span>\n          )}\n          {copyable && (\n            <button\n              type=\"button\"\n              aria-label=\"Copy code\"\n              title=\"Copy code\"\n              className=\"absolute top-2 right-2 p-2 opacity-0 group-hover:opacity-100 group-hover:bg-zinc-100 group-hover:dark:bg-zinc-700 hover:outline hover:outline-border/75 dark:hover:outline-border rounded-md text-sm text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-400 transition\"\n              disabled={isCopied}\n              onClick={() => {\n                setIsCopied(true);\n                void navigator.clipboard.writeText(\n                  tokens\n                    .map((line) => line.map(({ content }) => content).join(\"\"))\n                    .join(\"\\n\"),\n                );\n                setTimeout(() => setIsCopied(false), 2000);\n              }}\n            >\n              {isCopied ? (\n                <CheckIcon className=\"text-emerald-600\" size={16} />\n              ) : (\n                <CopyIcon size={16} />\n              )}\n            </button>\n          )}\n        </div>\n      )}\n    </Highlight>\n  );\n};\n","import { MDXProvider } from \"@mdx-js/react\";\nimport type { ComponentProps } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Heading } from \"../components/Heading.js\";\nimport { InlineCode } from \"../components/InlineCode.js\";\nimport { SyntaxHighlight } from \"../components/SyntaxHighlight.js\";\nimport { Callout } from \"../ui/Callout.js\";\n\nexport type MdxComponentsType = ComponentProps<\n  typeof MDXProvider\n>[\"components\"];\n\nexport const MdxComponents = {\n  // @ts-expect-error Node is not in types but still gets passed\n  img: ({ node, ...props }) => {\n    if (/\\.(mp4|webm|mov|avi)$/.test(props.src ?? \"\")) {\n      return <video src={props.src} controls playsInline autoPlay loop />;\n    }\n    return <img {...props} className=\"rounded-md\" />;\n  },\n  h1: ({ children, id }) => (\n    <Heading level={1} id={id}>\n      {children}\n    </Heading>\n  ),\n  h2: ({ children, id }) => (\n    <Heading level={2} id={id}>\n      {children}\n    </Heading>\n  ),\n  h3: ({ children, id }) => (\n    <Heading level={3} id={id}>\n      {children}\n    </Heading>\n  ),\n  h4: ({ children, id }) => (\n    <Heading level={4} id={id}>\n      {children}\n    </Heading>\n  ),\n  h5: ({ children, id }) => (\n    <Heading level={5} id={id}>\n      {children}\n    </Heading>\n  ),\n  h6: ({ children, id }) => (\n    <Heading level={6} id={id}>\n      {children}\n    </Heading>\n  ),\n  // @ts-expect-error Node is not in types but still gets passed\n  a: ({ href, node, ...props }) =>\n    href && !href.startsWith(\"http\") ? (\n      <Link to={href} relative=\"path\" {...props} />\n    ) : (\n      <a href={href} target=\"_blank\" {...props} rel=\"noreferrer\" />\n    ),\n  Callout,\n  tip: (props) => <Callout type=\"tip\" {...props} />,\n  info: (props) => <Callout type=\"info\" {...props} />,\n  note: (props) => <Callout type=\"note\" {...props} />,\n  caution: (props) => <Callout type=\"caution\" {...props} />,\n  warning: (props) => <Callout type=\"caution\" {...props} />,\n  danger: (props) => <Callout type=\"danger\" {...props} />,\n\n  pre: ({ children }) => <>{children}</>,\n  code: ({ className, children, ...props }) => {\n    // `inline` provided by the rehype plugin, as react-markdown removed support for that\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const inline = (props as any).inline;\n\n    if (inline === true || inline === \"true\") {\n      return <InlineCode className={className}>{children}</InlineCode>;\n    }\n\n    const match = className?.match(/language?-(\\w+)/);\n\n    return (\n      <SyntaxHighlight\n        language={match?.[1]}\n        className=\"rounded-xl p-4 border dark:!bg-foreground/10 dark:border-transparent\"\n        showLanguageIndicator\n        code={String(children).trim()}\n      />\n    );\n  },\n} satisfies MdxComponentsType;\n","import ReactMarkdown from \"react-markdown\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkGfm from \"remark-gfm\";\nimport { visit } from \"unist-util-visit\";\nimport { MdxComponents } from \"../util/MdxComponents.js\";\n\n// same as in packages/dev-portal/framework/vite.ts\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst rehypeCodeBlockPlugin = () => (tree: any) => {\n  visit(tree, \"element\", (node, _index, parent) => {\n    if (node.tagName === \"code\") {\n      node.properties.inline = String(parent?.tagName !== \"pre\");\n    }\n  });\n};\n\nconst remarkPlugins = [remarkGfm];\nconst rehypePlugins = [rehypeCodeBlockPlugin, rehypeRaw];\n\n// other styles are defined in main.css .prose\nexport const ProseClasses = \"prose dark:prose-invert prose-neutral\";\n\nexport const Markdown = ({\n  content,\n  className,\n}: {\n  content: string;\n  className?: string;\n}) => (\n  <ReactMarkdown\n    remarkPlugins={remarkPlugins}\n    rehypePlugins={rehypePlugins}\n    components={MdxComponents}\n    className={className}\n  >\n    {content}\n  </ReactMarkdown>\n);\n"],"names":["r","f","n","clsx","falsyToString","value","cx","cva","base","config","props","ref","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","param1","cvClass","cvClassName","compoundVariantOptions","o","CLASS_PART_SEPARATOR","createClassGroupUtils","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","className","classParts","getGroupRecursive","getGroupIdForArbitraryProperty","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","classGroupFromNextClassPart","classRest","_a","validator","arbitraryPropertyRegex","arbitraryPropertyClassName","property","theme","prefix","getPrefixedClassGroupEntries","classGroup","processClassesRecursively","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","path","currentClassPartObject","pathPart","func","classGroupEntries","prefixedClassGroup","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","IMPORTANT_MODIFIER","createParseClassName","separator","experimentalParseClassName","isSeparatorSingleCharacter","firstSeparatorCharacter","separatorLength","parseClassName","modifiers","bracketDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","hasImportantModifier","baseClassName","maybePostfixModifierPosition","sortModifiers","sortedModifiers","unsortedModifiers","modifier","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","getClassGroupId","getConflictingClassGroupIds","classGroupsInConflict","classNames","result","originalClassName","variantModifier","modifierId","classId","conflictGroups","i","group","twJoin","argument","resolvedValue","string","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","fromTheme","themeGetter","arbitraryValueRegex","fractionRegex","stringLengths","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isLength","isNumber","isArbitraryLength","getIsArbitraryValue","isLengthOnly","isArbitraryNumber","isInteger","isPercent","isArbitraryValue","isTshirtSize","sizeLabels","isArbitrarySize","isNever","isArbitraryPosition","imageLabels","isArbitraryImage","isImage","isArbitraryShadow","isShadow","isAny","label","testValue","getDefaultConfig","colors","spacing","blur","brightness","borderColor","borderRadius","borderSpacing","borderWidth","contrast","grayscale","hueRotate","invert","gap","gradientColorStops","gradientColorStopPositions","inset","margin","opacity","padding","saturate","scale","sepia","skew","space","translate","getOverscroll","getOverflow","getSpacingWithAutoAndArbitrary","getSpacingWithArbitrary","getLengthWithEmptyAndArbitrary","getNumberWithAutoAndArbitrary","getPositions","getLineStyles","getBlendModes","getAlign","getZeroAndEmpty","getBreaks","getNumberAndArbitrary","twMerge","cn","inputs","stylesMap","InfoIcon","LightbulbIcon","AlertTriangleIcon","ShieldAlertIcon","Callout","type","children","title","border","bg","iconColor","titleColor","textColor","Icon","jsxs","jsx","ViewportAnchorContext","createContext","useViewportAnchor","context","useContext","useRegisterAnchorElement","elementRef","useRef","observe","unobserve","useEffect","element","useCallback","el","ViewportAnchorProvider","activeAnchor","setActiveAnchor","useState","observerRef","registeredElements","entries","entry","elements","handleScroll","hasReachedTop","hasReachedBottom","lastItem","observeFns","useMemo","heading","getComponent","level","Heading","id","registerSidebarAnchor","Component","parse","tokens","input","start","end","token","stringify","values","options","settings","nameRe","nameReJsx","emptyOptions","name","re","whitespace","thing","empty","Schema","normal","merge","definitions","normalize","Info","attribute","powers","boolean","increment","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","checks","types","DefinedInfo","mask","mark","check","own","create","definition","prop","info","xlink","_","xml","caseSensitiveTransform","attributes","caseInsensitiveTransform","xmlns","aria","html","svg","valid","dash","cap","find","schema","Type","rest","camelcase","dashes","kebab","$0","hastToReact","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","NEWLINE","FORWARD_SLASH","ASTERISK","EMPTY_STRING","TYPE_COMMENT","TYPE_DECLARATION","inlineStyleParser","style","lineno","column","updatePosition","str","lines","position","node","Position","error","msg","err","match","m","comments","rules","c","comment","pos","declaration","val","ret","trim","declarations","decls","decl","__importDefault","this","mod","cjs","inline_style_parser_1","require$$0","StyleToObject","iterator","styleObject","hasIterator","_default","styleToObject","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","origin","reason","legacyCause","parent","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","tree","filePath","developmentCreate","productionCreate","state","one","mdxExpression","mdxJsxElement","mdxEsm","root","text","parentSchema","findComponentFromName","createElementProps","createChildren","child","addNode","addChildren","expression","assert","crashEstree","createJsxElementProps","fn","jsxDEV","isStaticChildren","alignValue","createProperty","objectExpression","countsByName","count","commas","spaces","parseStyle","transformStylesToCssCasing","replacer","cause","message","toCamel","allowExpression","identifiers","isIdentifierName","place","domCasing","cssCasing","from","transformStyleToCssCasing","to","toDash","$1","urlAttributes","toString","includeImageAlt","includeHtml","all","decodeNamedCharacterReference","characterReference","char","splice","list","remove","items","chunkStart","parameters","push","hasOwnProperty","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","code","constructs","existing","before","decodeNumericCharacterReference","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","normalizeUri","skip","replace","next","factorySpace","effects","ok","max","limit","size","content","initializeContent","contentStart","afterContentStartConstruct","paragraphInitial","previous","lineStart","data","document","initializeDocument","containerConstruct","tokenizeContainer","self","stack","continued","childFlow","childToken","lineStartOffset","item","documentContinue","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","flowStart","thereIsANewContainer","thereIsNoNewContainer","containerContinue","flowContinue","writeToChild","eof","stream","seen","nok","classifyCharacter","resolveAll","events","called","resolve","attention","tokenizeAttention","resolveAllAttention","open","openingSequence","closingSequence","use","nextEvents","offset","movePoint","attentionMarkers","marker","inside","after","close","autolink","tokenizeAutolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","tokenizeBlankLine","blockQuote","tokenizeBlockQuoteStart","tokenizeBlockQuoteContinuation","exit","contStart","contBefore","characterEscape","tokenizeCharacterEscape","tokenizeCharacterReference","test","numeric","nonLazyContinuation","tokenizeNonLazyContinuation","codeFenced","tokenizeCodeFenced","closeStart","tokenizeCloseStart","initialPrefix","sizeOpen","beforeSequenceOpen","tail","sequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","startBefore","beforeSequenceClose","sequenceClose","sequenceCloseAfter","codeIndented","tokenizeCodeIndented","furtherStart","tokenizeFurtherStart","afterPrefix","atBreak","codeText","tokenizeCodeText","resolveCodeText","tailExitIndex","headEnterIndex","enter","between","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","subcontent","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","slice","tokenizeContent","resolveContent","continuationConstruct","tokenizeContinuation","chunkInside","contentEnd","contentContinue","startLookahead","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","tokenizeDefinition","titleBefore","tokenizeTitleBefore","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","tokenizeHardBreakEscape","headingAtx","tokenizeHeadingAtx","resolveHeadingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","tokenizeHtmlFlow","resolveToHtmlFlow","blankLineBefore","tokenizeBlankLineBefore","nonLazyContinuationStart","tokenizeNonLazyContinuationStart","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","continuation","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationAfter","continuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","tokenizeHtmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","tokenizeLabelEnd","resolveToLabelEnd","resolveAllLabelEnd","resourceConstruct","tokenizeResource","referenceFullConstruct","tokenizeReferenceFull","referenceCollapsedConstruct","tokenizeReferenceCollapsed","media","labelStart","defined","labelEndNok","labelEndOk","referenceNotFull","resourceStart","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFull","referenceFullAfter","referenceFullMissing","referenceCollapsedStart","referenceCollapsedOpen","labelStartImage","tokenizeLabelStartImage","labelStartLink","tokenizeLabelStartLink","lineEnding","tokenizeLineEnding","thematicBreak","tokenizeThematicBreak","sequence","tokenizeListStart","tokenizeListContinuation","tokenizeListEnd","listItemPrefixWhitespaceConstruct","tokenizeListItemPrefixWhitespace","indentConstruct","tokenizeIndent","initialSize","kind","atMarker","onBlank","endOfPrefix","otherPrefix","notBlank","notInCurrentItem","setextUnderline","tokenizeSetextUnderline","resolveToSetextUnderline","paragraph","flow","initializeFlow","initial","atBlankEnding","afterConstruct","resolver","createResolver","initializeFactory","field","initializeText","resolveAllLineSuffixes","notText","extraResolver","resolveAllText","chunks","bufferIndex","tabs","chunk","createTokenizer","parser","initialize","columnStart","resolveAllConstructs","consume","constructFactory","onsuccessfulconstruct","onsuccessfulcheck","sliceStream","sliceSerialize","now","defineSkip","write","main","addResult","expandTabs","serializeChunks","sliceChunks","line","_index","_bufferIndex","accountForPotentialSkip","chunkIndex","go","fields","construct","onreturn","bogusState","listOfConstructs","constructIndex","currentConstruct","handleListOfConstructs","handleMapOfConstructs","map","def","handleConstruct","store","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","restore","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","atTab","contentInitial","flowInitial","insideSpan","resolveText","disable","defaultConstructs","creator","postprocess","search","preprocess","atCarriageReturn","preprocessor","encoding","endPosition","characterEscapeOrReference","decodeString","decode","$2","hex","fromMarkdown","compiler","opener","link","onenterdata","codeFlow","emphasis","hardBreak","image","listItem","onenterlistitemvalue","onenterlistordered","onenterreference","strong","closer","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","onexitdata","onexitcharacterreferencemarker","onexitcharacterreferencevalue","onexitcodefenced","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","onexitsetextheadinglinesequence","onexitsetextheadingtext","configure","compile","resume","listStack","prepareList","handler","defaultOnError","length","containerBalance","listSpread","firstBlankLineIndex","tailIndex","tailEvent","and","errorHandler","onExitError","ancestor","depth","siblings","referenceType","fragment","d","combined","remarkParse","doc","blockquote","properties","strikethrough","footnoteReference","clobberPrefix","safeId","counter","reuseCounter","sup","revert","subtype","suffix","contents","imageReference","inlineCode","linkReference","results","loose","listLoose","listItemLoose","spread","table","rows","firstRow","tableContent","body","tableRow","align","cellIndex","cells","cell","tableCell","tab","trimLines","source","last","trimLine","handlers","ignore","VOID","PRIMITIVE","ARRAY","OBJECT","DATE","REGEXP","MAP","SET","ERROR","BIGINT","env","deserializer","$","as","out","unpair","arr","object","flags","set","deserialize","serialized","EMPTY","keys","typeOf","asString","shouldSkip","TYPE","serializer","strict","json","pair","serialize","lossy","structuredClone$1","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","footer","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","tailTail","structuredClone","convert","castFactory","anyFactory","propsFactory","typeFactory","tests","checkAsRecord","nodeAsRecord","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","overload","createState","definitionById","footnoteById","footnoteCounts","defaultHandlers","applyData","patch","wrap","handle","shallow","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","hName","hChildren","hProperties","toHast","foot","remarkRehype","destination","file","hastTree","bail","hasOwn","toStr","defineProperty","gOPD","isArray","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","getProperty","extend","src","copy","copyIsArray","clone","deep","prototype","trough","fns","pipeline","run","middlewareIndex","callback","output","middelware","middleware","wrapped","fnExpectsCallback","done","exception","then","basename","dirname","extname","join","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","proc","cwd","isUrl","fileUrlOrPath","urlToPath","getPathFromURLPosix","url","pathname","third","order","VFile","isUint8Array","assertNonEmpty","assertPart","stem","part","CallableInstance","proto","apply","names","p","descriptor","Processor","attacher","assertUnfrozen","transformer","realFile","vfile","assertParser","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","looksLikeAValue","complete","assertDone","assertNode","transformers","outputTree","resultingTree","attachers","namespace","addPlugin","addList","addPreset","add","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","frozen","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","components","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","transform","Fragment","colon","questionMark","numberSign","parseSelector","selector","defaultTagName","subvalue","buttonTypes","createH","caseSensitive","createAdjustMap","h","isProperties","addProperty","addChild","parsePrimitive","finalResult","svgCaseSensitiveTagNames","s","location","indices","toOffset","toPoint","eol","cr","lf","webNamespaces","fromParse5","reference","quirksMode","loc","startTag","endTag","createLocation","opening","closing","zwitch","doctype","toParse5","currentSchema","attrs","parentNode","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","ERR","DEFAULT_BUFFER_WATERLINE","Preprocessor","col","nextCp","isLastChunk","pattern","TokenType","getTokenAttr","attrName","htmlDecodeTree","xmlDecodeTree","decodeMap","fromCodePoint","codePoint","replaceCodePoint","CharCodes","TO_LOWER_BIT","BinTrieFlags","isHexadecimalCharacter","isAsciiAlphaNumeric","isEntityInAttributeInvalidEnd","EntityDecoderState","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","decodeMode","digitCount","startIdx","lastCp","expectedLength","valueLength","determineBranch","consumed","getDecoder","decoder","lastIndex","len","nodeIdx","branchCount","jumpOffset","lo","hi","mid","midVal","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","getTagID","SPECIAL_ELEMENTS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","isAsciiDigit","isAsciiUpper","isAsciiLower","isAsciiLetter","isAsciiUpperHexDigit","isAsciiLowerHexDigit","isAsciiHexDigit","toAsciiLower","isWhitespace","isScriptDataDoubleEscapeSequenceEnd","Tokenizer","_b","writeCallback","initialName","chars","attrNameFirstCh","attrLocations","ct","nextLocation","ch","excess","withoutSemicolon","masked","_cp","$$","matchResult","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","treeAdapter","tagID","popped","oldElement","newElement","idx","referenceElement","newElementID","insertionIdx","targetIdx","tagNames","targetNS","elementIdx","ns","exclusionId","NOAH_ARK_CAPACITY","EntryType","MARKER","FormattingElementList","neAttrs","candidates","neAttrsLength","neTagName","neNamespaceURI","elementAttrs","neAttrsMap","neAttr","validCandidates","candidate","cAttr","bookmarkIdx","markerIdx","createTextNode","defaultTreeAdapter","namespaceURI","newNode","referenceNode","templateElement","contentElement","publicId","systemId","doctypeNode","mode","prevNode","recipient","recipientAttrsMap","attr","j","textNode","commentNode","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","isConforming","getDocumentMode","MIME_TYPES","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","causesExit","startTagToken","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isMathMLTextIntegrationPoint","isHtmlIntegrationPoint","isIntegrationPoint","foreignNS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","Parser","fragmentContext","scriptHandler","opts","TN","documentMock","rootElement","beforeToken","tid","isTop","currentTagId","isHTML","currentToken","nextTokenizerState","docTypeNode","tmpl","beforeElement","textNodeIdx","endLine","endCol","endOffset","donor","closingToken","ctLoc","endLoc","foreignContent.isIntegrationPoint","listLength","unopenIdx","selectIdx","openElement","characterInForeignContent","tokenInInitialMode","tokenBeforeHtml","tokenBeforeHead","tokenInHead","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","characterInTableText","tokenInColumnGroup","tokenAfterBody","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","tokenInTableText","appendCommentToRootHtmlElement","appendCommentToDocument","doctypeInInitialMode","startTagInForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","unicode.CODE_POINTS","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","doctype.getDocumentMode","doctype.isConforming","templateEndTagInHead","errCode","modeInBody","htmlStartTagInBody","bodyStartTagInBody","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","noembedStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","mathStartTagInBody","foreignContent.adjustTokenMathMLAttrs","foreignContent.adjustTokenXMLAttrs","svgStartTagInBody","foreignContent.adjustTokenSVGAttrs","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","formElement","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","unicode.REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","foreignContent.causesExit","currentNs","foreignContent.adjustTokenSVGTagName","knownMdxNames","parseOptions","documentMode","handleRaw","unknown","resetTokenizer","p5","stitch","Token.TokenType","createParse5Location","cloneWithoutChildren","fakeRoot","setPoint","node_","extra","tag","html.getTagID","rehypeRaw","ccount","character","findAndReplace","ignored","pairs","toPairs","pairIndex","grandparent","change","matchObject","tupleOrList","tuple","toExpression","toFunction","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","transformGfmAutolinkLiterals","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolink","exitLiteralAutolinkEmail","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","gfmAutolinkLiteralToMarkdown","findUrl","findEmail","protocol","domain","isCorrectDomain","parts","splitUrl","atext","trailExec","trail","closingParenIndex","openingParens","closingParens","email","footnoteReferencePeek","gfmFootnoteFromMarkdown","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","enterFootnoteCall","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteDefinition","tracker","subexit","blank","constructsWithoutStrikethrough","handleDelete","peekDelete","gfmStrikethroughFromMarkdown","enterStrikethrough","exitStrikethrough","gfmStrikethroughToMarkdown","markdownTable","stringLength","defaultStringLength","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","sizes","columnIndex","toAlignment","patternInScope","listInScope","none","_1","longestStreak","substring","expected","formatCodeAsIndented","checkFence","checkQuote","quote","checkEmphasis","emphasisPeek","formatHeadingAsSetext","literalWithBreak","rank","htmlPeek","imagePeek","imageReferencePeek","alt","inlineCodePeek","formatLinkAsAutolink","linkPeek","linkReferencePeek","checkBullet","checkBulletOther","bullet","bulletOther","checkBulletOrdered","checkRule","bulletCurrent","useDifferentMarker","firstListItem","checkListItemIndent","listItemIndent","phrasing","checkStrong","strongPeek","checkRuleRepetition","repetition","gfmTableFromMarkdown","enterTable","enterCell","enterRow","exitCodeText","exitTable","gfmTableToMarkdown","alignDelimiters","around","inlineCodeWithTable","handleTable","handleTableCell","handleTableRow","serializeData","handleTableAsData","handleTableRowAsData","matrix","gfmTaskListItemFromMarkdown","exitCheck","exitParagraphWithTaskListItem","gfmTaskListItemToMarkdown","listItemWithTaskListItem","firstParaghraph","sibling","checkable","checkbox","gfmFromMarkdown","gfmToMarkdown","wwwPrefix","tokenizeWwwPrefix","tokenizeDomain","tokenizePath","tokenizeTrail","emailDomainDotTrail","tokenizeEmailDomainDotTrail","wwwAutolink","tokenizeWwwAutolink","previousWww","protocolAutolink","tokenizeProtocolAutolink","previousProtocol","emailAutolink","tokenizeEmailAutolink","previousEmail","gfmAutolinkLiteral","dot","gfmAtext","previousUnbalanced","emailDomain","emailDomainAfter","emailDomainDot","wwwStart","wwwAfter","protocolStart","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","call","callStart","callData","callEscape","labelAtMarker","whitespaceAfter","gfmStrikethrough","single","tokenizeStrikethrough","resolveAllStrikethrough","EditMap","addImpl","a","b","vecs","editMap","at","gfmTableAlign","inDelimiterRow","alignIndex","gfmTable","tokenizeTable","resolveTable","sizeB","bodyRowStart","headRowBefore","headRowStart","headRowBreak","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","currentTable","currentBody","currentCell","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","valueName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","side","tasklistCheck","tokenizeTasklistCheck","gfmTaskListItem","spaceThenNonSpace","gfm","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","InlineCode","selectOnClick","e","selection","__create","__defProp","__defProps","__getOwnPropDesc","__getOwnPropDescs","__getOwnPropNames","__getOwnPropSymbols","__getProtoOf","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","__objRest","exclude","__commonJS","cb","__export","__copyProps","except","desc","__toESM","isNodeMode","require_prism","exports","module","Prism2","lang","uniqueId","plainTextGrammar","encode","Token","deepClone","visited","v","language","defaultActivation","no","redef","lang2","insert","grammar","newToken","old","DFS","objId","propertyType","tokenList","LinkedList","addAfter","matchGrammar","toArray","hooks2","callbacks","alias","matchedStr","aliases","matchPattern","lookbehind","lookbehindLength","startNode","startPos","rematch","patterns","patternObj","greedy","currentNode","removeCount","matchStr","reach","removeFrom","removeRange","nestedRematch","array","Prism","t","l","e2","e3","e4","n2","t2","a2","r2","n3","t3","u","g","s2","a3","l2","u2","themes_exports","dracula_default","duotoneDark_default","duotoneLight_default","github_default","gruvboxMaterialDark_default","gruvboxMaterialLight_default","jettwaveDark_default","jettwaveLight_default","nightOwl_default","nightOwlLight_default","oceanicNext_default","okaidia_default","oneDark_default","oneLight_default","palenight_default","shadesOfPurple_default","synthwave84_default","ultramin_default","vsDark_default","vsLight_default","theme2","theme3","theme4","theme5","theme6","theme7","theme8","theme9","theme10","theme11","theme12","theme13","theme14","theme15","theme16","theme17","theme18","theme19","theme20","themeToDict","theme21","plain","themeDict","themeEntry","languages2","accStyle","themeToDict_default","useThemeDictionary","themeDictionary","setThemeDictionary","previousTheme","previousLanguage","useGetLineProps","useGetTokenProps","styleForToken","useCallback2","clsx2","newlineRe","normalizeEmptyLines","appendTypes","typesSize","normalizeTokens","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i2","normalizeTokens_default","useTokenize","prism","prismRef","useRef2","prismConfig","Highlight","_language","getLineProps","getTokenProps","Highlight2","createElement","ThemeContext","useTheme","SyntaxHighlight","copyable","isDark","isCopied","setIsCopied","themes","CheckIcon","CopyIcon","MdxComponents","href","Link","inline","rehypeCodeBlockPlugin","ProseClasses","ReactMarkdown"],"mappings":"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","x_google_ignoreList":[0,1,2,3,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222]}