import { type ReactElement } from "react";
import { type RouteObject } from "react-router-dom";
import type { Sidebar } from "../../config/validators/SidebarSchema.js";
import { MdxComponentsType } from "../util/MdxComponents.js";
import { DevPortalContext, type ApiIdentity } from "./DevPortalContext.js";
export type DevPortalPlugin = CommonPlugin | ProfileMenuPlugin | NavigationPlugin | ApiIdentityPlugin | SearchProviderPlugin;
export interface NavigationPlugin {
    getRoutes: () => RouteObject[];
    getSidebar?: (path: string) => Promise<Sidebar>;
}
export interface ApiIdentityPlugin {
    getIdentities: (context: DevPortalContext) => Promise<ApiIdentity[]>;
}
export interface SearchProviderPlugin {
    renderSearch: (o: {
        isOpen: boolean;
        onClose: () => void;
    }) => React.JSX.Element | null;
}
export interface ProfileMenuPlugin {
    getProfileMenuItems: (context: DevPortalContext) => ProfileNavigationItem[];
}
export type ProfileNavigationItem = {
    label: string;
    path?: string;
    children?: ProfileNavigationItem[];
};
export interface CommonPlugin {
    initialize?: (context: DevPortalContext) => Promise<void | boolean> | void | boolean;
    getHead?: () => ReactElement | undefined;
    getMdxComponents?: () => MdxComponentsType;
}
export declare const isProfileMenuPlugin: (obj: DevPortalPlugin) => obj is ProfileMenuPlugin;
export declare const isNavigationPlugin: (obj: DevPortalPlugin) => obj is NavigationPlugin;
export declare const isSearchPlugin: (obj: DevPortalPlugin) => obj is SearchProviderPlugin;
export declare const needsInitialization: (obj: DevPortalPlugin) => obj is CommonPlugin;
export declare const hasHead: (obj: DevPortalPlugin) => obj is CommonPlugin;
export declare const isMdxProviderPlugin: (obj: DevPortalPlugin) => obj is CommonPlugin;
export declare const isApiIdentityPlugin: (obj: DevPortalPlugin) => obj is ApiIdentityPlugin;
