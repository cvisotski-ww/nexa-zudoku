import { DevPortalContext } from "../../core/DevPortalContext.js";
import { type ApiIdentityPlugin, type DevPortalPlugin, ProfileMenuPlugin } from "../../core/plugins.js";
export type ApiKeyService = {
    getKeys: (context: DevPortalContext) => Promise<ApiKey[]>;
    rollKey?: (id: string, context: DevPortalContext) => Promise<void>;
    deleteKey?: (id: string, context: DevPortalContext) => Promise<void>;
    updateKeyDescription?: (apiKey: {
        id: string;
        description: string;
    }, context: DevPortalContext) => Promise<void>;
    getUsage?: (apiKeys: string[], context: DevPortalContext) => Promise<void>;
    createKey?: (apiKey: {
        description: string;
        expiresOn?: string;
    }, context: DevPortalContext) => Promise<void>;
};
export type GetApiKeysOptions = ApiKeyService | {
    endpoint: string;
} | object;
export type ApiKeyPluginOptions = object & GetApiKeysOptions;
export interface ApiKey {
    id: string;
    description?: string;
    createdOn?: string;
    updatedOn?: string;
    expiresOn?: string;
    key: string;
}
export declare const apiKeyPlugin: (options: ApiKeyPluginOptions) => DevPortalPlugin & ApiIdentityPlugin & ProfileMenuPlugin;
