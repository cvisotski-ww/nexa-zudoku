import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as Tabs from "@radix-ui/react-tabs";
import { SyntaxHighlight } from "../../components/SyntaxHighlight.js";
import { cn } from "../../util/cn.js";
import * as SidecarBox from "./SidecarBox.js";
import { generateSchemaExample } from "./util/generateSchemaExample.js";
export const ResponsesSidecarBox = ({ responses, selectedResponse, onSelectResponse, }) => (_jsx(SidecarBox.Root, { children: _jsxs(Tabs.Root, { defaultValue: responses[0]?.statusCode, value: selectedResponse, onValueChange: (value) => onSelectResponse(value), children: [_jsxs(SidecarBox.Head, { className: "text-xs flex flex-col gap-2 pb-0", children: [_jsx("span", { className: "font-mono", children: "Example Responses" }), _jsx(Tabs.List, { className: "flex gap-2", children: responses.map((response) => (_jsx(Tabs.Trigger, { value: response.statusCode, className: cn("text-xs font-mono px-1.5 py-1 pb-px translate-y-px border-b-2 border-transparent rounded-t cursor-pointer", "data-[state=active]:text-primary data-[state=active]:dark:text-inherit data-[state=active]:border-primary", "hover:border-accent-foreground/25"), children: response.statusCode }, response.statusCode))) })] }), responses.map((response) => {
                const schema = response.content?.[0]?.schema;
                return (_jsxs(Tabs.Content, { value: response.statusCode, children: [_jsx(SidecarBox.Body, { className: "p-0", children: schema ? (_jsx(SyntaxHighlight, { language: "json", noBackground: true, className: "text-xs max-h-[450px] p-2", code: JSON.stringify(generateSchemaExample(schema), null, 2) })) : (_jsx("span", { className: "text-muted-foreground font-mono italic text-xs", children: "Empty Response" })) }), _jsx(SidecarBox.Footer, { className: "flex justify-end text-xs", children: response.description })] }, response.statusCode));
            })] }) }));
//# sourceMappingURL=ResponsesSidecarBox.js.map