import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { SyntaxHighlight } from "../../../components/SyntaxHighlight.js";
import { Card } from "../../../ui/Card.js";
import { SimpleSelect } from "../SimpleSelect.js";
const mimeTypeToLanguage = (mimeType) => {
    const mimeTypeMapping = {
        "application/json": "json",
        "text/json": "json",
        "text/html": "html",
        "text/css": "css",
        "text/javascript": "javascript",
        "application/xml": "xml",
        "application/xhtml+xml": "xhtml",
    };
    return Object.entries(mimeTypeMapping).find(([mime]) => mimeType.includes(mime))?.[1];
};
const detectLanguage = (headers) => {
    const contentType = headers.get("Content-Type") || "";
    return mimeTypeToLanguage(contentType);
};
const tryParseJson = (body) => {
    try {
        return JSON.stringify(JSON.parse(body), null, 2);
    }
    catch {
        return null;
    }
};
export const ResponseTab = ({ body = "", headers, }) => {
    const detectedLanguage = detectLanguage(headers);
    const jsonContent = tryParseJson(body);
    const beautifiedBody = jsonContent || body;
    const [view, setView] = useState(jsonContent ? "formatted" : "raw");
    return (_jsxs("div", { className: "flex flex-col gap-2", children: [_jsx(Card, { className: "shadow-none", children: _jsx(SyntaxHighlight, { language: view === "raw" ? (jsonContent ? "plain" : detectedLanguage) : "json", noBackground: true, 
                    // playground dialog has h-5/6 â‰ˆ 83.333vh
                    className: "overflow-x-auto p-4 text-xs max-h-[calc(83.333vh-180px)]", code: view === "raw" ? body : beautifiedBody }) }), jsonContent && (_jsx("div", { className: "flex justify-end", children: _jsx(SimpleSelect, { value: view, onChange: (e) => setView(e.target.value), options: [
                        { value: "formatted", label: "Formatted" },
                        { value: "raw", label: "Raw" },
                    ] }) }))] }));
};
//# sourceMappingURL=ResponseTab.js.map