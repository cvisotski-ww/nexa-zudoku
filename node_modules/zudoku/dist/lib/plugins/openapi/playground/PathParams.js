import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { EraserIcon } from "lucide-react";
import { Controller, useFieldArray } from "react-hook-form";
import { Button } from "../../../ui/Button.js";
import { Input } from "../../../ui/Input.js";
import { cn } from "../../../util/cn.js";
import { ColorizedParam } from "../ColorizedParam.js";
export const PathParams = ({ control, }) => {
    const { fields } = useFieldArray({
        control,
        name: "pathParams",
    });
    return (_jsx("table", { className: "w-full table-auto [&_td]:border [&_td]:py-1 [&_td]:px-2", children: _jsx("tbody", { children: fields.map((part, i) => (_jsxs("tr", { className: "hover:bg-accent/40", children: [_jsx("td", { children: _jsx(Controller, { control: control, name: `pathParams.${i}.value`, render: ({ field }) => (_jsxs("div", { children: [_jsx(ColorizedParam, { slug: part.name, name: part.name, backgroundOpacity: "25%", borderOpacity: field.value ? "100%" : "0", className: cn("font-mono text-xs m-2", !field.value && "opacity-60") }), "*"] })) }) }), _jsx("td", { children: _jsxs("div", { className: "flex justify-between items-center", children: [_jsx(Controller, { control: control, name: `pathParams.${i}.value`, render: ({ field }) => (_jsx(Input, { ...field, placeholder: "Enter value", className: "border-0 shadow-none ring-0 font-mono text-xs" })) }), _jsx(Controller, { control: control, name: `pathParams.${i}.value`, render: ({ field }) => (_jsx(Button, { size: "icon", type: "button", variant: "ghost", "aria-label": "Clear value", className: cn("ms-2", field.value.length === 0
                                            ? "opacity-0 pointer-events-none"
                                            : "opacity-100"), title: "Clear value", onClick: () => field.onChange(""), children: _jsx(EraserIcon, { size: 16 }) })) })] }) })] }, part.id))) }) }));
};
//# sourceMappingURL=PathParams.js.map