import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { MoonStarIcon, SunIcon } from "lucide-react";
import { memo } from "react";
import { Link } from "react-router-dom";
import { useAuth } from "../authentication/hook.js";
import { isProfileMenuPlugin } from "../core/plugins.js";
import { Button } from "../ui/Button.js";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuPortal, DropdownMenuSeparator, DropdownMenuSub, DropdownMenuSubContent, DropdownMenuSubTrigger, DropdownMenuTrigger, } from "../ui/DropdownMenu.js";
import { cn } from "../util/cn.js";
import { Banner } from "./Banner.js";
import { useTheme } from "./context/ThemeContext.js";
import { useZudoku } from "./context/ZudokuContext.js";
import { MobileTopNavigation } from "./MobileTopNavigation.js";
import { Search } from "./Search.js";
import { Slotlet } from "./SlotletProvider.js";
import { TopNavigation } from "./TopNavigation.js";
const RecursiveMenu = ({ item }) => {
    return item.children ? (_jsxs(DropdownMenuSub, { children: [_jsx(DropdownMenuSubTrigger, { children: item.label }), _jsx(DropdownMenuPortal, { children: _jsx(DropdownMenuSubContent, { children: item.children.map((item, i) => (
                    // eslint-disable-next-line react/no-array-index-key
                    _jsx(RecursiveMenu, { item: item }, i))) }) })] }, item.label)) : (_jsx(Link, { to: item.path ?? "", children: _jsx(DropdownMenuItem, { children: item.label }, item.label) }));
};
export const Header = memo(function HeaderInner() {
    const auth = useAuth();
    const [isDark, toggleTheme] = useTheme();
    const { isAuthenticated, profile, isAuthEnabled } = useAuth();
    const context = useZudoku();
    const { page, plugins } = context;
    const accountItems = plugins
        .filter((p) => isProfileMenuPlugin(p))
        .flatMap((p) => p.getProfileMenuItems(context))
        .map((i) => _jsx(RecursiveMenu, { item: i }, i.label));
    const ThemeIcon = isDark ? MoonStarIcon : SunIcon;
    return (_jsxs("header", { className: "sticky lg:top-0 z-10 bg-background/80 backdrop-blur w-full", children: [_jsx(Banner, {}), _jsxs("div", { className: "max-w-screen-2xl mx-auto", children: [_jsxs("div", { className: "grid grid-cols-2 lg:grid-cols-[calc(var(--side-nav-width))_1fr] lg:gap-12 items-center border-b px-10 lg:px-12 h-[--top-header-height]", children: [_jsx("div", { className: "flex", children: _jsx(Link, { to: "/", children: _jsxs("div", { className: "flex items-center gap-3.5", children: [page?.logo && (_jsxs(_Fragment, { children: [_jsx("img", { src: page.logo.src.light, alt: page.logo.alt ?? page.pageTitle, style: { width: page.logo.width }, className: cn("h-10", isDark && "hidden"), loading: "lazy" }), _jsx("img", { src: page.logo.src.dark, alt: page.logo.alt ?? page.pageTitle, style: { width: page.logo.width }, className: cn("h-10", !isDark && "hidden"), loading: "lazy" })] })), _jsx("span", { className: "font-bold text-2xl text-foreground/85 tracking-wide", children: page?.pageTitle })] }) }) }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-[--sidecar-grid-cols] items-center gap-8", children: [_jsx("div", { className: "w-full justify-center hidden lg:flex", children: _jsx(Search, {}) }), _jsx(MobileTopNavigation, {}), _jsxs("div", { className: "hidden lg:flex items-center justify-self-end text-sm gap-2", children: [_jsx(Slotlet, { name: "head-navigation-start" }), isAuthEnabled && !isAuthenticated ? (_jsx(Button, { variant: "ghost", onClick: () => auth.login(), children: "Login" })) : (accountItems.length > 0 && (_jsxs(DropdownMenu, { modal: false, children: [_jsx(DropdownMenuTrigger, { asChild: true, children: _jsx(Button, { variant: "ghost", children: profile?.email ? `${profile.email}` : "My Account" }) }), _jsxs(DropdownMenuContent, { className: "w-56", children: [_jsx(DropdownMenuLabel, { children: "My Account" }), _jsx(DropdownMenuSeparator, {}), accountItems] })] }))), _jsx("button", { type: "button", "aria-label": isDark ? "Switch to light mode" : "Switch to dark mode", className: "cursor-pointer hover:bg-secondary p-2.5 -m-2.5 rounded-full", onClick: toggleTheme, children: _jsx(ThemeIcon, { size: 18 }) }), _jsx(Slotlet, { name: "head-navigation-end" })] })] })] }), _jsx(Slotlet, { name: "top-navigation-before" }), _jsx(TopNavigation, {}), _jsx(Slotlet, { name: "top-navigation-after" })] })] }));
});
//# sourceMappingURL=Header.js.map