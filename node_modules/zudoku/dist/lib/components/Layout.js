import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Helmet } from "@zudoku/react-helmet-async";
import { PanelLeftIcon } from "lucide-react";
import { Suspense, useEffect, useRef } from "react";
import { Outlet, useLocation } from "react-router-dom";
import { Drawer, DrawerTrigger } from "../ui/Drawer.js";
import { cn } from "../util/cn.js";
import { useScrollToAnchor } from "../util/useScrollToAnchor.js";
import { useScrollToTop } from "../util/useScrollToTop.js";
import { useViewportAnchor } from "./context/ViewportAnchorContext.js";
import { useZudoku } from "./context/ZudokuContext.js";
import { Header } from "./Header.js";
import { Sidebar } from "./navigation/Sidebar.js";
import { Slotlet } from "./SlotletProvider.js";
import { Spinner } from "./Spinner.js";
export const Layout = ({ children }) => {
    const location = useLocation();
    const { setActiveAnchor } = useViewportAnchor();
    const { meta, authentication } = useZudoku();
    useScrollToAnchor();
    useScrollToTop();
    const previousLocationPath = useRef(location.pathname);
    useEffect(() => {
        // Initialize the authentication plugin
        authentication?.pageLoad?.();
    }, [authentication]);
    useEffect(() => {
        // always reset on location change
        if (location.pathname !== previousLocationPath.current) {
            setActiveAnchor("");
        }
        previousLocationPath.current = location.pathname;
    }, [location.pathname, setActiveAnchor]);
    return (_jsxs(_Fragment, { children: [import.meta.env.MODE === "standalone" && (_jsx("style", { children: `:root { --top-nav-height: 0px; }` })), _jsxs(Helmet, { titleTemplate: meta?.title, children: [meta?.description && (_jsx("meta", { name: "description", content: meta.description })), meta?.favicon && _jsx("link", { rel: "icon", href: meta.favicon })] }), _jsx(Slotlet, { name: "layout-before-head" }), _jsx(Header, {}), _jsx(Slotlet, { name: "layout-after-head" }), _jsx("div", { className: "w-full max-w-screen-2xl mx-auto px-10 lg:px-12", children: _jsx(Suspense, { fallback: _jsx("main", { className: "grid h-[calc(100vh-var(--header-height))] place-items-center", children: _jsx(Spinner, {}) }), children: _jsxs(Drawer, { direction: "left", children: [_jsx(Sidebar, {}), _jsx("div", { className: cn("lg:hidden -mx-10 px-10 py-2 sticky bg-background/80 backdrop-blur z-10 top-0 left-0 right-0 border-b", "peer-data-[navigation=false]:hidden"), children: _jsxs(DrawerTrigger, { className: "flex items-center gap-2", children: [_jsx(PanelLeftIcon, { size: 16, strokeWidth: 1.5 }), _jsx("span", { className: "text-sm", children: "Menu" })] }) }), _jsxs("main", { className: cn("h-full dark:border-white/10 translate-x-0", "lg:overflow-visible", 
                                // This works in tandem with the `SidebarWrapper` component
                                "lg:peer-data-[navigation=true]:w-[calc(100%-var(--side-nav-width))]", "lg:peer-data-[navigation=true]:translate-x-[--side-nav-width] lg:peer-data-[navigation=true]:pl-12"), children: [_jsx(Slotlet, { name: "zudoku-before-content" }), children ?? _jsx(Outlet, {}), _jsx(Slotlet, { name: "zudoku-after-content" })] })] }) }) })] }));
};
//# sourceMappingURL=Layout.js.map