import { jsx as _jsx } from "react/jsx-runtime";
import { HelmetProvider } from "@zudoku/react-helmet-async";
import { StrictMode } from "react";
import { RouterProvider } from "react-router-dom";
import { StaticRouterProvider, } from "react-router-dom/server.js";
import { StaggeredRenderContext } from "../plugins/openapi/StaggeredRender.js";
const Bootstrap = ({ router, hydrate = false, }) => {
    return (_jsx(StrictMode, { children: _jsx(HelmetProvider, { children: _jsx(StaggeredRenderContext.Provider, { value: { stagger: !hydrate }, children: _jsx(RouterProvider, { router: router }) }) }) }));
};
const BootstrapStatic = ({ router, context, helmetContext, }) => (_jsx(StrictMode, { children: _jsx(HelmetProvider, { context: helmetContext, children: _jsx(StaticRouterProvider, { router: router, context: context }) }) }));
export { Bootstrap, BootstrapStatic };
//# sourceMappingURL=Bootstrap.js.map