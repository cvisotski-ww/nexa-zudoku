import { jsx as _jsx } from "react/jsx-runtime";
import { useCallback, useEffect, useState } from "react";
import { ThemeContext } from "./ThemeContext.js";
export const ThemeProvider = (props) => {
    const [dark, setDark] = useState(false);
    // On mount, read the preferred theme from the persistence
    useEffect(() => {
        const theme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)");
        const isDark = theme === "dark" || (!theme && prefersDark.matches);
        setDark(isDark);
    }, [dark]);
    // To toggle between dark and light modes
    const toggle = useCallback(() => {
        const toggled = !dark;
        document.documentElement.classList.toggle("dark", toggled);
        localStorage.setItem("theme", toggled ? "dark" : "light");
        setDark(toggled);
    }, [dark]);
    const value = [dark, toggle];
    return _jsx(ThemeContext.Provider, { value: value, ...props });
};
//# sourceMappingURL=ThemeProvider.js.map