import path from "node:path";
import { printDiagnosticsToConsole } from "../cli/common/output.js";
export const createConfigReloadPlugin = (initialConfig, onConfigChange) => {
    let currentConfig = initialConfig;
    let importDependencies = initialConfig.__meta.dependencies;
    const plugin = {
        name: "zudoku-config-reload",
        configureServer: ({ watcher, restart }) => {
            if (!onConfigChange)
                return;
            watcher.on("change", async (file) => {
                if (!file.startsWith(currentConfig.rootDir))
                    return;
                if (!importDependencies.includes(file))
                    return;
                const newConfig = await onConfigChange();
                currentConfig = { ...initialConfig, ...newConfig };
                importDependencies = newConfig.__meta.dependencies;
                // Assume `.tsx` files are handled by HMR (skip if the config file itself changed)
                if (file !== newConfig.__meta.path && file.endsWith(".tsx"))
                    return;
                await restart();
                printDiagnosticsToConsole(`[${new Date().toLocaleTimeString()}]: Config ${path.basename(currentConfig.__meta.path)} changed. Restarted server.`);
            });
        },
    };
    return [plugin, () => currentConfig];
};
//# sourceMappingURL=plugin-config-reload.js.map