import { type ConfigEnv, type InlineConfig } from "vite";
import type { ZudokuConfig, ZudokuPluginOptions } from "../config/config.js";
export declare const zudokuConfigFiles: string[];
export declare function getConfigFilePath(rootDir: string): Promise<string>;
export type ZudokuConfigEnv = ConfigEnv & {
    mode: "development" | "production";
    forceReload?: boolean;
};
export type LoadedConfig = ZudokuConfig & {
    __meta: {
        dependencies: string[];
        path: string;
    };
};
export declare function loadZudokuConfig(rootDir: string, forceReload?: boolean): Promise<LoadedConfig>;
export declare function getAppClientEntryPath(): string;
export declare function getAppServerEntryPath(): string;
export declare function getPluginOptions({ dir, mode, }: {
    dir: string;
    mode: ZudokuPluginOptions["mode"];
}): ZudokuPluginOptions;
export declare function getViteConfig(dir: string, configEnv: ZudokuConfigEnv, onConfigChange?: (config: LoadedConfig) => void): Promise<InlineConfig>;
