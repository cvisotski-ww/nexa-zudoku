import { ReactElement } from 'react';
import { InkeepShadowProps } from '../InkeepShadow';
export interface WithStylesProps {
    stylesheets?: ReactElement[];
    stylesheetUrls?: string[];
}
export interface WithCustomStylesProps {
    customStyles?: JSX.Element;
    shouldRender: boolean;
    inkeepShadowProps?: InkeepShadowProps;
}
export declare const withStyledShadowDOM: <P extends object>(Component: import("react").ComponentType<P>) => ({ customStyles, shouldRender, inkeepShadowProps, ...props }: InkeepShadowProps & P & WithCustomStylesProps) => import("react/jsx-runtime").JSX.Element;
export declare const withStyles: <P extends object>(Component: import("react").ComponentType<P & WithCustomStylesProps>) => ({ stylesheets, stylesheetUrls, ...props }: P & WithStylesProps) => import("react/jsx-runtime").JSX.Element;
export declare const withPortal: <P extends object>(Component: import("react").ComponentType<P>) => (props: P) => import("react/jsx-runtime").JSX.Element;
