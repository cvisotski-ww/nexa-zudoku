import { splitProps, getSlotCompoundVariant } from '../helpers.mjs';
import { createRecipe } from './create-recipe.mjs';

const switchToChatButtonDefaultVariants = {
  "variant": "primary"
}
const switchToChatButtonCompoundVariants = []

const switchToChatButtonSlotNames = [
  [
    "wrapper",
    "switch-to-chat-button__wrapper"
  ],
  [
    "container",
    "switch-to-chat-button__container"
  ],
  [
    "icon",
    "switch-to-chat-button__icon"
  ],
  [
    "text",
    "switch-to-chat-button__text"
  ]
]
const switchToChatButtonSlotFns = /* @__PURE__ */ switchToChatButtonSlotNames.map(([slotName, slotKey]) => [slotName, createRecipe(slotKey, switchToChatButtonDefaultVariants, getSlotCompoundVariant(switchToChatButtonCompoundVariants, slotName))])

const switchToChatButtonFn = (props = {}) => {
  return Object.fromEntries(switchToChatButtonSlotFns.map(([slotName, slotFn]) => [slotName, slotFn(props)]))
}

const switchToChatButtonVariantKeys = [
  "variant"
]

export const switchToChatButton = /* @__PURE__ */ Object.assign(switchToChatButtonFn, {
  __recipe__: false,
  __name__: 'switchToChatButton',
  raw: (props) => props,
  variantKeys: switchToChatButtonVariantKeys,
  variantMap: {
  "variant": [
    "subtle",
    "primary"
  ]
},
  splitVariantProps(props) {
    return splitProps(props, switchToChatButtonVariantKeys)
  },
})